{"version":3,"sources":["components/notification/Notification.js","components/topbar/TopBar.js","components/itemlistsTangible/ItemListsTangible.js","components/itemlistsIntangible/ItemListsIntangible.js","components/ads/Ads.js","context/AuthReducer.js","context/AuthContext.js","components/groupIcon/GroupIcon.js","components/groupIconContainer/GroupIconContainer.js","pages/home/Home.js","pages/register/Register.jsx","components/sidebar/SideBar.js","components/itemListing/ItemListing.js","components/star/Star.jsx","components/RatingIcon/RatingIcon.jsx","components/userReview/UserReview.jsx","pages/userlisting/UserListing.js","pages/review/Review.js","pages/product/Product.js","pages/createListing/CreateListing.js","components/singleItem/SingleItem.js","components/swapAway/SwapAway.js","components/userItemCommand/UserItemCommand.js","pages/item/Item.js","pages/login/Login.jsx","components/conversation/Conversation.jsx","components/message/Message.jsx","pages/chat/Chat.jsx","pages/myGroups/MyGroups.js","pages/settings/Settings.js","components/groupSidebar/GroupSidebar.js","components/groupSharePost/GroupSharePost.js","components/comment/Comment.jsx","components/post/Post.jsx","pages/group/Group.js","App.js","reportWebVitals.js","index.js"],"names":["Notification","notification","handleAccept","handleDeny","className","senderName","invitationName","Row","Col","onClick","TopBar","currentUser","PF","process","history","useHistory","useState","searchText","setSearchText","userNotifications","setUserNotifications","useEffect","a","axios","get","_id","res","status","data","console","log","getUserNotifications","navbarNotificationTitle","htmlColor","delete","filter","noti","put","invitationId","Navbar","expand","Brand","push","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Search","placeholder","value","onChange","e","target","onKeyDown","key","preventDefault","match","length","to","TextsmsOutlined","DropdownButton","variant","title","map","Dropdown","Item","username","profilePicture","ItemLists","handleClick","category","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","Button","Accessibility","Face","SportsFootball","Home","DriveEta","Redeem","Computer","Apps","ItemListsIntangible","OutdoorGrill","Room","Forum","Fastfood","BeachAccess","SportsHandball","SportsEsports","Ads","Carousel","interval","AuthReducer","state","action","type","user","isFetching","error","sockio","payload","sock","INITIAL_STATE","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","Provider","GroupIcon","groupImg","groupName","groupId","create","useContext","newGroupName","setNewGroupName","handleCreateNewGroup","newGroup","creatorId","members","description","post","rows","GroupIconContainer","recommendedGroups","group","setRecommendedGroups","getRecommendedGroups","Register","email","setEmail","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleEmail","setCustomValidity","response","handleUsername","onSubmit","required","SideBar","sidebarUser","handleLogOut","logoutCall","disconnect","textColor","backgroundColor","prefix","style","textAlign","Rating","cumulativeRating","ratedByUsers","precision","readOnly","LocalMall","SwapVert","Settings","padding","ExitToApp","ItemListing","item","inPost","Card","Img","img","Body","Title","marginRight","Chip","label","size","color","marginBottom","marginTop","idealSwaps","tags","Text","desc","Star","props","fill","class","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","RatingIcon","index","rating","hoverRating","onMouseEnter","onMouseLeave","onSaveRating","selected","notSelected","useMemo","height","width","UserReview","review","doneReview","handleSubmit","handleDelete","setRating","setHoverRating","reviewer","setReviewer","reviewText","setReviewText","reviewerId","getReviewUser","UserListing","useParams","displayItems","setDisplayItems","viewingCategory","setViewingCategory","profileUser","setProfileUser","tabValue","setTabValue","getProfileUser","getDisplayItems","Container","Paper","margin","Tabs","indicatorColor","centered","Tab","xs","md","Review","reviews","setReviews","alreadyReviewed","setAlreadyReviewed","myReview","setMyReview","initialCumRating","setInitialCumRating","initialRatedBy","setInitialRatedBy","filterMyReview","getReviews","getAlreadyReviewed","newReview","revieweeId","Product","categoryName","pageType","setItems","getItems","charAt","toUpperCase","slice","lg","s","useStyles","makeStyles","theme","root","spacing","baseStyle","flex","display","flexDirection","alignItems","borderWidth","borderRadius","borderColor","borderStyle","outline","transition","activeStyle","acceptStyle","rejectStyle","CreateListing","classes","files","setFiles","form","setForm","errors","setErrors","idealCategories","setIdealCategories","swapCategories","setSwapCategories","onDrop","useCallback","acceptedFiles","images","newFiles","file","Object","assign","preview","URL","createObjectURL","customFileName","Date","now","toString","concat","name","allFiles","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","forEach","revokeObjectURL","setField","field","findFormErrors","tangible","newErrors","keys","newItemSwapCat","categoryObject","toLowerCase","newItemIdealSwap","FormData","i","append","uploadFileRes","newItem","userId","imagePaths","categories","Form","Group","controlId","Control","isInvalid","fontSize","Feedback","Label","maxlength","as","disabled","hidden","Autocomplete","multiple","limitTags","options","getOptionLabel","option","newValue","renderInput","params","TextField","SingleItem","imgLinkArray","imgLink","SwapAway","itemUserId","itemUser","setItemUser","getItemUser","handleSwapAway","newConvo","Alert","sm","Heading","UserItemCommand","itemStatus","handleReserve","handleUnreserve","handleSwap","handleUnswap","showInput","setShowInput","input","setInput","setError","handleKeyDownSwap","parties","itemId","setItem","copyLinkText","setCopyLinkText","getItem","agreementId","handleCopyLink","dummy","document","createElement","text","window","location","href","body","appendChild","select","execCommand","removeChild","marginLeft","Login","usernameRef","useRef","passwordRef","checkCredentials","current","then","handlePassword","userCredential","io","on","emit","loginCall","position","top","left","ref","Conversation","active","lastMessageText","lastMessageTime","online","displayTimeAgo","setDisplayTimeAgo","setUser","format","setInterval","clearInterval","getUser","Message","message","own","pictureLink","show","setShow","createdAt","Chat","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","currentChatWith","setCurrentChatWith","currentChatWithLastActive","setCurrentChatWithLastActive","scrollRef","initialActiveConvoId","getInitialActiveConvo","sender","senderId","includes","prev","users","chatFollow","f","some","u","getConversations","getMessages","friendId","find","m","getCurrentChatWith","updateLastActive","timeago","newLastActive","lastActive","handleSendMessage","conversationId","updateRes","receiverId","member","handleGenerateAgreement","scrollIntoView","behavior","c","MyGroups","myGroups","setMyGroups","getMyGroups","xl","imgFile","setImgFile","showPassword","imgError","setImgError","passwordUpdateValid","setPasswordUpdateValid","handleChangePicture","updatePicture","newProfilePicture","imagePath","newUser","handleSubmitPassword","updatePassword","currentPassword","newPassword","wrongPasswordError","newFile","placeHolder","isValid","checked","GroupSidebar","isGroupMember","handleLeave","handleJoin","handleUpdateGroup","showInviteInput","setShowInviteInput","newImgLink","setNewImgLink","inviteError","setInviteError","inviteNameInput","setInviteNameInput","inviteSuccess","setInviteSuccess","editedDescription","setEditedDescription","editMode","setEditMode","descriptionError","setDescriptionError","handleKeyDownInvite","newNotification","handleKeyDownDescription","newGroupDescription","inviteComponent","handleUploadGroupImage","imageFile","newGroupPicture","alert","getElementById","click","GroupSharePost","handleAdd","setDescription","setItemId","itemError","setItemError","handlePost","findItemRes","itemIdTemp","descriptionTemp","Comment","commentText","commentUserId","commentUser","setCommentUser","getCommentUser","Post","canCommentAndLike","postUser","setPostUser","postComments","setPostComments","postItem","setPostItem","incomingComment","setIncomingComment","liked","setLiked","displayLikeCount","setDisplayLikeCount","postUserId","getPostUser","getPostComments","getPostItem","likedBy","handleKeyDownComment","newComment","postId","handleDislike","handleLike","comment","displayPosts","setDisplayPosts","setGroup","setIsGroupMember","getGroup","getDisplayPosts","newPost","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.200fa9ff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./notification.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Notification({\r\n  notification,\r\n  handleAccept,\r\n  handleDeny,\r\n}) {\r\n  return (\r\n    <div className=\"notiWrapper\">\r\n      <div className=\"notiContainer\">\r\n        <span className=\"notiContainerUsername\">\r\n          {notification ? notification.senderName : \"username\"}\r\n        </span>{\" \"}\r\n        has invited you to join{\" \"}\r\n        <span className=\"notiContainerGroupName\">\r\n          {notification ? notification.invitationName : \"group name\"}\r\n        </span>\r\n        .\r\n      </div>\r\n      <Row className=\"notibuttonGroupWrapper\">\r\n        <Col>\r\n          <div\r\n            className=\"acceptButtonWrapper\"\r\n            onClick={() => handleAccept(notification)}\r\n          >\r\n            <div className=\"acceptButton\">\r\n              <span className=\"acceptButtonText\">Accept</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <div\r\n            className=\"denyButtonWrapper\"\r\n            onClick={() => handleDeny(notification)}\r\n          >\r\n            <div className=\"denyButton\">\r\n              <span className=\"denyButtonText\">Deny</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport \"./topbar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Search, TextsmsOutlined } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Notification from \"../notification/Notification\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TopBar({ currentUser }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [userNotifications, setUserNotifications] = useState([]);\r\n\r\n  const handleClickHome = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const handleClickCreate = () => {\r\n    history.push(\"/create\");\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if ((searchText.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"search string is empty!\");\r\n      } else {\r\n        history.push(\"/product/search/\" + searchText);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getUserNotifications = async () => {\r\n      if (currentUser) {\r\n        try {\r\n          const res = await axios.get(\r\n            \"/api/notifications/filter?userId=\" + currentUser._id\r\n          );\r\n          if (res.status === 200) {\r\n            setUserNotifications(res.data);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n    getUserNotifications();\r\n  }, [currentUser]);\r\n\r\n  const navbarNotificationTitle = (\r\n    <NotificationsIcon className=\"userNotificationIcon\" htmlColor=\"orange\" />\r\n  );\r\n\r\n  const handleAccept = async (notification) => {\r\n    // alert(\"clicked on accept!\");\r\n    if (notification && currentUser) {\r\n      try {\r\n        const deleteRes = await axios.delete(\r\n          \"/api/notifications?notificationId=\" + notification._id\r\n        );\r\n        if (deleteRes.status === 200) {\r\n          setUserNotifications(\r\n            userNotifications.filter((noti) => noti._id !== notification._id)\r\n          );\r\n        }\r\n        const addGroupRes = await axios.put(\r\n          \"/api/groups/\" +\r\n            notification.invitationId +\r\n            \"/addMember/\" +\r\n            currentUser._id\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeny = async (notification) => {\r\n    // alert(\"clicked on deny!\");\r\n    if (notification && currentUser) {\r\n      try {\r\n        const deleteRes = await axios.delete(\r\n          \"/api/notifications?notificationId=\" + notification._id\r\n        );\r\n        if (deleteRes.status === 200) {\r\n          setUserNotifications(\r\n            userNotifications.filter((noti) => noti._id !== notification._id)\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"topbarWrapper fixed-top\" expand=\"lg\">\r\n      <Navbar.Brand onClick={() => handleClickHome()}>\r\n        <img className=\"ReHashLogo\" src={PF + \"ReHashLogo.png\"} alt=\"\" />\r\n        <span className=\"logoText\">ReHash</span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"collapseBar\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link className=\"swap\" onClick={() => handleClickCreate()}>\r\n            Swap on ReHash\r\n          </Nav.Link>\r\n          <div className=\"searchbar\">\r\n            <Search className=\"searchIcon\" />\r\n            <input\r\n              placeholder=\"Seach for a swap...\"\r\n              className=\"searchInput\"\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              onKeyDown={handleSearch}\r\n            />\r\n          </div>\r\n          <Link to=\"/chat/0\">\r\n            <TextsmsOutlined className=\"chat\" htmlColor=\"orange\" />\r\n          </Link>\r\n          {/* notification list */}\r\n          <DropdownButton\r\n            className=\"userNotification\"\r\n            variant=\"warning\"\r\n            title={navbarNotificationTitle}\r\n          >\r\n            <div className=\"userNotificationLabel\">Notifications</div>\r\n            <div className=\"userNotificationList\">\r\n              {userNotifications.length > 0 ? (\r\n                userNotifications.map((notification) => (\r\n                  <Dropdown.Item key={notification._id}>\r\n                    <Notification\r\n                      notification={notification}\r\n                      handleAccept={handleAccept}\r\n                      handleDeny={handleDeny}\r\n                    />\r\n                  </Dropdown.Item>\r\n                ))\r\n              ) : (\r\n                <div className=\"userNoNotificationsLabel\">No notifcations</div>\r\n              )}\r\n            </div>\r\n          </DropdownButton>\r\n          {/* <NotificationsIcon className=\"userNotification\" htmlColor=\"orange\"/> */}\r\n\r\n          <Link\r\n            to={\r\n              currentUser\r\n                ? \"/profile/\" + currentUser.username + \"/listings\"\r\n                : \"/\"\r\n            }\r\n          >\r\n            <img\r\n              className=\"userProfilePic\"\r\n              src={\r\n                currentUser && currentUser.profilePicture\r\n                  ? PF + currentUser.profilePicture\r\n                  : PF + \"person/noAvatar.png\"\r\n              }\r\n              alt=\"userProfile\"\r\n            />\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  Accessibility,\r\n  Face,\r\n  SportsFootball,\r\n  Home,\r\n  DriveEta,\r\n  Redeem,\r\n  Computer,\r\n  Apps,\r\n} from \"@material-ui/icons\";\r\nimport \"./itemlistsTangible.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemLists() {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n  const history = useHistory();\r\n  const handleClick = (category) => {\r\n    history.push(\"/product/categories/\" + category);\r\n  };\r\n  return (\r\n    <Carousel responsive={responsive}>\r\n      <div className=\"item\" onClick={() => handleClick(\"clothing\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Accessibility className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Clothing</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"beauty\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Face className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Beauty</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"sports equipments\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsFootball className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Sports Equipments</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"home appliances\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Home className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Home Appliances</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"automotive\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <DriveEta className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Automotive</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"hobbies\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Redeem className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Hobbies</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"computers and tech\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Computer className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Computers & Tech</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"other tangibles\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Apps className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Others</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./itemlistsIntangible.css\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  OutdoorGrill,\r\n  Room,\r\n  Forum,\r\n  Fastfood,\r\n  BeachAccess,\r\n  SportsHandball,\r\n  SportsEsports,\r\n  Apps,\r\n} from \"@material-ui/icons\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemListsIntangible() {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n  const history = useHistory();\r\n  const handleClick = (category) => {\r\n    history.push(\"/product/categories/\" + category);\r\n  };\r\n  return (\r\n    <Carousel responsive={responsive}>\r\n      <div className=\"item\" onClick={() => handleClick(\"outdoor activities\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <OutdoorGrill className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Outdoor Activities</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"travel\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Room className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Travel</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"discussion\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Forum className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Discussion</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"food\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Fastfood className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Food</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"indoor activities\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <BeachAccess className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Indoor Activities</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"sports\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsHandball className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Sports</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"games and esports\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsEsports className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Games & Esports</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"other intangibles\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Apps className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Others</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./ads.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nexport default function Ads() {\r\n    return (\r\n        <div>\r\n           <Carousel className=\"adsWrapper\">\r\n                <Carousel.Item interval={3000}>\r\n                    <img\r\n                    className=\"adsPics d-block w-50\"\r\n                    src=\"assests/adsPics/ads1.jpeg\"\r\n                    alt=\"First slide\"\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={3000}>\r\n                    <img\r\n                    className=\"adsPics d-block w-50\"\r\n                    src=\"/assests/adsPics/ads2.jpeg\"\r\n                    alt=\"Second slide\"\r\n                    />\r\n                </Carousel.Item>\r\n                <Carousel.Item interval={3000}>\r\n                    <img\r\n                    className=\"adsPics d-block w-50\"\r\n                    src=\"/assests/adsPics/ads3.jpeg\"\r\n                    alt=\"Third slide\"\r\n                    />\r\n                </Carousel.Item>\r\n            </Carousel> \r\n        </div>\r\n    )\r\n}\r\n","const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        isFetching: true,\r\n        error: false,\r\n        sockio: null,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n        sockio: null,\r\n      };\r\n    case \"LOGOUT_START\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: true,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: null,\r\n      };\r\n    case \"LOGOUT_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n        sockio: null,\r\n      };\r\n    case \"UPDATE\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n","import { createContext, useReducer } from \"react\";\r\nimport AuthReducer from \"./AuthReducer\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: null,\r\n  isFetching: false,\r\n  error: false,\r\n  sockio: null,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        sockio: state.sockio,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport \"./groupIcon.css\";\r\n\r\nexport default function GroupIcon({ groupImg, groupName, groupId, create }) {\r\n  //should limit to 35-40 characters\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [newGroupName, setNewGroupName] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleClickGroupIcon = () => {\r\n    if (groupId) {\r\n      history.push(\"/groups/\" + groupId + \"/main\");\r\n    }\r\n  };\r\n\r\n  const handleCreateNewGroup = async () => {\r\n    if ((newGroupName.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      console.log(\"newGroupName is empty!\");\r\n      setNewGroupName(\"\");\r\n    } else if (user) {\r\n      try {\r\n        const newGroup = {\r\n          creatorId: user._id,\r\n          members: [user._id],\r\n          description:\r\n            \"No description yet. Waiting for group creator to update description.\",\r\n          groupName: newGroupName,\r\n        };\r\n        const res = await axios.post(\"/api/groups\", newGroup);\r\n        if (res.status === 200) {\r\n          setNewGroupName(\"\");\r\n          history.push(\"/groups/\" + res.data._id + \"/main\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  return create ? (\r\n    <div className=\"groupIconButtonBackgroundCreate\">\r\n      <img\r\n        className=\"groupIconButtonImg\"\r\n        src={groupImg ? PF + groupImg : PF + \"group.noImageUploaded.png\"}\r\n        onClick={handleCreateNewGroup}\r\n        alt=\"\"\r\n      />\r\n      <textarea\r\n        rows={3}\r\n        className=\"groupIconTextArea\"\r\n        placeholder=\"Enter new group name (max 50 characters) and click '+'\"\r\n        value={newGroupName}\r\n        onChange={(e) => {\r\n          if (e.target.value.length <= 50) {\r\n            setNewGroupName(e.target.value);\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div className=\"groupIconButtonBackground\" onClick={handleClickGroupIcon}>\r\n      <img\r\n        className=\"groupIconButtonImg\"\r\n        src={groupImg ? PF + groupImg : PF + \"group/noImageUploaded.png\"}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"groupIconButtonName\">\r\n        {groupName ? groupName : \"No Group Name\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./groupIconContainer.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport GroupIcon from \"../groupIcon/GroupIcon\";\r\n\r\nexport default function GroupIconContainer({ recommendedGroups }) {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n\r\n  return recommendedGroups && recommendedGroups.length > 0 ? (\r\n    <Carousel responsive={responsive}>\r\n      {recommendedGroups.map((group) => (\r\n        <GroupIcon\r\n          key={group._id}\r\n          groupName={group.groupName}\r\n          groupImg={group.groupImg}\r\n          groupId={group._id}\r\n        />\r\n      ))}\r\n    </Carousel>\r\n  ) : (\r\n    <div>No recommended groups.</div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport ItemListsTangible from \"../../components/itemlistsTangible/ItemListsTangible\";\r\nimport \"./home.css\";\r\nimport ItemListsIntangible from \"../../components/itemlistsIntangible/ItemListsIntangible\";\r\nimport TrendingSwaps from \"../../components/trendingSwaps/TrendingSwaps\";\r\nimport Ads from \"../../components/ads/Ads\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport GroupIconContainer from \"../../components/groupIconContainer/GroupIconContainer\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Home() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [recommendedGroups, setRecommendedGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    console.log(\"user is: \", user);\r\n  }, [sockio, user]);\r\n\r\n  useEffect(() => {\r\n    const getRecommendedGroups = async () => {\r\n      try {\r\n        if (user) {\r\n          const res = await axios.get(\"/api/groups/recommended/\" + user._id);\r\n          if (res.status === 200) {\r\n            setRecommendedGroups(res.data);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getRecommendedGroups();\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <Ads />\r\n      <div className=\"homeWrapper\">\r\n        <div className=\"tangible\">\r\n          <div className=\"itemsType\">\r\n            <span>Explore Tangible</span>\r\n          </div>\r\n          <ItemListsTangible />\r\n        </div>\r\n        <div className=\"intangible\">\r\n          <div className=\"itemsType\">\r\n            <span>Explore Intangible {sockio?.id}</span>\r\n          </div>\r\n          <ItemListsIntangible />\r\n        </div>\r\n        <div className=\"recommendedGroups\">\r\n          <div className=\"itemsType\">\r\n            <span>Recommended Groups</span>\r\n          </div>\r\n          <GroupIconContainer recommendedGroups={recommendedGroups} />\r\n        </div>\r\n        {/* <div className=\"trendingSwap\">\r\n          <span className=\"trendingSwapHead\">Trending Swaps</span>\r\n          <TrendingSwaps className=\"trendingSwapItems\" />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./register.css\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const handleEmail = async (e) => {\r\n    setEmail(e.target.value);\r\n    try {\r\n      await axios.get(\"/api/users?email=\" + e.target.value);\r\n      e.target.setCustomValidity(\"Email already taken\");\r\n    } catch (err) {\r\n      if (err.response.status === 400) {\r\n        e.target.setCustomValidity(\"\");\r\n      }\r\n    }\r\n  };\r\n  const handleUsername = async (e) => {\r\n    setUsername(e.target.value);\r\n    try {\r\n      await axios.get(\"/api/users?username=\" + e.target.value);\r\n      e.target.setCustomValidity(\"Username already taken\");\r\n    } catch (err) {\r\n      if (err.response.status === 400) {\r\n        e.target.setCustomValidity(\"\");\r\n      }\r\n    }\r\n  };\r\n  const handlePassword = (e) => {\r\n    setPassword(e.target.value);\r\n    if (e.target.value.length < 6) {\r\n      e.target.setCustomValidity(\"Password must have at least 6 characters\");\r\n    } else {\r\n      e.target.setCustomValidity(\"\");\r\n    }\r\n  };\r\n  const handleConfirmPassword = (e) => {\r\n    console.log(e.target.value);\r\n    setConfirmPassword(e.target.value);\r\n    if (e.target.value !== password) {\r\n      console.log(password);\r\n      console.log(e.target.value);\r\n      e.target.setCustomValidity(\"Passwords don't match!\");\r\n    } else {\r\n      e.target.setCustomValidity(\"\");\r\n    }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    console.log(email);\r\n    console.log(username);\r\n    console.log(password);\r\n    console.log(confirmPassword);\r\n    const user = {\r\n      username: username,\r\n      email: email,\r\n      password: password,\r\n    };\r\n    try {\r\n      await axios.post(\"/api/auth/register\", user);\r\n      history.push(\"/\");\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"registerWrapper\">\r\n        <div className=\"registerLeft\">\r\n          <div className=\"registerLeftWrapper  \">\r\n            <div className=\"registerLeftTop \">\r\n              <img\r\n                className=\"registerLeftLogo\"\r\n                src=\"/assests/ReHashLogo.png\"\r\n                alt=\"ReHash logo\"\r\n              />\r\n              <span id=\"registerText\" className=\"registerLeftLogoText \">\r\n                ReHash\r\n              </span>\r\n            </div>\r\n            <span className=\"registerLeftBottom\">\r\n              Excited to embark on you ReHash journey? Sign up now!\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"registerRight\">\r\n          <div className=\"registerRightTop\">\r\n            <Link to=\"/\" className=\"registerBack\">\r\n              <ArrowBackIosIcon />\r\n              <span>Back</span>\r\n            </Link>\r\n          </div>\r\n          <div className=\"registerRightBottom\">\r\n            <div className=\"registerRightHeader\">\r\n              <h2>Register Individual Account!</h2>\r\n              <span className=\"registerRightHeaderText\">\r\n                For the purpose of industry regulations, your details are\r\n                requested\r\n              </span>\r\n            </div>\r\n            <form action=\"\" className=\"registerBox\" onSubmit={handleClick}>\r\n              <span className=\"registerInputLabel\">Your full name *</span>\r\n              <input\r\n                placeholder=\"Enter username\"\r\n                required\r\n                value={username}\r\n                onChange={handleUsername}\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputLabel\">Email address *</span>\r\n              <input\r\n                placeholder=\"Enter email address\"\r\n                required\r\n                value={email}\r\n                onChange={handleEmail}\r\n                type=\"email\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputLabel\">Create password *</span>\r\n              <input\r\n                placeholder=\"Enter password with at least 6 characters\"\r\n                required\r\n                value={password}\r\n                onChange={handlePassword}\r\n                type=\"password\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputLabel\">Confirm password *</span>\r\n              <input\r\n                placeholder=\"Confirm password\"\r\n                required\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPassword}\r\n                type=\"password\"\r\n                className=\"registerInput\"\r\n              />\r\n              <button className=\"registerButton\" type=\"submit\">\r\n                Register Account\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\nimport {\r\n  CDBSidebar,\r\n  CDBSidebarContent,\r\n  CDBSidebarFooter,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n} from \"cdbreact\";\r\nimport { LocalMall, SwapVert, ExitToApp, Settings } from \"@material-ui/icons\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SideBar({ sidebarUser }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio, dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = async (e) => {\r\n    e.preventDefault();\r\n    const logoutCall = async (dispatch) => {\r\n      dispatch({ type: \"LOGOUT_START\", payload: { user: user, sock: sockio } });\r\n      try {\r\n        await sockio.disconnect();\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      } catch (err) {\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: err });\r\n      }\r\n    };\r\n    await logoutCall(dispatch);\r\n    history.push(\"/\");\r\n    console.log(\"logged out\");\r\n  };\r\n\r\n  const handleListings = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/listings\");\r\n    console.log(\"done\");\r\n  };\r\n  const handleReviews = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/reviews\");\r\n  };\r\n  const handleSettings = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/settings\");\r\n  };\r\n  const handleMyGroups = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/mygroups\");\r\n  };\r\n  return (\r\n    <div\r\n      className=\"sidebar\"\r\n      // style={{ display: \"flex\", height: \"100vh\", overflow: \"scroll initial\" }}\r\n    >\r\n      <CDBSidebar textColor=\"black\" backgroundColor=\"#FFD68D\">\r\n        {/* <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu> */}\r\n        <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n          <img\r\n            className=\"userProfile\"\r\n            src={\r\n              sidebarUser?.profilePicture\r\n                ? PF + sidebarUser.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarHeader style={{ textAlign: \"center\" }}>\r\n          <div>{sidebarUser?.username}</div>\r\n          <div className=\"ratings\">\r\n            <div>Ratings: </div>\r\n            <Rating\r\n              value={\r\n                sidebarUser\r\n                  ? sidebarUser.cumulativeRating / sidebarUser.ratedByUsers\r\n                  : 3\r\n              }\r\n              precision={0.1}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarContent>\r\n          <CDBSidebarMenu>\r\n            <CDBSidebarMenuItem\r\n              onClick={handleListings}\r\n              className=\"sidebarMenuItem\"\r\n            >\r\n              <LocalMall className=\"sidebarIcons\" />\r\n              <span className=\"sidebarMenuText\">Listings</span>\r\n            </CDBSidebarMenuItem>\r\n            <CDBSidebarMenuItem\r\n              className=\"sidebarMenuItem\"\r\n              onClick={handleReviews}\r\n            >\r\n              <SwapVert className=\"sidebarIcons\" />\r\n              <span className=\"sidebarMenuText\">Reviews</span>\r\n            </CDBSidebarMenuItem>\r\n            {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"sidebarMenuItem\"\r\n                onClick={handleMyGroups}\r\n              >\r\n                <GroupIcon className=\"sidebarIcons\" />\r\n                <span className=\"sidebarMenuText\">My Groups</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {/* {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem className=\"sidebarMenuItem\" onClick={handleMyGroups}>\r\n                <GroupIcon className=\"sidebarIcons\"/>\r\n                <span className=\"sidebarMenuText\">My Groups</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )} */}\r\n\r\n            {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"sidebarMenuItem\"\r\n                onClick={handleSettings}\r\n              >\r\n                <Settings className=\"sidebarIcons\" />\r\n                <span className=\"sidebarMenuText\">Settings</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </CDBSidebarMenu>\r\n        </CDBSidebarContent>\r\n        {sidebarUser && sidebarUser._id === user?._id ? (\r\n          <CDBSidebarFooter style={{ textAlign: \"center\" }}>\r\n            <div\r\n              className=\"sidebar-btn-wrapper\"\r\n              style={{ padding: \"20px 5px\" }}\r\n            >\r\n              <ExitToApp className=\"sidebarIcons\" onClick={handleLogOut} />\r\n              <span className=\"sidebarMenuText\" onClick={handleLogOut}>\r\n                Log out\r\n              </span>\r\n            </div>\r\n          </CDBSidebarFooter>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </CDBSidebar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"./itemListing.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemListing({ item, inPost }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const history = useHistory();\r\n  const handleClickItem = () => {\r\n    history.push(\"/items/\" + item._id);\r\n    // console.log(\"clicked\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(item);\r\n  }, [item]);\r\n  return (\r\n    <div className=\"itemListingWrapper\" onClick={() => handleClickItem()}>\r\n      <Card>\r\n        {inPost ? (\r\n          <>\r\n            <Card.Img src={PF + item?.img[0]} />\r\n            <Card.Body className=\"PostItemBody\">{item?.title}</Card.Body>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={PF + item.img[0]}\r\n              className=\"trendingSwapItemImg\"\r\n            />\r\n\r\n            <Card.Body className=\"trendingSwapItemBody\">\r\n              <Card.Title className=\"itemListingCardTitle\">\r\n                <span style={{ marginRight: \"10px\" }}>{item.title}</span>\r\n                <Chip\r\n                  className=\"tag\"\r\n                  label={item.status === \"waiting\" ? \"available\" : item.status}\r\n                  size=\"small\"\r\n                  color={\r\n                    item.status === \"waiting\"\r\n                      ? \"\"\r\n                      : item.status === \"reserved\"\r\n                      ? \"primary\"\r\n                      : \"secondary\"\r\n                  }\r\n                  style={{\r\n                    marginBottom: \"5px\",\r\n                    marginTop: \"5px\",\r\n                  }}\r\n                />\r\n              </Card.Title>\r\n              <span className=\"trendingSwapText\">Ideal Swap: </span>\r\n              {item.idealSwaps.map((tags) => (\r\n                <Chip\r\n                  key={tags}\r\n                  className=\"tag\"\r\n                  label={tags}\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  style={{ marginRight: \"5px\" }}\r\n                />\r\n              ))}\r\n\r\n              <Card.Text>{item.desc}</Card.Text>\r\n            </Card.Body>\r\n          </>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Star(props) {\r\n  const { fill = \"none\" } = props;\r\n  return (\r\n    <svg\r\n      class=\"w-6 h-6 star\"\r\n      fill={fill}\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"0\"\r\n        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport Star from \"../star/Star\";\r\n\r\nexport default function RatingIcon({\r\n  index,\r\n  rating,\r\n  hoverRating,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n  onSaveRating,\r\n  selected,\r\n  notSelected,\r\n}) {\r\n  const fill = useMemo(() => {\r\n    if (hoverRating >= index) {\r\n      return \"rgb(240, 158, 6)\";\r\n    } else if (!hoverRating && rating >= index) {\r\n      return \"rgb(240, 158, 6)\";\r\n    }\r\n    return \"rgb(145, 144, 144)\";\r\n  }, [rating, hoverRating, index]);\r\n\r\n  return (\r\n    <div\r\n      style={{ height: \"20px\", width: \"20px\" }}\r\n      className=\"cursor-pointer\"\r\n      onMouseEnter={() => onMouseEnter(index)}\r\n      onMouseLeave={() => onMouseLeave()}\r\n      onClick={() => onSaveRating(index)}\r\n    >\r\n      {selected ? (\r\n        <Star fill={\"rgb(240, 158, 6)\"} />\r\n      ) : notSelected ? (\r\n        <Star fill={\"rgb(145, 144, 144)\"} />\r\n      ) : (\r\n        <Star fill={fill} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./userReview.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Star from \"../star/Star\";\r\nimport RatingIcon from \"../RatingIcon/RatingIcon\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { get } from \"mongoose\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UserReview({\r\n  review,\r\n  doneReview,\r\n  handleSubmit,\r\n  handleDelete,\r\n}) {\r\n  const [rating, setRating] = useState(0);\r\n  const [hoverRating, setHoverRating] = useState(0);\r\n  const { user } = useContext(AuthContext);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [reviewer, setReviewer] = useState(null);\r\n  const [reviewText, setReviewText] = useState(\"\");\r\n\r\n  //set the reviewer\r\n  useEffect(() => {\r\n    const getReviewUser = async () => {\r\n      const res = await axios.get(\"/api/users?userId=\" + review.reviewerId);\r\n      setReviewer(res.data);\r\n    };\r\n    if (review) {\r\n      getReviewUser();\r\n    }\r\n  }, [review]);\r\n\r\n  const onMouseEnter = (index) => {\r\n    if (!doneReview) {\r\n      setHoverRating(index);\r\n      console.log(\"hover rating is: \" + index);\r\n    }\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (!doneReview) {\r\n      setHoverRating(0);\r\n    }\r\n  };\r\n\r\n  const onSaveRating = (index) => {\r\n    if (!doneReview) {\r\n      setRating(index);\r\n      console.log(\"your rating is: \" + index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"userReview\">\r\n      <div className=\"userReviewTop\">\r\n        <img\r\n          src={\r\n            doneReview\r\n              ? reviewer && reviewer.profilePicture\r\n                ? PF + reviewer.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n              : user && user.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + \"person/noAvatar.png\"\r\n          }\r\n          alt=\"\"\r\n          className=\"userReviewImg\"\r\n        />\r\n        <div className=\"userReviewTopMiddle\">\r\n          <div className=\"userReviewTopMiddleName\">\r\n            {doneReview\r\n              ? reviewer?.username\r\n              : user\r\n              ? user.username\r\n              : \"Anonymous\"}\r\n          </div>\r\n          <div className=\"userReviewTopMiddleRatings\">\r\n            <div className=\"userReviewTopMiddleRatingsText\">Ratings: </div>\r\n            <div className=\"userReviewRatingStars\">\r\n              {review\r\n                ? [1, 2, 3, 4, 5].map((index) => {\r\n                    return (\r\n                      <RatingIcon\r\n                        index={index}\r\n                        rating={rating}\r\n                        hoverRating={hoverRating}\r\n                        onMouseEnter={onMouseEnter}\r\n                        onMouseLeave={onMouseLeave}\r\n                        onSaveRating={onSaveRating}\r\n                        selected={review.rating >= index}\r\n                        notSelected={review.rating < index}\r\n                      />\r\n                    );\r\n                  })\r\n                : [1, 2, 3, 4, 5].map((index) => {\r\n                    return (\r\n                      <RatingIcon\r\n                        index={index}\r\n                        rating={rating}\r\n                        hoverRating={hoverRating}\r\n                        onMouseEnter={onMouseEnter}\r\n                        onMouseLeave={onMouseLeave}\r\n                        onSaveRating={onSaveRating}\r\n                      />\r\n                    );\r\n                  })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userReviewTopRight\">\r\n          {doneReview ? (\r\n            review.reviewerId === user?._id ? (\r\n              <button\r\n                className=\"userReviewSubmitButton\"\r\n                onClick={() => handleDelete(review)}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <button\r\n              className=\"userReviewSubmitButton\"\r\n              onClick={() => handleSubmit(reviewText, rating)}\r\n            >\r\n              Submit\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"userReviewBottom\">\r\n        {doneReview ? (\r\n          <div className=\"userReviewedText\">{review.reviewText}</div>\r\n        ) : (\r\n          <textarea\r\n            placeholder=\"(Optional) Leave a review ...\"\r\n            className=\"userReviewInput\"\r\n            value={reviewText}\r\n            onChange={(e) => setReviewText(e.target.value)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./userlisting.css\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport ItemListing from \"../../components/itemListing/ItemListing\";\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport UserReview from \"../../components/userReview/UserReview\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UserListing() {\r\n  const { user, sockio } = useContext(AuthContext); //this user is currentUser\r\n  const username = useParams().username;\r\n  // const subpage = useParams().subpage;\r\n  const [displayItems, setDisplayItems] = useState([]);\r\n  const [viewingCategory, setViewingCategory] = useState(\"tangibles\");\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    console.log(\"username is: \", username);\r\n    // console.log(\"subpage is:\", subpage);\r\n  }, [sockio, username]);\r\n\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const getDisplayItems = async () => {\r\n      if (profileUser) {\r\n        const res = await axios.get(\r\n          \"/api/items/categories?categoryName=\" +\r\n            viewingCategory +\r\n            \"&userId=\" +\r\n            profileUser._id\r\n        );\r\n        setDisplayItems(res.data);\r\n        //console.log(res.data);\r\n      }\r\n    };\r\n    getDisplayItems();\r\n  }, [viewingCategory, profileUser]);\r\n\r\n  const handleClickTangible = () => {\r\n    setViewingCategory(\"tangibles\");\r\n    setTabValue(0);\r\n  };\r\n\r\n  const handleClickIntangible = () => {\r\n    setViewingCategory(\"intangibles\");\r\n    setTabValue(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"userlistingContainer\">\r\n        <SideBar className=\"sidebar\" sidebarUser={profileUser} />\r\n        <div className=\"userListingsRight\">\r\n          <Container className=\"userlistingWrapper\">\r\n            <div className=\"tabBar\">\r\n              <Paper margin={200} style={{ marginBottom: \"10px\" }}>\r\n                <Tabs\r\n                  value={tabValue}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  centered\r\n                >\r\n                  <Tab label=\"Tangible\" onClick={handleClickTangible} />\r\n                  <Tab label=\"Intangible\" onClick={handleClickIntangible} />\r\n                </Tabs>\r\n              </Paper>\r\n            </div>\r\n            <Row className=\"listingRow\" xs={1} md={3}>\r\n              {displayItems.length ? (\r\n                displayItems.map((item) => (\r\n                  <ItemListing key={item._id} item={item} />\r\n                ))\r\n              ) : (\r\n                <div>User does not have any item in this category</div>\r\n              )}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./review.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport UserReview from \"../../components/userReview/UserReview\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst cheeseCakeReview = {\r\n  _id: \"60cb421ce5ae38aaf0c6ec7b\",\r\n  reviewerId: \"60bf21abb893706a58752ecf\",\r\n  revieweeId: \"60bf2195b893706a58752ece\",\r\n  rating: 4,\r\n  reviewText:\r\n    \"The cheese baked rice session I attended was awesome! Punpun is very patient and handheld me throughout the whole session. I'm satisfied with my homemade cheese baked rice!\",\r\n  createdAt: \"2021-06-17T12:37:48.610Z\",\r\n  updatedAt: \"2021-06-17T12:37:48.610Z\",\r\n  __v: 0,\r\n};\r\n\r\nconst punpunReviewBing = {\r\n  _id: \"60ca10cf56bca394fc060b94\",\r\n  reviewerId: \"60bf2195b893706a58752ece\",\r\n  revieweeId: \"60bf21abb893706a58752ecf\",\r\n  rating: 4,\r\n  reviewText: \"The user is very patient and I find the swap very worthwhile\",\r\n  createdAt: \"2021-06-17T12:37:48.610Z\",\r\n  updatedAt: \"2021-06-17T12:37:48.610Z\",\r\n  __v: 0,\r\n};\r\n\r\nexport default function Review() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const username = useParams().username;\r\n  const [reviews, setReviews] = useState([]);\r\n  const [alreadyReviewed, setAlreadyReviewed] = useState(false);\r\n  const [myReview, setMyReview] = useState([]); //the review by the currentUser on the profileUser\r\n  const [initialCumRating, setInitialCumRating] = useState(0);\r\n  const [initialRatedBy, setInitialRatedBy] = useState(0);\r\n  //get the profile user of this page\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  //get all the reviews of this profileUser\r\n  useEffect(() => {\r\n    console.log(user);\r\n    const getReviews = async () => {\r\n      const res = await axios.get(\r\n        \"/api/reviews/profileUser/\" + profileUser._id\r\n      );\r\n      const filterMyReview = res.data.filter(\r\n        //filter away reviews made by currentUser\r\n        (review) => review.reviewerId !== user?._id\r\n      );\r\n      setReviews(filterMyReview);\r\n      console.log(filterMyReview);\r\n    };\r\n    if (profileUser) {\r\n      getReviews();\r\n      setInitialCumRating(profileUser.cumulativeRating);\r\n      setInitialRatedBy(profileUser.ratedByUsers);\r\n    }\r\n  }, [profileUser, user]);\r\n\r\n  //set alreadyReviewed intially based on currentUser and profileUser\r\n  useEffect(() => {\r\n    const getAlreadyReviewed = async () => {\r\n      if (!user || !profileUser || profileUser._id === user._id) {\r\n        setAlreadyReviewed(true); //set to true so we cannot review the profileUser\r\n      } else {\r\n        const res = await axios.get(\r\n          \"/api/reviews/between/\" + profileUser._id + \"/\" + user._id\r\n        );\r\n        if (res.data.length > 0) {\r\n          setAlreadyReviewed(true);\r\n          setMyReview(res.data);\r\n          console.log(res.data);\r\n        } else {\r\n          setAlreadyReviewed(false);\r\n        }\r\n      }\r\n    };\r\n    getAlreadyReviewed();\r\n  }, [profileUser, user]);\r\n\r\n  //handleSubmit if a review is added\r\n  const handleSubmit = async (reviewText, rating) => {\r\n    if (!alreadyReviewed && rating > 0) {\r\n      console.log(\"reviewText is: \" + reviewText + \"\\n rating is: \" + rating);\r\n      const newReview = {\r\n        reviewerId: user._id,\r\n        revieweeId: profileUser._id,\r\n        rating: rating,\r\n        reviewText: reviewText,\r\n      };\r\n      const res = await axios.post(\"/api/reviews\", newReview);\r\n      setMyReview([...myReview, res.data]);\r\n      setAlreadyReviewed(true);\r\n      //also update ratings of profileUser\r\n      const updateRatingRes = await axios.put(\"/api/users/\" + profileUser._id, {\r\n        cumulativeRating: initialCumRating + rating,\r\n        ratedByUsers: initialRatedBy + 1,\r\n      });\r\n      setInitialCumRating(initialCumRating + rating);\r\n      setInitialRatedBy(initialRatedBy + 1);\r\n    }\r\n  };\r\n\r\n  //handleDelete if own rating is deleted\r\n  const handleDelete = async (review) => {\r\n    if (alreadyReviewed) {\r\n      console.log(review);\r\n      const res = await axios.delete(\"/api/reviews/id/\" + review._id);\r\n      console.log(res.status);\r\n      console.log(typeof res.status);\r\n      setMyReview([]);\r\n      setAlreadyReviewed(false);\r\n      const updateRatingRes = await axios.put(\"/api/users/\" + profileUser._id, {\r\n        cumulativeRating: initialCumRating - review.rating,\r\n        ratedByUsers: initialRatedBy - 1,\r\n      });\r\n      setInitialCumRating(initialCumRating - review.rating);\r\n      setInitialRatedBy(initialRatedBy - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"userReviewsContainer\">\r\n        <SideBar sidebarUser={profileUser} />\r\n        <div className=\"userReviewsRight\">\r\n          <Container className=\"userReviewsWrapper\">\r\n            <span className=\"userReviewsHeader\">Reviews</span>\r\n            {alreadyReviewed ? (\r\n              <></>\r\n            ) : (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                doneReview={false}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            )}\r\n            {myReview.map((review) => (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                key={review._id}\r\n                review={review}\r\n                doneReview={true}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            ))}\r\n            {reviews.map((review) => (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                key={review._id}\r\n                review={review}\r\n                doneReview={true}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            ))}\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./product.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ItemListing from \"../../components/itemListing/ItemListing\";\r\nimport { ArrowBackIos } from \"@material-ui/icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Product() {\r\n  const categoryName = useParams().categoryName;\r\n  const pageType = useParams().pageType;\r\n  const [items, setItems] = useState([]);\r\n  const { user, sockio } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    console.log(\"categoryName is: \" + categoryName);\r\n    console.log(\"pageType is \" + pageType);\r\n    const getItems = async () => {\r\n      try {\r\n        if (pageType === \"categories\" && categoryName) {\r\n          const res = await axios.get(\r\n            \"/api/items/categories?categoryName=\" + categoryName\r\n          );\r\n          await setItems(res.data);\r\n        } else if (pageType === \"search\" && categoryName) {\r\n          const res = await axios.get(\"/api/items?search=\" + categoryName);\r\n          await setItems(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getItems();\r\n  }, [categoryName, pageType]);\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n\r\n      <div className=\"productWrapper\">\r\n        {/*<div className=\"backArrow\">\r\n          <ArrowBackIos />\r\n          <span>Back</span>\r\n        </div> */}\r\n        <span className=\"productHeader\">\r\n          {pageType === \"search\"\r\n            ? \"Search results for: \" + categoryName\r\n            : pageType === \"categories\" && categoryName\r\n            ? categoryName.charAt(0).toUpperCase() + categoryName.slice(1)\r\n            : \"Product Descrption Header\"}\r\n        </span>\r\n        <Row className=\"listingRow\" lg={3} md={2} s={1}>\r\n          {items.map((item) => (\r\n            <div>\r\n              <ItemListing key={item._id} item={item} />\r\n            </div>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  useContext,\r\n} from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./createListing.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\r\nimport AddPhotoAlternateOutlinedIcon from \"@material-ui/icons/AddPhotoAlternateOutlined\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nexport default function CreateListing() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const category = [\r\n    { title: \"Clothing\" },\r\n    { title: \"Beauty\" },\r\n    { title: \"Sports Equipments\" },\r\n    { title: \"Home Appliances\" },\r\n    { title: \"Automotive\" },\r\n    { title: \"Clothing\" },\r\n    { title: \"Hobbies\" },\r\n    { title: \"Computers and Tech\" },\r\n    { title: \"Outdoor Activities\" },\r\n    { title: \"Travel\" },\r\n    { title: \"Discussion\" },\r\n    { title: \"Food\" },\r\n    { title: \"Indoor Activities\" },\r\n    { title: \"Sports\" },\r\n    { title: \"Games and Esports\" },\r\n    { title: \"Others\" },\r\n  ];\r\n\r\n  //Below is code for the Dropzone\r\n  const [files, setFiles] = useState([]);\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [idealCategories, setIdealCategories] = useState([]);\r\n  const [swapCategories, setSwapCategories] = useState([]);\r\n\r\n  //When file is dropped, set the new array of files based on different conditions\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      if (!!errors[\"images\"]) {\r\n        setErrors({\r\n          ...errors,\r\n          images: null,\r\n        });\r\n      }\r\n      const newFiles = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n          customFileName: Date.now().toString().concat(file.name),\r\n        })\r\n      );\r\n      var allFiles = [...files, ...newFiles];\r\n      console.log(allFiles);\r\n      console.log(allFiles.length);\r\n      if (allFiles.length > 6) {\r\n        allFiles = allFiles.slice(allFiles.length - 6, allFiles.length);\r\n        console.log(allFiles);\r\n      }\r\n      setFiles(allFiles);\r\n    },\r\n    [errors, files]\r\n  );\r\n\r\n  //The useDropzone hook\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: onDrop,\r\n    maxFiles: 6,\r\n  });\r\n\r\n  //setting style for the dropzone\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  //previews of the images uploaded\r\n  const thumbs = files.map((file) => (\r\n    <div className=\"thumb\" key={file.customFileName}>\r\n      <img src={file.preview} className=\"userSwapImg\" alt=\"\" />\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  //Below is for Form Control\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    //if error exists, remove them from the error object\r\n    if (!!errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { title, description, tangible } = form;\r\n    const newErrors = {};\r\n\r\n    //title error\r\n    if (!title || title === \"\") {\r\n      newErrors.title = \"title cannot be blank!\";\r\n    } else if (title.length > 50) {\r\n      newErrors.title = \"title cannot be more than 50 characters\";\r\n    }\r\n\r\n    //description error\r\n    if (!description || description === \"\") {\r\n      newErrors.description = \"description cannot be blank!\";\r\n    } else if (description.length > 500) {\r\n      newErrors.description = \"description cannot be more than 500 characters\";\r\n    }\r\n\r\n    //Tangibles of intangibles not selected\r\n    if (!tangible || tangible === \"\") {\r\n      newErrors.tangible =\r\n        \"specify whether your item is tangible or intangible!\";\r\n    }\r\n\r\n    //Swap category errors\r\n    if (!swapCategories || swapCategories.length === 0) {\r\n      newErrors.swapCategories = \"select at least 1 category!\";\r\n    }\r\n\r\n    //Ideal swap category errors\r\n    if (!idealCategories || idealCategories.length === 0) {\r\n      newErrors.idealCategories = \"select at least 1 category!\";\r\n    }\r\n\r\n    //Check for images\r\n    if (files.length === 0) {\r\n      newErrors.images = \"you have to upload at least 1 image!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      var newItemSwapCat = swapCategories.map((categoryObject) =>\r\n        categoryObject.title.toLowerCase()\r\n      );\r\n      newItemSwapCat = [...newItemSwapCat, form.tangible];\r\n      const newItemIdealSwap = idealCategories.map((categoryObject) =>\r\n        categoryObject.title.toLowerCase()\r\n      );\r\n\r\n      const data = new FormData();\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        data.append(\"file\", files[i]);\r\n        data.append(\"name\", files[i].customFileName);\r\n        console.log(\"customFileName is: \" + files[i].customFileName);\r\n        console.log(typeof files[i].customFileName);\r\n      }\r\n\r\n      console.log(data);\r\n      const uploadFileRes = await axios.post(\"/api/upload/items\", data);\r\n      if (uploadFileRes.status === 200) {\r\n        const newItem = {\r\n          userId: user._id,\r\n          title: form.title,\r\n          desc: form.description,\r\n          img: uploadFileRes.data.imagePaths,\r\n          categories: newItemSwapCat,\r\n          idealSwaps: newItemIdealSwap,\r\n          status: \"waiting\",\r\n        };\r\n        console.log(newItem);\r\n        const res = await axios.post(\"/api/items\", newItem);\r\n        console.log(res.data);\r\n      }\r\n\r\n      setFiles([]);\r\n      setForm({\r\n        tangible: \"\",\r\n      });\r\n      setIdealCategories([]);\r\n      setSwapCategories([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"createListingContainer\">\r\n        <div className=\"createListingHeader\">\r\n          <span>Make your swap today!</span>\r\n        </div>\r\n\r\n        {/* /* for uploading of images */}\r\n        <Row className=\"createListingContent\">\r\n          <Col xs={6}>\r\n            <Card className=\"uploadImagesCard shadow p-3 mb-5 bg-white rounded\">\r\n              <Card.Body>\r\n                <h5 className=\"uploadImagesCardHeader\">\r\n                  Drag and Drop images here\r\n                </h5>\r\n                <h6 className=\"uploadImagesCardSubHeader\">\r\n                  or click to upload\r\n                </h6>\r\n                <Form>\r\n                  <Form.Group controlId=\"images\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      style={{ display: \"none\" }}\r\n                      isInvalid={!!errors.images}\r\n                    />\r\n                    <div className=\"swapImgDragAndDropWrapper\">\r\n                      <section className=\"container\">\r\n                        <div\r\n                          {...getRootProps({ style })}\r\n                          className=\"dragAndDropDiv\"\r\n                        >\r\n                          <input {...getInputProps()} />\r\n                          <p>\r\n                            <AddPhotoAlternateOutlinedIcon fontSize=\"large\" />\r\n                          </p>\r\n                          <p>Drop away your swap images...</p>\r\n                        </div>\r\n                        <aside className=\"thumbsContainer\">{thumbs}</aside>\r\n                      </section>\r\n                    </div>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.images}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs={6} className=\"createListingContentRight\">\r\n            <Form className=\"formWrapper\">\r\n              <Form.Group controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  type=\"text\"\r\n                  maxlength=\"50\"\r\n                  placeholder=\"Enter your swap title\"\r\n                  value={form.title ? form.title : \"\"}\r\n                  onChange={(e) => setField(\"title\", e.target.value)}\r\n                  isInvalid={!!errors.title}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.title}\r\n                </Form.Control.Feedback>\r\n                <Form.Text className=\"text-muted\">\r\n                  Create an interesting title for your swap!\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  as=\"textarea\"\r\n                  maxlength=\"500\"\r\n                  rows={3}\r\n                  value={form.description ? form.description : \"\"}\r\n                  placeholder=\"Describe your swap\"\r\n                  onChange={(e) => setField(\"description\", e.target.value)}\r\n                  isInvalid={!!errors.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.description}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"tangible\">\r\n                <Form.Label>Is your item Tangible or Intangible?</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  as=\"select\"\r\n                  value={form.tangible}\r\n                  onChange={(e) => setField(\"tangible\", e.target.value)}\r\n                  isInvalid={!!errors.tangible}\r\n                >\r\n                  <option value=\"\" disabled hidden selected>\r\n                    Select category:\r\n                  </option>\r\n                  {/*The tangibles and intangibles spelling must be exactly like this for the database*/}\r\n                  <option value=\"tangibles\">Tangible</option>\r\n                  <option value=\"intagibles\">Intangible</option>\r\n                </Form.Control>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.tangible}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"swapCategories\">\r\n                <Form.Label>What is your swap category?</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ display: \"none\" }}\r\n                  isInvalid={!!errors.swapCategories}\r\n                />\r\n                <div className={classes.root}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={category}\r\n                    value={swapCategories}\r\n                    getOptionLabel={(option) => option.title}\r\n                    onChange={(e, newValue) => {\r\n                      if (!!errors[\"swapCategories\"]) {\r\n                        setErrors({ ...errors, swapCategories: null });\r\n                      }\r\n                      setSwapCategories(newValue);\r\n                      console.log(newValue);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Select categories\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.swapCategories}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"idealCategories\">\r\n                <Form.Label>What is your ideal swap?</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ display: \"none\" }}\r\n                  isInvalid={!!errors.idealCategories}\r\n                />\r\n                <div className={classes.root}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags2\"\r\n                    options={category}\r\n                    value={idealCategories}\r\n                    getOptionLabel={(option) => option.title}\r\n                    onChange={(e, newValue) => {\r\n                      if (!!errors[\"idealCategories\"]) {\r\n                        setErrors({ ...errors, idealCategories: null });\r\n                      }\r\n                      setIdealCategories(newValue);\r\n                      console.log(newValue);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Select ideal swaps\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.idealCategories}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Button\r\n                className=\"postButton\"\r\n                variant=\"warning\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Post Swap\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"./singleItem.css\";\r\n//option1\r\n// import Carousel from \"react-multi-carousel\";\r\n//option2\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nexport default function SingleItem({ imgLinkArray }) {\r\n  //if you want to show all pictures in 1 line\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      //the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  // const images = ['/assests/singleItemPics/keychronK2Pic1.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic2.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic1.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic2.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 ];\r\n  // return (\r\n  //     <div>\r\n\r\n  //        <Carousel\r\n  //   ssr\r\n  //   partialVisbile\r\n  // //   deviceType={deviceType}\r\n  //   itemClass=\"image-item\"\r\n  //   responsive={responsive}\r\n  // >\r\n  //   {images.slice(0, ).map((image, index) => {\r\n  //     return (\r\n  //       <div key={index} style={{ position: \"relative\" }}>\r\n  //         <img\r\n  //           draggable={false}\r\n  //           alt=\"text\"\r\n  //           style={{ width: \"100%\", height: \"100%\" }}\r\n  //           src={image}\r\n  //         />\r\n  //       </div>\r\n  //     );\r\n  //   })}\r\n  // </Carousel>\r\n  //     </div>\r\n\r\n  //if you want to show carousel in just 1 image\r\n\r\n  useEffect(() => {\r\n    console.log(imgLinkArray);\r\n  }, [imgLinkArray]);\r\n  return (\r\n    <div className=\"singleItemWrapper\">\r\n      <Carousel responsive={responsive}>\r\n        {imgLinkArray?.map((imgLink) => (\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"singleItemCarouselItemImg\"\r\n              src={PF + imgLink}\r\n              alt=\"\"\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n\r\n        {/* <Carousel.Item>\r\n          <img\r\n            className=\"singleItemCarouselItemImg\"\r\n            src=\"/assests/singleItemPics/keychronK2Pic2.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"singleItemCarouselItemImg\"\r\n            src=\"/assests/singleItemPics/keychronK2Pic3.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </Carousel.Item> */}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./swapAway.css\";\r\nimport { Alert, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { TextsmsOutlined } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function SwapAway({ itemUserId }) {\r\n  //if delete, go back to listings page\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [itemUser, setItemUser] = useState(null);\r\n  const history = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const getItemUser = async () => {\r\n      if (itemUserId) {\r\n        const res = await axios.get(\"/api/users?userId=\" + itemUserId);\r\n        setItemUser(res.data);\r\n        console.log(\"itemUser is: \" + res.data);\r\n      }\r\n    };\r\n    getItemUser();\r\n  }, [itemUserId]);\r\n\r\n  const handleSwapAway = async () => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n      console.log(\"pushed to login\");\r\n    } else {\r\n      const res = await axios.get(\r\n        \"/api/conversations/find/\" + user._id + \"/\" + itemUserId\r\n      );\r\n      if (res.data.length > 0) {\r\n        history.push(\"/chat/\" + res.data[0]._id);\r\n        console.log(\"pushed to chat id:\" + res.data[0]._id);\r\n      } else {\r\n        const newConvo = await axios.post(\"/api/conversations\", {\r\n          members: [itemUserId, user._id],\r\n        });\r\n        //chatFollow is not used for now\r\n        history.push(\"/chat/\" + newConvo._id); //likely works but needs to be tested\r\n        console.log(newConvo.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert className=\"swapAwayPrompt\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <img\r\n                className=\"swapAwayUserImg\"\r\n                src={\r\n                  itemUser && itemUser.profilePicture\r\n                    ? PF + itemUser.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                onClick={() => {\r\n                  itemUser &&\r\n                    history.push(\"/profile/\" + itemUser.username + \"/listings\");\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Alert.Heading\r\n                className=\"swapAwayUsername\"\r\n                style={{ fontSize: \"1rem\" }}\r\n              >\r\n                {itemUser ? itemUser.username : \"\"}\r\n              </Alert.Heading>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Button\r\n          className=\"swapAwayButton\"\r\n          variant=\"warning\"\r\n          onClick={handleSwapAway}\r\n        >\r\n          <div className=\"swapAwayButtonTextGroup\">\r\n            <TextsmsOutlined />\r\n            <span className=\"swapAwayButtonText\">Swap Away!</span>\r\n          </div>\r\n        </Button>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./userItemCommand.css\";\r\nimport { Alert, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport axios from \"axios\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function UserItemCommand({\r\n  itemUserId,\r\n  itemStatus,\r\n  handleReserve,\r\n  handleUnreserve,\r\n  handleSwap,\r\n  handleUnswap,\r\n  handleDelete,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [itemUser, setItemUser] = useState(null);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getItemUser = async () => {\r\n      if (itemUserId) {\r\n        const res = await axios.get(\"/api/users?userId=\" + itemUserId);\r\n        setItemUser(res.data);\r\n        console.log(\"itemUser is: \" + res.data);\r\n      }\r\n    };\r\n    getItemUser();\r\n  }, [itemUserId]);\r\n\r\n  const handleKeyDownSwap = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      console.log(\"user pressed enter key and the value is: \" + input);\r\n      if (input !== \"\") {\r\n        console.log(\"input is not empty\");\r\n        try {\r\n          const res = await axios.get(\"/api/agreements?id=\" + input);\r\n          if (!res || res.status !== 200 || !res.data) {\r\n            console.log(\"Error 1\");\r\n            setError(\"Agreement does not exist!\");\r\n          } else if (\r\n            res.data.parties.length >= 2 ||\r\n            res.data.items.length >= 2\r\n          ) {\r\n            console.log(\"Error 2\");\r\n            setError(\"This agreement id already involves 2 parties or 2 items\");\r\n          } else {\r\n            handleSwap(res.data._id);\r\n            setInput(\"\");\r\n            setShowInput(false);\r\n          }\r\n        } catch (err) {\r\n          console.log(\"Error 1\");\r\n          setError(\"Agreement does not exist!\");\r\n        }\r\n      } else {\r\n        console.log(\"input empty!\");\r\n        setError(\"Agreement code cannot be empty!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert className=\"userItemCommandPrompt\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <img\r\n                className=\"userItemCommandUserImg\"\r\n                src={\r\n                  itemUser && itemUser.profilePicture\r\n                    ? PF + itemUser.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                onClick={() => {\r\n                  itemUser &&\r\n                    history.push(\"/profile/\" + itemUser.username + \"/listings\");\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Alert.Heading\r\n                className=\"userItemCommandUsername\"\r\n                style={{ fontSize: \"1rem\" }}\r\n              >\r\n                {itemUser ? itemUser.username : \"Anonymous\"}\r\n              </Alert.Heading>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"buttonWrapper\">\r\n            {itemStatus === \"waiting\" ? (\r\n              <div>\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleReserve}\r\n                >\r\n                  <VerifiedUserIcon className=\"icons\" />\r\n                  <span className=\"action\">Mark as Reserve</span>\r\n                </Button>\r\n              </div>\r\n            ) : itemStatus === \"reserved\" ? (\r\n              <div>\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleUnreserve}\r\n                >\r\n                  <VerifiedUserIcon className=\"icons\" />\r\n                  <span className=\"action\">Unreserve</span>\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div>\r\n              {itemStatus === \"deleted\" ? (\r\n                <></>\r\n              ) : itemStatus === \"swapped\" ? (\r\n                <Button className=\"button\" variant=\"warning\">\r\n                  <ShoppingBasketIcon className=\"icons\" />\r\n                  <span className=\"action\" onClick={handleUnswap}>\r\n                    Cancel Agreement\r\n                  </span>\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button className=\"button\" variant=\"warning\">\r\n                    <ShoppingBasketIcon className=\"icons\" />\r\n                    <span\r\n                      className=\"action\"\r\n                      onClick={() => setShowInput(!showInput)}\r\n                    >\r\n                      Mark as Swapped\r\n                    </span>\r\n                  </Button>\r\n                  {showInput ? (\r\n                    <Form className=\"userItemCommandForm\">\r\n                      <Form.Group controlId=\"title\">\r\n                        <Form.Control\r\n                          className=\"userItemCommandFormControl\"\r\n                          type=\"input\"\r\n                          maxlength=\"30\"\r\n                          placeholder=\"Enter your agreement code\"\r\n                          value={input}\r\n                          onChange={(e) => {\r\n                            setInput(e.target.value);\r\n                            setError(\"\");\r\n                            console.log(\"changed to: \" + e.target.value);\r\n                          }}\r\n                          onKeyDown={handleKeyDownSwap}\r\n                          isInvalid={error !== \"\"}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {error}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {itemStatus === \"deleted\" || itemStatus === \"swapped\" ? (\r\n                <></>\r\n              ) : (\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  <HighlightOffIcon className=\"icons\" />\r\n                  <span className=\"action\">Delete</span>\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./item.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SingleItem from \"../../components/singleItem/SingleItem\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { ArrowBackIos } from \"@material-ui/icons\";\r\nimport SwapAway from \"../../components/swapAway/SwapAway\";\r\nimport UserItemCommand from \"../../components/userItemCommand/UserItemCommand\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function Item() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const itemId = useParams().itemId;\r\n  const [item, setItem] = useState(null);\r\n  const history = useHistory();\r\n  const [copyLinkText, setCopyLinkText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getItem = async () => {\r\n      try {\r\n        if (itemId) {\r\n          const res = await axios.get(\"/api/items?itemId=\" + itemId);\r\n          await setItem(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getItem();\r\n  }, [itemId]);\r\n\r\n  const handleReserve = async () => {\r\n    try {\r\n      if (itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"reserved\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUnreserve = async () => {\r\n    try {\r\n      if (itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"waiting\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSwap = async (agreementId) => {\r\n    console.log(\"handleSwap called with agreementId: \" + agreementId);\r\n    try {\r\n      const agreementRes = await axios.put(\r\n        \"/api/agreements/update/addParties/\" + agreementId,\r\n        { userId: user?._id, itemId: itemId }\r\n      );\r\n      if (agreementRes.status === 200 && itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"swapped\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUnswap = async () => {\r\n    console.log(\"handleUnswap called\");\r\n    try {\r\n      const agreementRes = await axios.put(\r\n        \"/api/agreements/update/removeParties\",\r\n        {\r\n          userId: user?._id,\r\n          itemId: itemId,\r\n        }\r\n      );\r\n      if (agreementRes.status === 200 && itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"waiting\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    console.log(\"handleDelete called\");\r\n    try {\r\n      const res = await axios.delete(\"/api/items?itemId=\" + item?._id);\r\n      if (res.status === 200) {\r\n        history.push(\"/profile/\" + user.username + \"/listings\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleCopyLink = (type) => {\r\n    console.log(\"copy link\");\r\n    var dummy = document.createElement(\"input\");\r\n    const text =\r\n      type === \"link\" ? window.location.href : item?._id ? item._id : \"\";\r\n\r\n    document.body.appendChild(dummy);\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n    setCopyLinkText(\r\n      type === \"link\"\r\n        ? \"Link to this page has been copied\"\r\n        : \"Item ID has been copied\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"itemPage\">\r\n      <TopBar currentUser={user} />\r\n      {/* <div className=\"itemBackArrow\">\r\n        <ArrowBackIos />\r\n        <span>Back</span>\r\n      </div> */}\r\n      <label className=\"itemHeader\">\r\n        {item ? item.title : \"Error: No Item Displayed\"}\r\n        {item ? (\r\n          <Chip\r\n            className=\"itemTag\"\r\n            label={item.status === \"waiting\" ? \"available\" : item.status}\r\n            size=\"small\"\r\n            color={\r\n              item.status === \"waiting\"\r\n                ? \"\"\r\n                : item.status === \"reserved\"\r\n                ? \"primary\"\r\n                : \"secondary\"\r\n            }\r\n            style={{\r\n              marginLeft: \"15px\",\r\n              marginRight: \"10px\",\r\n              marginTop: \"0px\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </label>\r\n\r\n      <Container className=\"itemImg\">\r\n        <Row>\r\n          <Col>\r\n            <SingleItem imgLinkArray={item ? item.img : []} />\r\n          </Col>\r\n          <Col>\r\n            {user?._id === item?.userId ? (\r\n              <UserItemCommand\r\n                itemUserId={item?.userId}\r\n                itemStatus={item?.status}\r\n                handleReserve={handleReserve}\r\n                handleUnreserve={handleUnreserve}\r\n                handleDelete={handleDelete}\r\n                handleSwap={handleSwap}\r\n                handleUnswap={handleUnswap}\r\n              />\r\n            ) : (\r\n              <SwapAway itemUserId={item?.userId} />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* <div className=\"itemImg\">\r\n                <SingleItem />\r\n                <SwapAway />\r\n            </div> */}\r\n      <div className=\"itemHeaderSecond\">\r\n        <div className=\"itemGetLink\" onClick={() => handleCopyLink(\"link\")}>\r\n          Copy Link\r\n        </div>\r\n        <div className=\"itemGetLink\" onClick={() => handleCopyLink(\"id\")}>\r\n          Copy Item ID\r\n        </div>\r\n        <div className=\"itemCopyLinkText\">{copyLinkText}</div>\r\n      </div>\r\n      <div className=\"itemDescription\">\r\n        <h5>Description</h5>\r\n        <span>\r\n          {item\r\n            ? item.desc\r\n            : \"The item does not exist, and hence no description\"}\r\n        </span>\r\n      </div>\r\n      <div className=\"itemIdealSwaps\">\r\n        <h5>Ideal swaps</h5>\r\n        {item?.idealSwaps.map((tags) => (\r\n          <Chip\r\n            className=\"tag\"\r\n            key={tags}\r\n            label={tags}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./login.css\";\r\nimport RestoreFromTrashRoundedIcon from \"@material-ui/icons/RestoreFromTrashRounded\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { user, dispatch } = useContext(AuthContext);\r\n  const usernameRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  const checkCredentials = async () => {\r\n    try {\r\n      const res = await axios\r\n        .post(\"/api/auth/login\", {\r\n          username: usernameRef.current.value,\r\n          password: passwordRef.current.value,\r\n        })\r\n        .then(() => {\r\n          usernameRef.current.setCustomValidity(\"\");\r\n          passwordRef.current.setCustomValidity(\"\");\r\n        });\r\n    } catch (err) {\r\n      if (err.response.status === 400) {\r\n        usernameRef.current.setCustomValidity(\"Incorrect username or password\");\r\n      }\r\n    }\r\n  };\r\n  const handleUsername = async (e) => {\r\n    setUsername(e.target.value);\r\n    console.log(e.target.value);\r\n    checkCredentials();\r\n  };\r\n  const handlePassword = async (e) => {\r\n    setPassword(e.target.value);\r\n    console.log(e.target.value);\r\n    checkCredentials();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const loginCall = async (userCredential, dispatch) => {\r\n      dispatch({ type: \"LOGIN_START\" });\r\n      try {\r\n        const res = await axios.post(\"/api/auth/login\", userCredential);\r\n        const sock = await io(); //const sock = await io(\"ws://localhost:8080\");\r\n        sock.on(\"connect\", () => {\r\n          sock.emit(\"addUser\", res.data._id);\r\n          console.log(\"sock inside try block: \", sock);\r\n          dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: { user: res.data, sock: sock },\r\n          });\r\n        });\r\n      } catch (err) {\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: err });\r\n      }\r\n    };\r\n    loginCall({ username: username, password: password }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginTop\">\r\n          <RestoreFromTrashRoundedIcon\r\n            className=\"loginShoppingCartIcon\"\r\n            style={{\r\n              fontSize: 220,\r\n              color: \"white\",\r\n            }}\r\n          />\r\n        </div>\r\n        <form className=\"loginBottom\" onSubmit={handleSubmit}>\r\n          <div className=\"loginInputWrapper\">\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                color: \"white\",\r\n                fontSize: 32,\r\n                top: 32,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"USERNAME\"\r\n              onChange={handleUsername}\r\n              value={username}\r\n              ref={usernameRef}\r\n              required\r\n              className=\"loginInput\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"loginInputWrapper\">\r\n            <LockOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                color: \"white\",\r\n                fontSize: 32,\r\n                top: 32,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"PASSWORD\"\r\n              required\r\n              onChange={handlePassword}\r\n              value={password}\r\n              ref={passwordRef}\r\n              className=\"loginInput\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <button className=\"loginButton\" type=\"submit\">\r\n            LOGIN\r\n          </button>\r\n          <Link to=\"/register\" className=\"loginBottomLink\">\r\n            Forgot password?\r\n          </Link>\r\n          <Link to=\"/register\" className=\"loginBottomLink\">\r\n            New to ReHash? Sign up now!\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./conversation.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\n\r\nexport default function Conversation({\r\n  active,\r\n  userId,\r\n  lastMessageText,\r\n  lastMessageTime,\r\n  online,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [displayTimeAgo, setDisplayTimeAgo] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"lastMessageText updated. the new message is: \",\r\n      lastMessageText\r\n    );\r\n  }, [lastMessageText]);\r\n\r\n  useEffect(() => {\r\n    if (lastMessageTime) {\r\n      setDisplayTimeAgo(format(lastMessageTime));\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (lastMessageTime) {\r\n        if (displayTimeAgo !== format(lastMessageTime)) {\r\n          setDisplayTimeAgo(format(lastMessageTime));\r\n        }\r\n      }\r\n\r\n      // console.log(\"This will run every second!\");\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [lastMessageTime]);\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\"/api/users?userId=\" + userId);\r\n        await setUser(res.data);\r\n        console.log(\"successfully got user\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div\r\n      className={active ? \"conversation conversationActive\" : \"conversation\"}\r\n    >\r\n      <div className=\"conversationLeft\">\r\n        <img\r\n          src={\r\n            user?.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + \"person/noAvatar.png\"\r\n          }\r\n          alt=\"\"\r\n          className=\"conversationImg\"\r\n        />\r\n        {online ? <div className=\"conversationBadge\"></div> : <></>}\r\n      </div>\r\n\r\n      <div className=\"conversationRight\">\r\n        <div className=\"conversationRightTop\">\r\n          <div className=\"conversationName\">{user?.username}</div>\r\n          <div className=\"conversationStatus\">{displayTimeAgo}</div>\r\n        </div>\r\n\r\n        <span className=\"conversationLastMsg\">{lastMessageText}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./message.css\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Message({ message, own, pictureLink }) {\r\n  const [displayTimeAgo, setDisplayTimeAgo] = useState(\"\");\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    if (message) {\r\n      setDisplayTimeAgo(format(message.createdAt));\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (displayTimeAgo !== format(message.createdAt)) {\r\n        setDisplayTimeAgo(format(message.createdAt));\r\n      }\r\n      // console.log(\"This will run every second!\");\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [message]);\r\n\r\n  return own ? (\r\n    <div className=\"messageOwn\">\r\n      <div className=\"messageTopOwn\">\r\n        <img className=\"messageImgOwn\" src={pictureLink} alt=\"\" />\r\n        <p\r\n          className=\"messageTextOwn\"\r\n          onClick={() => {\r\n            setShow(!show);\r\n          }}\r\n        >\r\n          {message.text}\r\n        </p>\r\n      </div>\r\n      {show ? <div className=\"messageBottom\">{displayTimeAgo}</div> : <></>}\r\n    </div>\r\n  ) : (\r\n    <div className=\"message\">\r\n      <div className=\"messageTop\">\r\n        <img className=\"messageImg\" src={pictureLink} alt=\"\" />\r\n        <p\r\n          className=\"messageText\"\r\n          onClick={() => {\r\n            setShow(!show);\r\n          }}\r\n        >\r\n          {message.text}\r\n        </p>\r\n      </div>\r\n      {show ? <div className=\"messageBottom\">{displayTimeAgo}</div> : <></>}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport \"./chat.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Chat() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentChatWith, setCurrentChatWith] = useState(null);\r\n  const [currentChatWithLastActive, setCurrentChatWithLastActive] =\r\n    useState(\"\");\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const scrollRef = useRef();\r\n  const initialActiveConvoId = useParams().initialActiveConvoId;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getInitialActiveConvo = async () => {\r\n      if (initialActiveConvoId !== \"0\") {\r\n        console.log(\"initialActiveConvoId is: \" + initialActiveConvoId);\r\n        const res = await axios.get(\r\n          \"/api/conversations/id/\" + initialActiveConvoId\r\n        );\r\n        setCurrentChat(res.data);\r\n      }\r\n    };\r\n    getInitialActiveConvo();\r\n  }, [initialActiveConvoId]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio.id);\r\n    //can change slightly to map for all convo, even if not opened\r\n    sockio.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [sockio]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    sockio.on(\"getUsers\", (users) => {\r\n      console.log(\"getUser received on client side\");\r\n      setOnlineUsers(\r\n        user.chatFollow.filter((f) => users.some((u) => u.userId === f))\r\n      );\r\n    });\r\n  }, [user, sockio]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        //need to change this and add another API when search function is implemented\r\n        const res = await axios.get(\"/api/conversations/\" + user._id);\r\n        await setConversations(res.data);\r\n        // console.log(conversations);\r\n        // console.log(user);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user._id, messages, onlineUsers]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    const friendId = currentChat?.members.find((m) => m !== user._id);\r\n\r\n    const getCurrentChatWith = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?userId=\" + friendId);\r\n        await setCurrentChatWith(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getCurrentChatWith();\r\n  }, [user, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const updateLastActive = async () => {\r\n      var timeago = \"\";\r\n      try {\r\n        const res = await axios.get(\r\n          \"/api/users?userId=\" + currentChatWith?._id\r\n        );\r\n        const newLastActive = res.data.lastActive;\r\n        console.log(\"newLastActive: \", newLastActive);\r\n        timeago = format(newLastActive);\r\n        console.log(\"LOOK AT ME: TIMEAGO \", timeago);\r\n      } catch (err) {\r\n        timeago = format(currentChatWith?.lastActive);\r\n        console.log(err);\r\n      }\r\n      setCurrentChatWithLastActive(\"Active \" + timeago);\r\n    };\r\n\r\n    updateLastActive();\r\n    const interval = setInterval(() => {\r\n      updateLastActive();\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [currentChatWith]);\r\n\r\n  //handles the event that the \"send\" button is clicked\r\n  const handleSendMessage = async (e) => {\r\n    if (newMessage !== \"\") {\r\n      e.preventDefault();\r\n      await setNewMessage(\"\");\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n\r\n      try {\r\n        const res = await axios.post(\"/api/messages\", message);\r\n\r\n        const lastMessageText = res.data.text;\r\n        const lastMessageTime = res.data.createdAt;\r\n        const updateRes = await axios.put(\r\n          \"/api/conversations/\" + currentChat._id + \"/lastmessage\",\r\n          { lastMessageText: lastMessageText, lastMessageTime: lastMessageTime }\r\n        );\r\n        console.log(updateRes);\r\n        console.log(\"currentChat is: \", currentChat);\r\n        await setMessages([...messages, res.data]);\r\n        console.log(\r\n          \"updated messages. the new messaged sent is: \",\r\n          res.data.text\r\n        );\r\n\r\n        const receiverId = currentChat.members.find(\r\n          (member) => member !== user._id\r\n        );\r\n\r\n        sockio.emit(\"sendMessage\", {\r\n          senderId: user._id,\r\n          receiverId,\r\n          text: newMessage,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      console.log(\"new message when eneter is pressed: \", newMessage);\r\n      setNewMessage(newMessage);\r\n      if (newMessage !== \"\") {\r\n        handleSendMessage(e);\r\n        console.log(\"passing to handleSendMessage\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    history.push(\"/profile/\" + currentChatWith.username + \"/listings\");\r\n  };\r\n\r\n  const handleGenerateAgreement = async () => {\r\n    console.log(\"generate agreement is clicked\");\r\n    const res = await axios.post(\"/api/agreements\");\r\n    if (res.data && res.data._id) {\r\n      setNewMessage(\"Your agreement code has been generated: \" + res.data._id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"auto\" });\r\n  }, [messages]);\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input\r\n              placeholder=\"Search for users\"\r\n              className=\"chatMenuInput\"\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              value={searchText}\r\n            />\r\n            {conversations.map((c) => {\r\n              const userId = c.members.find((m) => m !== user._id);\r\n              return (\r\n                <div onClick={() => setCurrentChat(c)}>\r\n                  <Conversation\r\n                    online={onlineUsers.includes(userId)}\r\n                    lastMessageText={c.lastMessageText}\r\n                    lastMessageTime={c.lastMessageTime}\r\n                    userId={userId}\r\n                    active={currentChat ? c._id === currentChat._id : false}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxHeader\">\r\n                  <div className=\"chatBoxHeaderLeft\">\r\n                    <img\r\n                      src={\r\n                        currentChatWith?.profilePicture\r\n                          ? PF + currentChatWith.profilePicture\r\n                          : PF + \"person/noAvatar.png\"\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"chatBoxHeaderImg\"\r\n                    />\r\n                    <div className=\"chatBoxHeaderContent\">\r\n                      <div className=\"chatBoxHeaderName\">\r\n                        {currentChatWith?.username}\r\n                      </div>\r\n                      <div className=\"chatBoxHeaderStatus\">\r\n                        {onlineUsers.includes(currentChatWith?._id)\r\n                          ? \"Online now\"\r\n                          : currentChatWithLastActive}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"chatBoxViewProfileButton\"\r\n                    onClick={handleViewProfile}\r\n                  >\r\n                    View Profile\r\n                  </button>\r\n                </div>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      <Message\r\n                        message={m}\r\n                        own={m.sender === user._id}\r\n                        pictureLink={\r\n                          m.sender === user._id\r\n                            ? user?.profilePicture\r\n                              ? PF + user.profilePicture\r\n                              : PF + \"person/noAvatar.png\"\r\n                            : currentChatWith?.profilePicture\r\n                            ? PF + currentChatWith.profilePicture\r\n                            : PF + \"person/noAvatar.png\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"Write a message ...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                    onKeyDown={handleKeyDown}\r\n                  ></textarea>\r\n                  <button\r\n                    className=\"chatAgreementButton\"\r\n                    onClick={handleGenerateAgreement}\r\n                  >\r\n                    Generate Agreement\r\n                  </button>\r\n                  <button\r\n                    className=\"chatSubmitButton\"\r\n                    onClick={handleSendMessage}\r\n                  >\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat {sockio.id}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./myGroups.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport GroupIcon from \"../../components/groupIcon/GroupIcon\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MyGroups() {\r\n  const { user, sockio } = useContext(AuthContext); //this user is currentUser\r\n  const username = useParams().username;\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [myGroups, setMyGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const getMyGroups = async () => {\r\n      if (profileUser) {\r\n        const res = await axios.get(\r\n          \"/api/groups/filter?userId=\" + profileUser._id\r\n        );\r\n        setMyGroups(res.data);\r\n      }\r\n    };\r\n    getMyGroups();\r\n  }, [profileUser]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"myGroupsPageTopSection\">\r\n        <TopBar currentUser={user} />\r\n      </div>\r\n      <div className=\"myGroupsPageMiddleSection\">\r\n        <SideBar className=\"sidebar\" sidebarUser={profileUser} />\r\n        <div className=\"myGroupsPageMiddleSectionRight\">\r\n          <div className=\"myGroupsPageMiddleSectionRightHeader\">\r\n            <span className=\"myGroupsPageMiddleSectionRightHeaderText\">\r\n              Groups You Have Joined\r\n            </span>\r\n            <div className=\"myGroupsPageGroupIconWrapper\">\r\n              <Row\r\n                className=\"myGroupsPageGroupIconContainer\"\r\n                xl={5}\r\n                lg={4}\r\n                md={3}\r\n                xs={2}\r\n              >\r\n                <Col>\r\n                  <GroupIcon groupImg=\"group/add.jpg\" create={true} />\r\n                </Col>\r\n                {myGroups.map((group) => (\r\n                  <Col key={group._id}>\r\n                    <GroupIcon\r\n                      groupImg={group.groupImg}\r\n                      groupName={group.groupName}\r\n                      groupId={group._id}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n                {myGroups.map((group) => (\r\n                  <Col key={group._id}>\r\n                    <GroupIcon\r\n                      groupImg={group.groupImg}\r\n                      groupName={group.groupName}\r\n                      groupId={group._id}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n                {myGroups.map((group) => (\r\n                  <Col key={group._id}>\r\n                    <GroupIcon\r\n                      groupImg={group.groupImg}\r\n                      groupName={group.groupName}\r\n                      groupId={group._id}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./settings.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport { Container, Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Settings() {\r\n  const { user, sockio, dispatch } = useContext(AuthContext);\r\n  const username = useParams().username;\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const [form, setForm] = useState({ showPassword: false });\r\n  const [errors, setErrors] = useState({});\r\n  const [imgError, setImgError] = useState({});\r\n  const [passwordUpdateValid, setPasswordUpdateValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  const imageHandler = (e) => {\r\n    const newFile = Object.assign(e.target.files[0], {\r\n      preview: URL.createObjectURL(e.target.files[0]),\r\n    });\r\n    setImgFile(newFile);\r\n    if (newFile && imgError.imgFile) {\r\n      setImgError({ imgFile: null });\r\n    }\r\n    console.log(newFile.preview);\r\n  };\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      if (imgFile) {\r\n        URL.revokeObjectURL(imgFile.preview);\r\n      }\r\n    },\r\n    [imgFile]\r\n  );\r\n\r\n  const handleChangePicture = async (e) => {\r\n    e.preventDefault();\r\n    if (!imgFile) {\r\n      setImgError({ imgFile: \"No image uploaded!\" });\r\n    } else {\r\n      const data = new FormData();\r\n      data.append(\"file\", imgFile);\r\n      console.log(data);\r\n      const updatePicture = async () => {\r\n        try {\r\n          const uploadFileRes = await axios.post(\"/api/upload/person\", data);\r\n          if (uploadFileRes.status === 200) {\r\n            const newProfilePicture = {\r\n              profilePicture: uploadFileRes.data.imagePath,\r\n            };\r\n            const newUser = { ...user, ...newProfilePicture };\r\n            console.log(newUser);\r\n\r\n            const res = await axios.put(\"/api/users/\" + user._id, {\r\n              profilePicture: uploadFileRes.data.imagePath,\r\n            });\r\n            if (res.status === 200) {\r\n              dispatch({\r\n                type: \"UPDATE\",\r\n                payload: { user: newUser, sock: sockio },\r\n              });\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n\r\n      await updatePicture();\r\n      setImgFile(null);\r\n    }\r\n  };\r\n\r\n  //Below is for Form Control for password\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    //if error exists, remove them from the error object\r\n    if (!!errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    }\r\n\r\n    if (passwordUpdateValid) {\r\n      setPasswordUpdateValid(false);\r\n    }\r\n  };\r\n\r\n  //handles Password submit\r\n  const handleSubmitPassword = async (e) => {\r\n    e.preventDefault();\r\n    setPasswordUpdateValid(false);\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      const updatePassword = async () => {\r\n        try {\r\n          const res = await axios.put(\"/api/auth/updatePassword/\" + user._id, {\r\n            currentPassword: form.currentPassword,\r\n            newPassword: form.newPassword,\r\n          });\r\n          if (\r\n            res &&\r\n            res.status === 200 &&\r\n            res.data.message === \"User password has been updated\"\r\n          ) {\r\n            setPasswordUpdateValid(true);\r\n            setForm({\r\n              showPassword: false,\r\n              confirmPassword: \"\",\r\n              newPassword: \"\",\r\n              currentPassword: \"\",\r\n            });\r\n          } else if (\r\n            res &&\r\n            res.status === 200 &&\r\n            res.data.message === \"wrong password\"\r\n          ) {\r\n            const wrongPasswordError = { currentPassword: \"Wrong Password!\" };\r\n            setErrors({\r\n              ...errors,\r\n              ...wrongPasswordError,\r\n            });\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      await updatePassword();\r\n    }\r\n  };\r\n\r\n  //function for finding errors in password form\r\n  const findFormErrors = () => {\r\n    const { currentPassword, newPassword, confirmPassword } = form;\r\n    const newErrors = {};\r\n\r\n    if (!currentPassword || currentPassword === \"\") {\r\n      newErrors.currentPassword = \"Current password cannot be empty!\";\r\n    }\r\n\r\n    if (!newPassword || newPassword.length < 6) {\r\n      newErrors.newPassword = \"New password must have at least 6 characters!\";\r\n    }\r\n\r\n    if (!confirmPassword || confirmPassword !== newPassword) {\r\n      newErrors.confirmPassword = \"New and confirm passwords do not match!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"settingsContainer\">\r\n        <SideBar sidebarUser={user} />\r\n        <div className=\"settingsRight\">\r\n          <span className=\"settingsHeader\">Settings</span>\r\n          <Container className=\"settingsWrapper\">\r\n            <Card\r\n              style={{ width: \"60em\", height: \"19em\" }}\r\n              className=\"settingsUserProfileContainer shadow p-3 mb-5 bg-white rounded\"\r\n            >\r\n              <span className=\"settingsUserProfileHeader\">User Profile</span>\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <img\r\n                      src={\r\n                        imgFile && imgFile.preview\r\n                          ? imgFile.preview\r\n                          : user && user.profilePicture\r\n                          ? PF + user.profilePicture\r\n                          : \"/assests/userProfile.png\"\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"userProfileImg\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"settingsImgInstructions\">\r\n                      <div className=\"settingsImgInstructionsText\">\r\n                        Upload a profile picture of yourself to help others know\r\n                        more about you!\r\n                      </div>\r\n                      <Form.Group>\r\n                        <Form.Control\r\n                          className=\"imgUploadButton\"\r\n                          as=\"input\"\r\n                          name=\"image-upload\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={imageHandler}\r\n                          isInvalid={!!imgError.imgFile}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {imgError.imgFile}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Button\r\n                        className=\"changeProfilePictureButton\"\r\n                        variant=\"warning\"\r\n                        onClick={handleChangePicture}\r\n                      >\r\n                        Change profile picture\r\n                      </Button>\r\n                    </div>\r\n                    {/* <div>{user.profilePicture}</div> */}\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Card>\r\n            <Card\r\n              style={{ width: \"60em\" }}\r\n              className=\"settingsPasswordContainer shadow p-3 mb-5 bg-white rounded\"\r\n            >\r\n              <span className=\"settingsPasswordHeader\">Password</span>\r\n              <Form>\r\n                <div className=\"passwordInputWrapper\">\r\n                  <Form.Group controlId=\"oldPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"currentPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"Current Password\"\r\n                      value={form.currentPassword}\r\n                      onChange={(e) =>\r\n                        setField(\"currentPassword\", e.target.value)\r\n                      }\r\n                      isInvalid={!!errors.currentPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.currentPassword}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"newPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"newPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"New Password\"\r\n                      value={form.newPassword}\r\n                      onChange={(e) => setField(\"newPassword\", e.target.value)}\r\n                      isInvalid={!!errors.newPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.newPassword}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"confirmPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"Confirm Password\"\r\n                      value={form.confirmPassword}\r\n                      onChange={(e) =>\r\n                        setField(\"confirmPassword\", e.target.value)\r\n                      }\r\n                      isInvalid={!!errors.confirmPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.confirmPassword}\r\n                    </Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"valid\">\r\n                      \"Password updated successfully\"\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={form.showPassword}\r\n                    onClick={() => setField(\"showPassword\", !form.showPassword)}\r\n                  />\r\n                  <label className=\"checkboxLabel\">Show input</label>\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    className=\"passwordButton\"\r\n                    variant=\"warning\"\r\n                    onClick={handleSubmitPassword}\r\n                  >\r\n                    Update password\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./groupSidebar.css\";\r\nimport {\r\n  CDBSidebar,\r\n  CDBSidebarContent,\r\n  CDBSidebarFooter,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n} from \"cdbreact\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function GroupSidebar({\r\n  group,\r\n  isGroupMember,\r\n  handleLeave,\r\n  handleJoin,\r\n  handleUpdateGroup,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [showInviteInput, setShowInviteInput] = useState(false);\r\n  const [newImgLink, setNewImgLink] = useState(null);\r\n  const [inviteError, setInviteError] = useState(\"\");\r\n  const [inviteNameInput, setInviteNameInput] = useState(\"\");\r\n  const [inviteSuccess, setInviteSuccess] = useState(\"\");\r\n  const [editedDescription, setEditedDescription] = useState(\"\"); //the text to be shown in the textarea during edit of description\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n      setEditedDescription(\r\n        group.description + \"(Delete this and press 'Enter' when done editing)\"\r\n      );\r\n    }\r\n  }, [group]);\r\n\r\n  const handleInviteButton = () => {\r\n    showInviteInput ? setShowInviteInput(false) : setShowInviteInput(true);\r\n  };\r\n\r\n  const handleKeyDownInvite = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setInviteNameInput(inviteNameInput);\r\n      if ((inviteNameInput.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"invitation name is empty!\");\r\n        setInviteNameInput(\"\");\r\n      } else {\r\n        console.log(\"trying to find user to invite...\");\r\n        try {\r\n          const res = await axios.get(\"/api/users?username=\" + inviteNameInput);\r\n          if (res.status === 200 && group && res.data) {\r\n            if (group.members.includes(res.data._id)) {\r\n              setInviteError(\"User already in this group!\");\r\n            } else {\r\n              const newNotification = {\r\n                senderName: user.username,\r\n                receiverId: res.data._id,\r\n                invitationId: group._id,\r\n                invitationName: group.groupName,\r\n              };\r\n              const notificationRes = await axios.post(\r\n                \"/api/notifications\",\r\n                newNotification\r\n              );\r\n              if (notificationRes.status === 200) {\r\n                setInviteNameInput(\"\");\r\n                setInviteSuccess(\"Invitation sent!\");\r\n              } else {\r\n                setInviteError(\"Server error. Unable to send notification\");\r\n              }\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          setInviteError(\"User not found!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDownDescription = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setEditedDescription(editedDescription);\r\n      if ((editedDescription.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"editedDescription is empty!\");\r\n        setDescriptionError(\"Description cannot be empty!\");\r\n        return;\r\n      }\r\n      if (editedDescription.length > 200) {\r\n        setDescriptionError(\"Description cannot exceed 200 characters!\");\r\n        return;\r\n      }\r\n      try {\r\n        const newGroupDescription = {\r\n          description: editedDescription,\r\n        };\r\n        //update group in database\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id,\r\n          newGroupDescription\r\n        );\r\n        if (res.status === 200) {\r\n          setEditMode(false);\r\n          handleUpdateGroup(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setDescriptionError(\"Server error: unable to update!\");\r\n        setEditMode(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const inviteComponent = (\r\n    <div className=\"inviteComponentWrapper\">\r\n      <div className=\"inviteComponentContainer\">\r\n        <span className=\"inviteComponentText\">Who do you want to invite?</span>\r\n        <input\r\n          className=\"inviteComponentInput\"\r\n          placeholder=\"Input name and Enter...\"\r\n          value={inviteNameInput}\r\n          onChange={(e) => {\r\n            setInviteNameInput(e.target.value);\r\n            if (inviteError !== \"\") {\r\n              setInviteError(\"\");\r\n            }\r\n            if (inviteSuccess !== \"\") {\r\n              setInviteSuccess(\"\");\r\n            }\r\n          }}\r\n          onKeyDown={handleKeyDownInvite}\r\n        />\r\n        <div className=\"inviteComponentErrorMessage\">{inviteError}</div>\r\n        <div className=\"inviteComponentSuccessMessage\">{inviteSuccess}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handleClickGroupPicture = () => {\r\n    if (user && group && user._id === group.creatorId) {\r\n      alert(\"Close this dialogue and select image to upload\");\r\n      document.getElementById(\"groupImageUploadInput\").click();\r\n    } else {\r\n      alert(\r\n        \"You must be logged in and be the creator of this group to change the group photo\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUploadGroupImage = async (e) => {\r\n    if (e.target.files[0]) {\r\n      const imageFile = e.target.files[0];\r\n      console.log(imageFile);\r\n      try {\r\n        const data = new FormData();\r\n        data.append(\"file\", imageFile);\r\n        //upload picture to storage and get new filename\r\n        const uploadFileRes = await axios.post(\"/api/upload/group\", data);\r\n        if (uploadFileRes.status === 200 && group) {\r\n          const newGroupPicture = {\r\n            groupImg: uploadFileRes.data.imagePath,\r\n          };\r\n          console.log(newGroupPicture);\r\n          //update group in database\r\n          const res = await axios.put(\r\n            \"/api/groups/\" + group._id,\r\n            newGroupPicture\r\n          );\r\n          if (res.status === 200) {\r\n            setNewImgLink(uploadFileRes.data.imagePath);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGroupHome = () => {\r\n    if (group) {\r\n      history.push(\"/groups/\" + group._id + \"/main\");\r\n    }\r\n  };\r\n\r\n  const handleMyPosts = () => {\r\n    if (group) {\r\n      history.push(\"/groups/\" + group._id + \"/myPosts\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"GroupSidebarWrapper\">\r\n      <CDBSidebar textColor=\"black\" backgroundColor=\"#FFD68D\">\r\n        <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n          <div className=\"groupProfileDiv\">\r\n            <img\r\n              className=\"groupProfile\"\r\n              src={\r\n                newImgLink\r\n                  ? PF + newImgLink\r\n                  : group?.groupImg\r\n                  ? PF + group.groupImg\r\n                  : PF + \"group/noImageUploaded.png\"\r\n              }\r\n              alt=\"\"\r\n              onClick={handleClickGroupPicture}\r\n            />\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              id=\"groupImageUploadInput\"\r\n              accept=\"image/*\"\r\n              onChange={handleUploadGroupImage}\r\n            />\r\n          </div>\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarHeader style={{ textAlign: \"center\" }}>\r\n          <div className=\"groupNameWrapper\">\r\n            <div className=\"groupName\">\r\n              <span className=\"groupNameText\">\r\n                {group?.groupName ? group.groupName : \"No Group Name\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {isGroupMember ? (\r\n            <div>\r\n              <div className=\"groupInviteButtonWrapper\">\r\n                <div className=\"groupInviteButton\" onClick={handleInviteButton}>\r\n                  <span className=\"groupInviteButtonText\">+ Invite</span>\r\n                </div>\r\n\r\n                {/* {showInviteInput ? inviteComponent : <></>} */}\r\n              </div>\r\n              <div>{showInviteInput ? inviteComponent : <></>}</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"groupJoinButtonWrapper\">\r\n              <div className=\"groupJoinButton\" onClick={handleJoin}>\r\n                <span className=\"groupJoinButtonText\">+ Join Group</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarContent>\r\n          <CDBSidebarMenu>\r\n            <div className=\"groupDescriptionContainer\">\r\n              <div className=\"groupDescriptionHeader\">\r\n                <div className=\"groupDescriptionHeaderText\">\r\n                  Group Description:\r\n                </div>\r\n                {user && group && user._id === group.creatorId && !editMode ? (\r\n                  <div\r\n                    className=\"groupDescriptionHeaderEdit\"\r\n                    onClick={() => setEditMode(true)}\r\n                  >\r\n                    edit\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              {editMode ? (\r\n                <>\r\n                  <textarea\r\n                    className=\"groupDescriptionTextArea\"\r\n                    rows={6}\r\n                    value={editedDescription}\r\n                    onChange={(e) => {\r\n                      if (descriptionError !== \"\") {\r\n                        setDescriptionError(\"\");\r\n                      }\r\n                      setEditedDescription(e.target.value);\r\n                    }}\r\n                    onKeyDown={handleKeyDownDescription}\r\n                  />\r\n                  <div className=\"groupDescriptionError\">\r\n                    {descriptionError}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"groupDescriptionContent\">\r\n                  {group?.description\r\n                    ? group.description\r\n                    : \"This group creator has left no description of this group\"}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CDBSidebarMenuItem\r\n              className=\"groupMenuItem\"\r\n              onClick={handleGroupHome}\r\n            >\r\n              <HomeIcon className=\"groupMyPostsIcon\" />\r\n              <span className=\"groupMyPosts\">Group Home</span>\r\n            </CDBSidebarMenuItem>\r\n            <CDBSidebarMenuItem\r\n              className=\"groupMenuItem\"\r\n              onClick={handleMyPosts}\r\n            >\r\n              {isGroupMember ? (\r\n                <>\r\n                  <CreateIcon className=\"groupMyPostsIcon\" />\r\n                  <span className=\"groupMyPosts\">My Posts</span>\r\n                </>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </CDBSidebarMenuItem>\r\n          </CDBSidebarMenu>\r\n        </CDBSidebarContent>\r\n        <CDBSidebarFooter>\r\n          {isGroupMember ? (\r\n            <div className=\"groupLeaveButtonWrapper\">\r\n              <div className=\"groupLeaveButton\" onClick={handleLeave}>\r\n                <span className=\"groupLeaveButtonText\">Leave Group</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </CDBSidebarFooter>\r\n      </CDBSidebar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./groupSharePost.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function GroupSharePost({ handleAdd }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [itemId, setItemId] = useState(\"\");\r\n  const [itemError, setItemError] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n\r\n  const handlePost = async () => {\r\n    if ((itemId.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      setItemError(\"Item ID cannot be empty!\");\r\n      return;\r\n    }\r\n    if ((description.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      setDescriptionError(\"Description cannot be empty!\");\r\n      return;\r\n    }\r\n    console.log(\"itemId: \" + itemId);\r\n    console.log(\"description: \" + description);\r\n    try {\r\n      const findItemRes = await axios.get(\"/api/items?itemId=\" + itemId);\r\n      if (!findItemRes.data) {\r\n        setItemError(\"Item with given Item ID does not exist!\");\r\n        return;\r\n      }\r\n      if (!user || findItemRes.data.userId !== user._id) {\r\n        setItemError(\"Item with given ID does not belong to you!\");\r\n        return;\r\n      }\r\n      const itemIdTemp = itemId;\r\n      const descriptionTemp = description;\r\n      setItemId(\"\");\r\n      setDescription(\"\");\r\n      handleAdd(itemIdTemp, descriptionTemp);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setItemError(\"Item with given Item ID does not exist!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupSharePostWrapper\">\r\n      <div className=\"groupSharePostContainer\">\r\n        <div className=\"sharePostTop\">\r\n          <div className=\"sharePostTopContainer\">\r\n            <img\r\n              className=\"sharePostProfileImg\"\r\n              src={\r\n                user?.profilePicture\r\n                  ? PF + user.profilePicture\r\n                  : PF + \"person/noAvatar.png\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <span className=\"sharePostProfileText\">\r\n              {user?.username ? user.username : \"No Name\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"sharePostContainer\">\r\n          <div className=\"sharePostContainerWrapper\">\r\n            <div className=\"sharePostContainerTop\">\r\n              <div className=\"sharePostContainerItemId\">\r\n                <input\r\n                  value={itemId}\r\n                  onChange={(e) => {\r\n                    setItemId(e.target.value);\r\n                    if (itemError !== \"\") {\r\n                      setItemError(\"\");\r\n                    }\r\n                  }}\r\n                  className=\"sharePostContainerItemIdInput\"\r\n                  placeholder=\"Input your post ID...\"\r\n                />\r\n                <span className=\"sharePostContainerErrorMessage\">\r\n                  {itemError}\r\n                </span>\r\n              </div>\r\n              <div className=\"sharePostButton\" onClick={handlePost}>\r\n                Post\r\n              </div>\r\n            </div>\r\n            <div className=\"sharePostContainerTextArea\">\r\n              <textarea\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  if (descriptionError !== \"\") {\r\n                    setDescriptionError(\"\");\r\n                  }\r\n                }}\r\n                className=\"sharePostContainerTextAreaInput\"\r\n                placeholder=\"Describe your post...\"\r\n              />\r\n              <span className=\"sharePostContainerErrorMessage\">\r\n                {descriptionError}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./comment.css\";\r\n\r\nexport default function Comment({\r\n  commentText,\r\n  commentUserId,\r\n  own,\r\n  handleDelete,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [commentUser, setCommentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getCommentUser = async () => {\r\n      try {\r\n        const res = await axios(\"/api/users?userId=\" + commentUserId);\r\n        await setCommentUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getCommentUser();\r\n  }, [commentUserId]);\r\n\r\n  return (\r\n    <div className=\"commentWrapper\">\r\n      <div className=\"commentContainer\">\r\n        <div className=\"commentUserDetails\">\r\n          <img\r\n            className=\"commentProfileImg\"\r\n            src={\r\n              commentUser && commentUser.profilePicture\r\n                ? PF + commentUser.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n          <span className=\"commentProfileText\">\r\n            {commentUser?.username ? commentUser.username : \"No Name\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"commentUserContent\">{commentText}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./post.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport TextsmsOutlinedIcon from \"@material-ui/icons/TextsmsOutlined\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport ItemListing from \"../itemListing/ItemListing\";\r\nimport Comment from \"../comment/Comment\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Post({ post, handleDelete, canCommentAndLike }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [postUser, setPostUser] = useState(null);\r\n  const [postComments, setPostComments] = useState([]);\r\n  const [postItem, setPostItem] = useState(null);\r\n  const [incomingComment, setIncomingComment] = useState(\"\");\r\n  const [liked, setLiked] = useState(false);\r\n  const [displayLikeCount, setDisplayLikeCount] = useState(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getPostUser = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?userId=\" + post?.postUserId);\r\n        await setPostUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostUser();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const getPostComments = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/comments/filter?postId=\" + post?._id);\r\n        await setPostComments(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostComments();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const getPostItem = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/items?itemId=\" + post?.itemId);\r\n        await setPostItem(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostItem();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setDisplayLikeCount(post.likedBy.length);\r\n      if (user) {\r\n        setLiked(post.likedBy.includes(user._id));\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n    }\r\n  }, [post, user]);\r\n\r\n  //handles new comment when user press enter\r\n  const handleKeyDownComment = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setIncomingComment(incomingComment);\r\n      if ((incomingComment.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"comment is empty!\");\r\n        setIncomingComment(\"\");\r\n      } else {\r\n        console.log(\"adding new comment...\");\r\n        const newComment = {\r\n          postId: post._id,\r\n          commentUserId: user._id,\r\n          commentText: incomingComment,\r\n        };\r\n        try {\r\n          setIncomingComment(\"\");\r\n          const res = await axios.post(\"/api/comments\", newComment);\r\n          await setPostComments([...postComments, res.data]);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //handles the event when user clicks swapAway\r\n  const handleSwapAway = async () => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n      console.log(\"pushed to login\");\r\n    } else {\r\n      const res = await axios.get(\r\n        \"/api/conversations/find/\" + user._id + \"/\" + post.postUserId\r\n      );\r\n      if (res.data.length > 0) {\r\n        history.push(\"/chat/\" + res.data[0]._id);\r\n        console.log(\"pushed to chat id:\" + res.data[0]._id);\r\n      } else {\r\n        const newConvo = await axios.post(\"/api/conversations\", {\r\n          members: [post.postUserId, user._id],\r\n        });\r\n        //chatFollow is not used for now\r\n        history.push(\"/chat/\" + newConvo._id); //likely works but needs to be tested\r\n        console.log(newConvo.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  //handles like and dislike\r\n  const handleDislike = async () => {\r\n    if (canCommentAndLike) {\r\n      setLiked(false);\r\n      setDisplayLikeCount(displayLikeCount - 1);\r\n      try {\r\n        const res = await axios.put(\r\n          \"/api/posts/\" + post._id + \"/removeLike/\" + user?._id\r\n        );\r\n        // if (res.status === 200) {\r\n        // }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You cannot dislike this post as you are either not logged in or not a member of this group!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLike = async () => {\r\n    if (canCommentAndLike) {\r\n      setLiked(true);\r\n      setDisplayLikeCount(displayLikeCount + 1);\r\n      try {\r\n        const res = await axios.put(\r\n          \"/api/posts/\" + post._id + \"/addLike/\" + user?._id\r\n        );\r\n        // if (res.status === 200) {\r\n        // }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You cannot like this post as you are either not logged in or not a member of this group!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    if (postUser) {\r\n      history.push(\"/profile/\" + postUser.username + \"/listings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"postWrapper\">\r\n      <div className=\"postContainer\">\r\n        <div className=\"postTop\">\r\n          {/* <div className=\"postTopContainer\"> */}\r\n          <Row className=\"postTopContainerWrapper\">\r\n            <Col className=\"postTopContainerLeft\">\r\n              <img\r\n                className=\"postProfileImg\"\r\n                src={\r\n                  postUser && postUser.profilePicture\r\n                    ? PF + postUser.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                alt=\"\"\r\n                onClick={handleViewProfile}\r\n              />\r\n              <span className=\"postProfileText\">\r\n                {postUser?.username ? postUser.username : \"No Name\"}\r\n              </span>\r\n            </Col>\r\n            <Col className=\"postTopContainerRight\">\r\n              {user && user._id === post.postUserId ? (\r\n                <div className=\"deleteButtonWrapper\">\r\n                  <div\r\n                    className=\"deleteButton\"\r\n                    onClick={() => handleDelete(post._id)}\r\n                  >\r\n                    <span className=\"deleteButtonText\">Delete</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"postSwapButtonWrapper\">\r\n                  <div className=\"postSwapButton\" onClick={handleSwapAway}>\r\n                    <TextsmsOutlinedIcon className=\"chatIcon\" />\r\n                    <span className=\"postSwapButtonText\">Swap Away!</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"postMiddle\">\r\n          <div className=\"postMiddleDescription\">\r\n            <div className=\"postMiddleDescriptionContainer\">\r\n              {post?.description\r\n                ? post.description\r\n                : \"No description available\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"postMiddleItemListing\">\r\n            <ItemListing item={postItem} inPost={true} />\r\n          </div>\r\n          <div className=\"postMiddleItemLikesComments\">\r\n            <div className=\"postMiddleItemLikesCommentsContainer\">\r\n              <div className=\"postMiddleItemLikes\">\r\n                {liked ? (\r\n                  <FavoriteIcon onClick={handleDislike} />\r\n                ) : (\r\n                  <FavoriteBorderIcon onClick={handleLike} />\r\n                )}\r\n                <span className=\"numberLikes\">{displayLikeCount}</span>\r\n              </div>\r\n              <div className=\"postMiddleItemComments\">\r\n                <ChatBubbleOutlineIcon />\r\n                <span className=\"numberComments\">{postComments.length}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          {canCommentAndLike && (\r\n            <div className=\"postCommentInputWrapper\">\r\n              <textarea\r\n                value={incomingComment}\r\n                onChange={(e) => setIncomingComment(e.target.value)}\r\n                onKeyDown={handleKeyDownComment}\r\n                className=\"postCommentInput\"\r\n                placeholder=\"Write a comment and press enter to send...\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"postCommentContentSection\">\r\n            {postComments.map((comment) => (\r\n              <Comment\r\n                commentText={comment.commentText}\r\n                commentUserId={comment.commentUserId}\r\n                key={comment._id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./group.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport GroupSidebar from \"../../components/groupSidebar/GroupSidebar\";\r\nimport GroupSharePost from \"../../components/groupSharePost/GroupSharePost\";\r\nimport Post from \"../../components/post/Post\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Group() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const groupId = useParams().groupId;\r\n  const pageType = useParams().pageType;\r\n  const [displayPosts, setDisplayPosts] = useState([]);\r\n  const [group, setGroup] = useState(null);\r\n  const [isGroupMember, setIsGroupMember] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getGroup = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/groups?groupId=\" + groupId);\r\n        await setGroup(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getGroup();\r\n  }, [groupId]);\r\n\r\n  useEffect(() => {\r\n    if (group && user) {\r\n      setIsGroupMember(group.members.includes(user._id));\r\n    }\r\n  }, [group, user]);\r\n\r\n  useEffect(() => {\r\n    const getDisplayPosts = async () => {\r\n      try {\r\n        if (pageType === \"main\") {\r\n          console.log(\"page type is main\");\r\n          const res = await axios.get(\"/api/posts/filter?groupId=\" + groupId);\r\n          await setDisplayPosts(res.data);\r\n        } else if (pageType === \"myPosts\") {\r\n          console.log(\"page type is myPosts\");\r\n          const res = await axios.get(\r\n            \"/api/posts/filter?groupId=\" + groupId + \"&userId=\" + user?._id\r\n          );\r\n          await setDisplayPosts(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getDisplayPosts();\r\n  }, [pageType, groupId, user]);\r\n\r\n  //passed into Post component to delete post\r\n  const handleDelete = async (postId) => {\r\n    try {\r\n      console.log(\"deleting post with id: \" + postId); //60f7f6e319807816605c790c\r\n      const res = await axios.delete(\"/api/posts?postId=\" + postId);\r\n      if (res.status === 200) {\r\n        console.log(res.data.message);\r\n        setDisplayPosts(displayPosts.filter((post) => post._id !== postId));\r\n        await axios.delete(\"/api/comments/filter?postId=\" + postId); //delete all comments of this post from database at last to avoid waiting\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //passed into GroupSharePost component to add post\r\n  const handleAdd = async (itemId, description) => {\r\n    try {\r\n      if (group && user) {\r\n        const newPost = {\r\n          groupId: group._id,\r\n          postUserId: user._id,\r\n          description: description,\r\n          itemId: itemId,\r\n        };\r\n        console.log(newPost);\r\n        const res = await axios.post(\"/api/posts\", newPost);\r\n        if (res.status === 200) {\r\n          setDisplayPosts([res.data, ...displayPosts]);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //passed into GroupSideBar to change isGroupMember and update database\r\n  const handleLeave = async () => {\r\n    //try without updating the group\r\n    try {\r\n      if (group && user) {\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id + \"/removeMember/\" + user._id\r\n        );\r\n        if (res.status === 200) {\r\n          setIsGroupMember(false);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    try {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n      if (group && user) {\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id + \"/addMember/\" + user._id\r\n        );\r\n        if (res.status === 200) {\r\n          setIsGroupMember(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdateGroup = (group) => {\r\n    if (group) {\r\n      setGroup(group);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"groupPageTop\">\r\n        <TopBar currentUser={user} />\r\n      </div>\r\n      <div className=\"groupPageContainer\">\r\n        <div className=\"groupSidebarWrapper\">\r\n          <GroupSidebar\r\n            className=\"groupSidebarComponent\"\r\n            group={group}\r\n            isGroupMember={isGroupMember}\r\n            handleLeave={handleLeave}\r\n            handleJoin={handleJoin}\r\n            handleUpdateGroup={handleUpdateGroup}\r\n          />\r\n        </div>\r\n        <div className=\"groupPageContainerRight\">\r\n          <div className=\"groupPagecontainerRightShareWrapper\">\r\n            {group && user && isGroupMember && pageType === \"main\" ? (\r\n              <GroupSharePost handleAdd={handleAdd} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          {displayPosts.map((post) => (\r\n            <Post\r\n              post={post}\r\n              key={post._id}\r\n              handleDelete={handleDelete}\r\n              canCommentAndLike={group && user && isGroupMember}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Register from \"./pages/register/Register\";\r\nimport UserListing from \"./pages/userlisting/UserListing\";\r\nimport Review from \"./pages/review/Review\";\r\nimport Product from \"./pages/product/Product\";\r\nimport CreateListing from \"./pages/createListing/CreateListing\";\r\nimport Item from \"./pages/item/Item\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./pages/login/Login\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport Chat from \"./pages/chat/Chat\";\r\nimport MyGroups from \"./pages/myGroups/MyGroups\";\r\nimport Settings from \"./pages/settings/Settings\";\r\nimport Group from \"./pages/group/Group\";\r\n\r\nfunction App() {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  /*TODO:\r\n  0. possible places to pass a handleUpdate function to call for update of groups: Groups page, MyGroups page\r\n  3. Filter for groups or items in search function\r\n  4. Remove search function in chat\r\n  5. Redo login page and register page\r\n  6. Surprise swap function on top of the page\r\n  7. Notifications using socket.io and show notification count\r\n  8. Cache user data, when update rmb to update local storage also\r\n  9. Change storage system to online storage\r\n  10. Show only items that does not belong to you.\r\n  11. Prevent spamming of notifications by sending error message is user is already invited to the group\r\n  */\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {user ? <Redirect to=\"/home\" /> : <Login />}\r\n          {/* {user ? <Group /> : <Group />} */}\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          {user ? <Redirect to=\"/home\" /> : <Register />}\r\n        </Route>\r\n        <Route exact path=\"/product/:pageType/:categoryName\">\r\n          <Product />\r\n        </Route>\r\n        <Route exact path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/create\">\r\n          {user ? <CreateListing /> : <Login />}\r\n        </Route>\r\n        <Route exact path=\"/chat/:initialActiveConvoId\">\r\n          {user ? <Chat /> : <Login />}\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/listings\">\r\n          <UserListing />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/reviews\">\r\n          <Review />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/settings\">\r\n          <Settings />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/mygroups\">\r\n          <MyGroups />\r\n        </Route>\r\n        <Route exact path=\"/items/:itemId\">\r\n          <Item />\r\n        </Route>\r\n        <Route exact path=\"/groups/:groupId/:pageType\">\r\n          <Group />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { AuthContextProvider } from \"./context/AuthContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}