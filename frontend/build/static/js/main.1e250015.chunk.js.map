{"version":3,"sources":["components/notification/Notification.js","components/topbar/TopBar.js","components/itemlistsTangible/ItemListsTangible.js","components/itemlistsIntangible/ItemListsIntangible.js","components/ads/Ads.js","context/AuthReducer.js","context/AuthContext.js","components/groupIcon/GroupIcon.js","components/groupIconContainer/GroupIconContainer.js","pages/home/Home.js","pages/register/Register.jsx","components/sidebar/SideBar.js","components/itemListing/ItemListing.js","components/star/Star.jsx","components/RatingIcon/RatingIcon.jsx","components/userReview/UserReview.jsx","pages/userlisting/UserListing.js","pages/review/Review.js","pages/product/Product.js","firebase.js","pages/createListing/CreateListing.js","components/singleItem/SingleItem.js","components/swapAway/SwapAway.js","components/userItemCommand/UserItemCommand.js","pages/item/Item.js","pages/login/Login.jsx","components/conversation/Conversation.jsx","components/message/Message.jsx","pages/chat/Chat.jsx","pages/myGroups/MyGroups.js","pages/settings/Settings.js","components/groupSidebar/GroupSidebar.js","components/groupSharePost/GroupSharePost.js","components/comment/Comment.jsx","components/post/Post.jsx","pages/group/Group.js","pages/groupList/GroupList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Notification","senderArray","notification","handleAccept","handleDeny","className","senderName","length","toString","invitationName","Row","Col","onClick","TopBar","currentUser","handleUpdateGroup","history","useHistory","useState","searchText","setSearchText","userNotifications","setUserNotifications","searchType","setSearchType","useEffect","a","axios","get","_id","res","status","data","console","log","getUserNotifications","navbarNotificationTitle","htmlColor","delete","filter","noti","invitationId","put","addGroupRes","Navbar","expand","Brand","push","src","process","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Search","placeholder","value","onChange","e","target","onKeyDown","key","preventDefault","match","name","selected","to","TextsmsOutlined","DropdownButton","variant","title","map","Dropdown","Item","username","profilePicture","ItemLists","handleClick","category","responsive","superLargeDesktop","breakpoint","max","min","items","xl","lg","md","sm","xs","Button","Accessibility","Face","SportsFootball","Home","DriveEta","Redeem","Computer","Apps","ItemListsIntangible","OutdoorGrill","Room","Forum","Fastfood","BeachAccess","SportsHandball","SportsEsports","Ads","itemArray","adItemComponent","item","img","style","width","outline","Carousel","interval","AuthReducer","state","action","type","user","isFetching","error","sockio","payload","sock","INITIAL_STATE","JSON","parse","localStorage","getItem","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","setItem","stringify","io","on","emit","setLocalStorage","Provider","GroupIcon","groupImg","groupName","groupId","create","useContext","newGroupName","setNewGroupName","handleCreateNewGroup","newGroup","creatorId","members","description","post","rows","GroupIconContainer","recommendedGroups","group","setRecommendedGroups","trendingSwaps","setTrendingSwaps","getRecommendedGroups","getTrendingSwaps","Register","email","setEmail","setUsername","password","setPassword","confirmPassword","setConfirmPassword","emailError","setEmailError","userError","setUserError","setIsFetching","handleCheckUsername","handleCheckEmail","handleRegister","alert","onSubmit","required","maxlength","disabled","CircularProgress","color","size","SideBar","sidebarUser","handleLogOut","logoutCall","disconnect","textColor","backgroundColor","prefix","textAlign","Rating","cumulativeRating","ratedByUsers","precision","readOnly","LocalMall","SwapVert","Settings","padding","ExitToApp","ItemListing","inPost","PF","userId","err","handleClickItem","Card","Img","Body","Title","marginRight","Chip","label","marginBottom","marginTop","idealSwaps","tags","Text","desc","Star","props","fill","class","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","RatingIcon","index","rating","hoverRating","onMouseEnter","onMouseLeave","onSaveRating","notSelected","useMemo","height","UserReview","review","doneReview","handleSubmit","handleDelete","setRating","setHoverRating","NO_AVATAR","reviewer","setReviewer","reviewText","setReviewText","reviewerId","getReviewUser","UserListing","useParams","displayItems","setDisplayItems","viewingCategory","setViewingCategory","profileUser","setProfileUser","tabValue","setTabValue","getProfileUser","getDisplayItems","Container","Paper","margin","Tabs","indicatorColor","centered","Tab","Review","reviews","setReviews","alreadyReviewed","setAlreadyReviewed","myReview","setMyReview","initialCumRating","setInitialCumRating","initialRatedBy","setInitialRatedBy","filterMyReview","getReviews","getAlreadyReviewed","newReview","revieweeId","Product","categoryName","pageType","setItems","getItems","charAt","toUpperCase","slice","storage","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","useStyles","makeStyles","theme","root","spacing","baseStyle","flex","display","flexDirection","alignItems","borderWidth","borderRadius","borderColor","borderStyle","transition","activeStyle","acceptStyle","rejectStyle","CreateListing","classes","files","setFiles","form","setForm","errors","setErrors","idealCategories","setIdealCategories","swapCategories","setSwapCategories","isCreating","setCreating","onDrop","useCallback","acceptedFiles","images","newFiles","file","Object","assign","preview","URL","createObjectURL","customFileName","Date","now","concat","allFiles","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","forEach","revokeObjectURL","setField","field","findFormErrors","tangible","newErrors","uploadFirebaseOne","imageFileName","ref","child","getDownloadURL","imageUrl","trimImageUrl","replace","uploadFirebaseMany","fileUrls","i","downloadFileResponse","keys","newItemSwapCat","categoryObject","toLowerCase","newItemIdealSwap","imageArray","includes","newItem","categories","Form","Group","controlId","Control","isInvalid","fontSize","Feedback","Label","as","hidden","Autocomplete","multiple","limitTags","options","getOptionLabel","option","newValue","renderInput","params","TextField","SingleItem","imgLinkArray","desktop","tablet","mobile","imgLink","SwapAway","itemUserId","itemUser","setItemUser","getItemUser","handleSwapAway","newConvo","Alert","Heading","UserItemCommand","itemStatus","handleReserve","handleUnreserve","handleSwap","handleUnswap","inProgress","showInput","setShowInput","input","setInput","setError","handleKeyDownSwap","parties","itemId","copyLinkText","setCopyLinkText","setInProgress","agreementId","tempItemId","imageRef","refFromURL","handleCopyLink","dummy","document","createElement","text","window","location","href","body","appendChild","select","execCommand","removeChild","marginLeft","Login","errorMessage","setErrorMessage","handleUsername","handlePassword","userCredential","loginCall","position","top","left","Conversation","active","lastMessageText","lastMessageTime","online","displayTimeAgo","setDisplayTimeAgo","setUser","format","setInterval","clearInterval","getUser","Message","message","own","pictureLink","show","setShow","createdAt","Chat","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","currentChatWith","setCurrentChatWith","currentChatWithLastActive","setCurrentChatWithLastActive","scrollRef","useRef","initialActiveConvoId","getInitialActiveConvo","sender","senderId","prev","users","chatFollow","f","some","u","getConversations","getMessages","friendId","find","m","getCurrentChatWith","updateLastActive","timeago","newLastActive","lastActive","handleSendMessage","conversationId","updateRes","receiverId","member","handleGenerateAgreement","current","scrollIntoView","behavior","handleSearch","c","MyGroups","myGroups","setMyGroups","getMyGroups","imgFile","setImgFile","showPassword","imgError","setImgError","passwordUpdateValid","setPasswordUpdateValid","isUpdatingPicture","setIsUpdatingPicture","isUpdatingPassword","setisUpdatingPassword","handleChangePicture","updatePicture","snapshot","progress","Math","round","bytesTransferred","totalBytes","newProfilePicture","newUser","tempProfilePic","handleSubmitPassword","updatePassword","currentPassword","newPassword","wrongPasswordError","newFile","placeHolder","isValid","checked","GroupSidebar","isGroupMember","handleLeave","handleJoin","showInviteInput","setShowInviteInput","newImgLink","setNewImgLink","inviteError","setInviteError","inviteNameInput","setInviteNameInput","inviteSuccess","setInviteSuccess","editedDescription","setEditedDescription","editMode","setEditMode","descriptionError","setDescriptionError","handleKeyDownInvite","getNotiRes","newNotification","handleKeyDownDescription","newGroupDescription","inviteComponent","maxLength","handleUploadGroupImage","imageFile","newGroupPicture","tempNewImgLink","oldImageRef","getElementById","click","GroupSharePost","handleAdd","setDescription","setItemId","itemError","setItemError","handlePost","findItemRes","itemIdTemp","descriptionTemp","Comment","commentText","commentUserId","commentUser","setCommentUser","getCommentUser","Post","canCommentAndLike","postUser","setPostUser","postComments","setPostComments","postItem","setPostItem","incomingComment","setIncomingComment","liked","setLiked","displayLikeCount","setDisplayLikeCount","postUserId","getPostUser","getPostComments","getPostItem","likedBy","handleKeyDownComment","newComment","postId","handleDislike","handleLike","comment","displayPosts","setDisplayPosts","setGroup","setIsGroupMember","getGroup","getDisplayPosts","newPost","GroupList","groups","setGroups","getGroups","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1e250015.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./notification.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Notification({\r\n  notification,\r\n  handleAccept,\r\n  handleDeny,\r\n}) {\r\n  const formatName = (senderArray) => {\r\n    if (senderArray?.length && senderArray.length === 1) {\r\n      return senderArray[0];\r\n    } else if (senderArray?.length && senderArray.length === 2) {\r\n      return senderArray[0] + \" and 1 other\";\r\n    } else if (senderArray?.length) {\r\n      return (\r\n        senderArray[0] +\r\n        \" and \" +\r\n        (senderArray.length - 1).toString() +\r\n        \" others\"\r\n      );\r\n    } else {\r\n      return \"No Name\";\r\n    }\r\n  };\r\n  //TODO: change senderName\r\n  return (\r\n    <div className=\"notiWrapper\">\r\n      <div className=\"notiContainer\">\r\n        <span className=\"notiContainerUsername\">\r\n          {notification ? formatName(notification.senderName) : \"username\"}\r\n        </span>{\" \"}\r\n        has invited you to join{\" \"}\r\n        <span className=\"notiContainerGroupName\">\r\n          {notification ? notification.invitationName : \"group name\"}\r\n        </span>\r\n        .\r\n      </div>\r\n      <Row className=\"notibuttonGroupWrapper\">\r\n        <Col>\r\n          <div\r\n            className=\"acceptButtonWrapper\"\r\n            onClick={() => {\r\n              handleAccept(notification);\r\n            }}\r\n          >\r\n            <div className=\"acceptButton\">\r\n              <span className=\"acceptButtonText\">Accept</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <div\r\n            className=\"denyButtonWrapper\"\r\n            onClick={() => handleDeny(notification)}\r\n          >\r\n            <div className=\"denyButton\">\r\n              <span className=\"denyButtonText\">Deny</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport \"./topbar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Search, TextsmsOutlined } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Notification from \"../notification/Notification\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TopBar({ currentUser, handleUpdateGroup }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const LOGO = process.env.REACT_APP_PUBLIC_FOLDER_LOGO;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [userNotifications, setUserNotifications] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"item\");\r\n\r\n  const handleClickHome = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const handleClickCreate = () => {\r\n    history.push(\"/create\");\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if ((searchText.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"search string is empty!\");\r\n      } else {\r\n        if (searchType === \"item\") {\r\n          history.push(\"/product/search/\" + searchText);\r\n        } else if (searchType === \"group\") {\r\n          history.push(\"/groups/search/\" + searchText);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getUserNotifications = async () => {\r\n      if (currentUser) {\r\n        try {\r\n          const res = await axios.get(\r\n            \"/api/notifications/filter?userId=\" + currentUser._id\r\n          );\r\n          if (res.status === 200) {\r\n            setUserNotifications(res.data);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n    getUserNotifications();\r\n  }, [currentUser]);\r\n\r\n  const navbarNotificationTitle = (\r\n    <NotificationsIcon className=\"userNotificationIcon\" htmlColor=\"orange\" />\r\n  );\r\n\r\n  const handleAccept = async (notification) => {\r\n    // alert(\"clicked on accept!\");\r\n    if (notification && currentUser) {\r\n      try {\r\n        const deleteRes = await axios.delete(\r\n          \"/api/notifications?notificationId=\" + notification._id\r\n        );\r\n        if (deleteRes.status === 200) {\r\n          setUserNotifications(\r\n            userNotifications.filter(\r\n              (noti) => noti.invitationId !== notification.invitationId //needs test by sending two noti by diff people for same group, then accept one\r\n            )\r\n          );\r\n        }\r\n        const addGroupRes = await axios.put(\r\n          \"/api/groups/\" +\r\n            notification.invitationId +\r\n            \"/addMember/\" +\r\n            currentUser._id\r\n        );\r\n        if (addGroupRes.status === 200 && handleUpdateGroup) {\r\n          handleUpdateGroup([addGroupRes.data]);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeny = async (notification) => {\r\n    // alert(\"clicked on deny!\");\r\n    if (notification && currentUser) {\r\n      try {\r\n        const deleteRes = await axios.delete(\r\n          \"/api/notifications?notificationId=\" + notification._id\r\n        );\r\n        if (deleteRes.status === 200) {\r\n          setUserNotifications(\r\n            userNotifications.filter((noti) => noti._id !== notification._id)\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"topbarWrapper fixed-top\" expand=\"lg\">\r\n      <Navbar.Brand onClick={() => handleClickHome()}>\r\n        <img className=\"ReHashLogo\" src={LOGO} alt=\"\" />\r\n        <span className=\"logoText\">ReHash</span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"collapseBar\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link className=\"swap\" onClick={() => handleClickCreate()}>\r\n            Post A Swap!\r\n          </Nav.Link>\r\n          <div className=\"searchbar\">\r\n            <Search className=\"searchIcon\" />\r\n            <input\r\n              placeholder=\"Seach for groups or swap items...\"\r\n              className=\"searchInput\"\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              onKeyDown={handleSearch}\r\n            />\r\n            <select\r\n              name=\"choice\"\r\n              className=\"searchInputSelect\"\r\n              value={searchType}\r\n              onChange={(e) => setSearchType(e.target.value)}\r\n            >\r\n              <option value=\"item\" selected>\r\n                item\r\n              </option>\r\n              <option value=\"group\">group</option>\r\n            </select>\r\n          </div>\r\n          <Link to=\"/chat/0\">\r\n            <TextsmsOutlined className=\"chat\" htmlColor=\"orange\" />\r\n          </Link>\r\n          {/* notification list */}\r\n          <DropdownButton\r\n            className=\"userNotification\"\r\n            variant=\"warning\"\r\n            title={navbarNotificationTitle}\r\n          >\r\n            <div className=\"userNotificationLabel\">Notifications</div>\r\n            <div className=\"userNotificationList\">\r\n              {userNotifications.length > 0 ? (\r\n                userNotifications.map((notification) => (\r\n                  <Dropdown.Item key={notification._id}>\r\n                    <Notification\r\n                      notification={notification}\r\n                      handleAccept={handleAccept}\r\n                      handleDeny={handleDeny}\r\n                    />\r\n                  </Dropdown.Item>\r\n                ))\r\n              ) : (\r\n                <div className=\"userNoNotificationsLabel\">No notifcations</div>\r\n              )}\r\n            </div>\r\n          </DropdownButton>\r\n          {/* <NotificationsIcon className=\"userNotification\" htmlColor=\"orange\"/> */}\r\n\r\n          <Link\r\n            to={\r\n              currentUser\r\n                ? \"/profile/\" + currentUser.username + \"/listings\"\r\n                : \"/\"\r\n            }\r\n          >\r\n            <img\r\n              className=\"userProfilePic\"\r\n              src={\r\n                currentUser && currentUser.profilePicture\r\n                  ? PF + currentUser.profilePicture\r\n                  : NO_AVATAR\r\n              }\r\n              alt=\"userProfile\"\r\n            />\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  Accessibility,\r\n  Face,\r\n  SportsFootball,\r\n  Home,\r\n  DriveEta,\r\n  Redeem,\r\n  Computer,\r\n  Apps,\r\n} from \"@material-ui/icons\";\r\nimport \"./itemlistsTangible.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemLists() {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    xl: {\r\n      breakpoint: { max: 3000, min: 1200 },\r\n      items: 6,\r\n    },\r\n    lg: {\r\n      breakpoint: { max: 1200, min: 992 },\r\n      items: 5,\r\n    },\r\n    md: {\r\n      breakpoint: { max: 992, min: 768 },\r\n      items: 4,\r\n    },\r\n    sm: {\r\n      breakpoint: { max: 768, min: 576 },\r\n      items: 3,\r\n    },\r\n    xs: {\r\n      breakpoint: { max: 576, min: 0 },\r\n      items: 2,\r\n    },\r\n  };\r\n  const history = useHistory();\r\n  const handleClick = (category) => {\r\n    history.push(\"/product/categories/\" + category);\r\n  };\r\n  return (\r\n    <Carousel responsive={responsive}>\r\n      <div className=\"item\" onClick={() => handleClick(\"clothing\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Accessibility className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Clothing</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"beauty\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Face className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Beauty</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"sports equipments\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsFootball className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Sports Equipments</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"home appliances\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Home className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Home Appliances</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"automotive\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <DriveEta className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Automotive</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"hobbies\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Redeem className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Hobbies</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"computers and tech\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Computer className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Computers & Tech</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"other tangibles\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Apps className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Others</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./itemlistsIntangible.css\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  OutdoorGrill,\r\n  Room,\r\n  Forum,\r\n  Fastfood,\r\n  BeachAccess,\r\n  SportsHandball,\r\n  SportsEsports,\r\n  Apps,\r\n} from \"@material-ui/icons\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemListsIntangible() {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    xl: {\r\n      breakpoint: { max: 3000, min: 1200 },\r\n      items: 6,\r\n    },\r\n    lg: {\r\n      breakpoint: { max: 1200, min: 992 },\r\n      items: 5,\r\n    },\r\n    md: {\r\n      breakpoint: { max: 992, min: 768 },\r\n      items: 4,\r\n    },\r\n    sm: {\r\n      breakpoint: { max: 768, min: 576 },\r\n      items: 3,\r\n    },\r\n    xs: {\r\n      breakpoint: { max: 576, min: 0 },\r\n      items: 2,\r\n    },\r\n  };\r\n  const history = useHistory();\r\n  const handleClick = (category) => {\r\n    history.push(\"/product/categories/\" + category);\r\n  };\r\n  return (\r\n    <Carousel responsive={responsive}>\r\n      <div className=\"item\" onClick={() => handleClick(\"outdoor activities\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <OutdoorGrill className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Outdoor Activities</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"travel\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Room className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Travel</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"discussion\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Forum className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Discussion</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"food\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Fastfood className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Food</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"indoor activities\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <BeachAccess className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Indoor Activities</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"sports\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsHandball className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Sports</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"games and esports\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsEsports className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Games & Esports</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"other intangibles\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Apps className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Others</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ads.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Ads({ itemArray }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const TRENDING_IMAGE = process.env.REACT_APP_PUBLIC_FOLDER_TRENDING;\r\n  const NO_IMAGE_UPLOADED = process.env.REACT_APP_PUBLIC_FOLDER_NOIMAGEUPLOADED;\r\n  const history = useHistory();\r\n  const adItemComponent = (item) => (\r\n    <img\r\n      className=\"adsPics d-block\"\r\n      src={\r\n        item?.img && item.img.length > 0 ? PF + item.img[0] : NO_IMAGE_UPLOADED\r\n      }\r\n      alt=\"cannot display\"\r\n    />\r\n  );\r\n  return (\r\n    <div style={{ width: \"35%\", outline: \"none\" }}>\r\n      <Carousel className=\"adsWrapper\">\r\n        <Carousel.Item interval={3000}>\r\n          <img\r\n            className=\"adsPics d-block\"\r\n            src={TRENDING_IMAGE}\r\n            alt=\"First slide\"\r\n          />\r\n        </Carousel.Item>\r\n        {itemArray.map((item) => (\r\n          <Carousel.Item\r\n            key={item._id}\r\n            interval={3000}\r\n            onClick={() => {\r\n              history.push(\"/items/\" + item._id);\r\n            }}\r\n          >\r\n            {adItemComponent(item)}\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        isFetching: true,\r\n        error: false,\r\n        sockio: null,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n        sockio: null,\r\n      };\r\n    case \"LOGOUT_START\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: true,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: null,\r\n      };\r\n    case \"LOGOUT_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n        sockio: null,\r\n      };\r\n    case \"UPDATE\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n","import { createContext, useEffect, useReducer } from \"react\";\r\nimport AuthReducer from \"./AuthReducer\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: JSON.parse(localStorage.getItem(\"rehashUser\")) || null, //changed\r\n  isFetching: false,\r\n  error: false,\r\n  sockio: JSON.parse(localStorage.getItem(\"rehashSockio\")) || null,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n  useEffect(() => {\r\n    const setLocalStorage = async () => {\r\n      console.log(\"state user is changed!\");\r\n      localStorage.setItem(\"rehashUser\", JSON.stringify(state.user));\r\n      if (state.user) {\r\n        console.log(\"state.user is true\");\r\n        try {\r\n          const sock = await io(); //const sock = await io(\"ws://localhost:8080\");\r\n          sock.on(\"connect\", () => {\r\n            sock.emit(\"addUser\", state.user._id);\r\n            console.log(\"sock inside try block: \", sock);\r\n            dispatch({\r\n              type: \"LOGIN_SUCCESS\",\r\n              payload: { user: state.user, sock: sock },\r\n            });\r\n          });\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n    setLocalStorage();\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        sockio: state.sockio,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport \"./groupIcon.css\";\r\n\r\nexport default function GroupIcon({ groupImg, groupName, groupId, create }) {\r\n  //should limit to 35-40 characters\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const ADD_GROUP_IMAGE = process.env.REACT_APP_PUBLIC_FOLDER_ADDGROUP;\r\n  const NO_GROUP_IMAGE = process.env.REACT_APP_PUBLIC_FOLDER_NOIMAGEUPLOADED;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [newGroupName, setNewGroupName] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleClickGroupIcon = () => {\r\n    if (groupId) {\r\n      history.push(\"/groups/\" + groupId + \"/main\");\r\n    }\r\n  };\r\n\r\n  const handleCreateNewGroup = async () => {\r\n    if ((newGroupName.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      console.log(\"newGroupName is empty!\");\r\n      setNewGroupName(\"\");\r\n    } else if (user) {\r\n      try {\r\n        const newGroup = {\r\n          creatorId: user._id,\r\n          members: [user._id],\r\n          description:\r\n            \"No description yet. Waiting for group creator to update description.\",\r\n          groupName: newGroupName,\r\n        };\r\n        const res = await axios.post(\"/api/groups\", newGroup);\r\n        if (res.status === 200) {\r\n          setNewGroupName(\"\");\r\n          history.push(\"/groups/\" + res.data._id + \"/main\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  return create ? (\r\n    <div className=\"groupIconButtonBackgroundCreate\">\r\n      <img\r\n        className=\"groupIconButtonImg\"\r\n        src={ADD_GROUP_IMAGE}\r\n        onClick={handleCreateNewGroup}\r\n        alt=\"\"\r\n      />\r\n      <textarea\r\n        rows={3}\r\n        className=\"groupIconTextArea\"\r\n        placeholder=\"Enter new group name (max 50 characters) and click '+'\"\r\n        value={newGroupName}\r\n        onChange={(e) => {\r\n          if (e.target.value.length <= 50) {\r\n            setNewGroupName(e.target.value);\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div className=\"groupIconButtonBackground\" onClick={handleClickGroupIcon}>\r\n      <img\r\n        className=\"groupIconButtonImg\"\r\n        src={groupImg ? PF + groupImg : NO_GROUP_IMAGE}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"groupIconButtonName\">\r\n        {groupName ? groupName : \"No Group Name\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./groupIconContainer.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport GroupIcon from \"../groupIcon/GroupIcon\";\r\n\r\nexport default function GroupIconContainer({ recommendedGroups }) {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    xl: {\r\n      breakpoint: { max: 3000, min: 1200 },\r\n      items: 6,\r\n    },\r\n    lg: {\r\n      breakpoint: { max: 1200, min: 992 },\r\n      items: 5,\r\n    },\r\n    md: {\r\n      breakpoint: { max: 992, min: 800 },\r\n      items: 4,\r\n    },\r\n    sm: {\r\n      breakpoint: { max: 800, min: 620 },\r\n      items: 3,\r\n    },\r\n    xs: {\r\n      breakpoint: { max: 620, min: 0 },\r\n      items: 2,\r\n    },\r\n  };\r\n\r\n  return recommendedGroups && recommendedGroups.length > 0 ? (\r\n    <Carousel responsive={responsive}>\r\n      {recommendedGroups.map((group) => (\r\n        <GroupIcon\r\n          key={group._id}\r\n          groupName={group.groupName}\r\n          groupImg={group.groupImg}\r\n          groupId={group._id}\r\n        />\r\n      ))}\r\n    </Carousel>\r\n  ) : (\r\n    <div>No recommended groups.</div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport ItemListsTangible from \"../../components/itemlistsTangible/ItemListsTangible\";\r\nimport \"./home.css\";\r\nimport ItemListsIntangible from \"../../components/itemlistsIntangible/ItemListsIntangible\";\r\nimport TrendingSwaps from \"../../components/trendingSwaps/TrendingSwaps\";\r\nimport Ads from \"../../components/ads/Ads\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport GroupIconContainer from \"../../components/groupIconContainer/GroupIconContainer\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Home() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [recommendedGroups, setRecommendedGroups] = useState([]);\r\n  const [trendingSwaps, setTrendingSwaps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    console.log(\"user is: \", user);\r\n  }, [sockio, user]);\r\n\r\n  useEffect(() => {\r\n    const getRecommendedGroups = async () => {\r\n      try {\r\n        if (user) {\r\n          const res = await axios.get(\"/api/groups/recommended/\" + user._id);\r\n          if (res.status === 200) {\r\n            setRecommendedGroups(res.data);\r\n          }\r\n        } else {\r\n          //give a fake userId of \"0\", because the api will make sure that the user with given userId is not in the recommended group\r\n          const res = await axios.get(\"/api/groups/recommended/0\");\r\n          if (res.status === 200) {\r\n            setRecommendedGroups(res.data);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getRecommendedGroups();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const getTrendingSwaps = async () => {\r\n      try {\r\n        if (user) {\r\n          const res = await axios.get(\r\n            \"/api/items/trendingSwaps?userId=\" + user._id\r\n          );\r\n          if (res.status === 200) {\r\n            setTrendingSwaps(res.data);\r\n          }\r\n        } else {\r\n          const res = await axios.get(\"/api/items/trendingSwaps\");\r\n          if (res.status === 200) {\r\n            setTrendingSwaps(res.data);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getTrendingSwaps();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"adContainer\">\r\n        <Ads itemArray={trendingSwaps} />\r\n      </div>\r\n\r\n      <div className=\"homeWrapper\">\r\n        <div className=\"tangible\">\r\n          <div className=\"itemsType\">\r\n            <span>Explore Tangible</span>\r\n          </div>\r\n          <ItemListsTangible />\r\n        </div>\r\n        <div className=\"intangible\">\r\n          <div className=\"itemsType\">\r\n            <span>Explore Intangible</span>\r\n          </div>\r\n          <ItemListsIntangible />\r\n        </div>\r\n        <div className=\"recommendedGroups\">\r\n          <div className=\"itemsType\">\r\n            <span>Recommended Groups</span>\r\n          </div>\r\n          <GroupIconContainer recommendedGroups={recommendedGroups} />\r\n        </div>\r\n        {/* <div className=\"trendingSwap\">\r\n          <span className=\"trendingSwapHead\">Trending Swaps</span>\r\n          <TrendingSwaps className=\"trendingSwapItems\" />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./register.css\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [userError, setUserError] = useState(\"\");\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const LOGO = process.env.REACT_APP_PUBLIC_FOLDER_LOGO;\r\n\r\n  const handleEmail = (e) => {\r\n    console.log(e.target.value);\r\n    setEmail(e.target.value);\r\n    if (emailError !== \"\") {\r\n      setEmailError(\"\");\r\n    }\r\n    // try {\r\n    //   await axios.get(\"/api/users?email=\" + e.target.value);\r\n    //   e.target.setCustomValidity(\"Email already taken\");\r\n    // } catch (err) {\r\n    //   if (err.response.status === 400) {\r\n    //     e.target.setCustomValidity(\"\");\r\n    //   }\r\n    // }\r\n  };\r\n  const handleUsername = (e) => {\r\n    console.log(e.target.value);\r\n    setUsername(e.target.value);\r\n    if (userError !== \"\") {\r\n      setUserError(\"\");\r\n    }\r\n    // try {\r\n    //   await axios.get(\"/api/users?username=\" + e.target.value);\r\n    //   e.target.setCustomValidity(\"Username already taken\");\r\n    // } catch (err) {\r\n    //   if (err.response.status === 400) {\r\n    //     e.target.setCustomValidity(\"\");\r\n    //   }\r\n    // }\r\n  };\r\n  const handlePassword = (e) => {\r\n    console.log(e.target.value);\r\n    setPassword(e.target.value);\r\n    // if (e.target.value.length < 6) {\r\n    //   e.target.setCustomValidity(\"Password must have at least 6 characters\");\r\n    // } else {\r\n    //   e.target.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n  const handleConfirmPassword = (e) => {\r\n    console.log(e.target.value);\r\n    setConfirmPassword(e.target.value);\r\n    // if (e.target.value !== password) {\r\n    //   console.log(password);\r\n    //   console.log(e.target.value);\r\n    //   e.target.setCustomValidity(\"Passwords don't match!\");\r\n    // } else {\r\n    //   e.target.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCheckUsername = async (e) => {\r\n    setIsFetching(true);\r\n    e.preventDefault();\r\n    if (!username || username.length < 3) {\r\n      setUserError(\"Username must be at least 3 characters\");\r\n      setIsFetching(false);\r\n      return;\r\n    }\r\n    try {\r\n      const res = await axios.get(\"/api/users?username=\" + username);\r\n      if (res.status === 200) {\r\n        setUserError(\"Username already taken\");\r\n        setIsFetching(false);\r\n      }\r\n    } catch (err) {\r\n      handleCheckEmail();\r\n    }\r\n  };\r\n\r\n  const handleCheckEmail = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/users?email=\" + email);\r\n      if (res.status === 200) {\r\n        setEmailError(\"Email already taken\");\r\n        setIsFetching(false);\r\n      }\r\n    } catch (err) {\r\n      handleRegister();\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    console.log(email);\r\n    console.log(username);\r\n    console.log(password);\r\n    console.log(confirmPassword);\r\n    if (password.length >= 6 && password === confirmPassword) {\r\n      const user = {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      };\r\n      try {\r\n        const res = await axios.post(\"/api/auth/register\", user);\r\n        if (res.status === 200) {\r\n          setIsFetching(false);\r\n          history.push(\"/\");\r\n        }\r\n      } catch (err) {\r\n        alert(\"register failed due to server error\");\r\n        setIsFetching(false);\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"registerWrapper\">\r\n        <div className=\"registerLeft\">\r\n          <div className=\"registerLeftWrapper  \">\r\n            <div className=\"registerLeftTop \">\r\n              <img className=\"registerLeftLogo\" src={LOGO} alt=\"ReHash logo\" />\r\n              <span id=\"registerText\" className=\"registerLeftLogoText \">\r\n                ReHash\r\n              </span>\r\n            </div>\r\n            <span className=\"registerLeftBottom\">\r\n              Excited to embark on you ReHash journey? Sign up now!\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"registerRight\">\r\n          <div className=\"registerRightTop\">\r\n            <Link to=\"/\" className=\"registerBack\">\r\n              <ArrowBackIosIcon />\r\n              <span>Back</span>\r\n            </Link>\r\n          </div>\r\n          <div className=\"registerRightBottom\">\r\n            <div className=\"registerRightHeader\">\r\n              <h2>Register Individual Account!</h2>\r\n              {/* <span className=\"registerRightHeaderText\">\r\n                For the purpose of industry regulations, your details are\r\n                requested\r\n              </span> */}\r\n            </div>\r\n            <form\r\n              action=\"\"\r\n              className=\"registerBox\"\r\n              onSubmit={handleCheckUsername}\r\n            >\r\n              <span className=\"registerInputLabel\">Your full name *</span>\r\n              <input\r\n                placeholder=\"Enter username\"\r\n                required\r\n                value={username}\r\n                maxlength=\"30\"\r\n                onChange={handleUsername}\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">{userError}</span>\r\n              <span className=\"registerInputLabel\">Email address *</span>\r\n              <input\r\n                placeholder=\"Enter email address\"\r\n                required\r\n                value={email}\r\n                onChange={handleEmail}\r\n                maxlength=\"50\"\r\n                type=\"email\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">{emailError}</span>\r\n              <span className=\"registerInputLabel\">Create password *</span>\r\n              <input\r\n                placeholder=\"Enter password with at least 6 characters\"\r\n                required\r\n                value={password}\r\n                onChange={handlePassword}\r\n                type=\"password\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">\r\n                {password !== \"\" && password.length < 6\r\n                  ? \"Password must have at least 6 characters\"\r\n                  : \"\"}\r\n              </span>\r\n              <span className=\"registerInputLabel\">Confirm password *</span>\r\n              <input\r\n                placeholder=\"Confirm password\"\r\n                required\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPassword}\r\n                type=\"password\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">\r\n                {confirmPassword !== \"\" &&\r\n                password !== \"\" &&\r\n                confirmPassword !== password\r\n                  ? \"Passwords don't match!\"\r\n                  : \"\"}\r\n              </span>\r\n              <button\r\n                className=\"registerButton\"\r\n                type=\"submit\"\r\n                disabled={isFetching}\r\n              >\r\n                {isFetching ? (\r\n                  <CircularProgress color=\"white\" size=\"20px\" />\r\n                ) : (\r\n                  \"Register Account\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\nimport {\r\n  CDBSidebar,\r\n  CDBSidebarContent,\r\n  CDBSidebarFooter,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n} from \"cdbreact\";\r\nimport { LocalMall, SwapVert, ExitToApp, Settings } from \"@material-ui/icons\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SideBar({ sidebarUser }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const { user, sockio, dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = async (e) => {\r\n    e.preventDefault();\r\n    const logoutCall = async (dispatch) => {\r\n      dispatch({ type: \"LOGOUT_START\", payload: { user: user, sock: sockio } });\r\n      try {\r\n        await sockio.disconnect();\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      } catch (err) {\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: err });\r\n      }\r\n    };\r\n    await logoutCall(dispatch);\r\n    history.push(\"/\");\r\n    console.log(\"logged out\");\r\n  };\r\n\r\n  const handleListings = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/listings\");\r\n    console.log(\"done\");\r\n  };\r\n  const handleReviews = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/reviews\");\r\n  };\r\n  const handleSettings = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/settings\");\r\n  };\r\n  const handleMyGroups = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/mygroups\");\r\n  };\r\n  return (\r\n    <div\r\n      className=\"sidebar\"\r\n      // style={{ display: \"flex\", height: \"100vh\", overflow: \"scroll initial\" }}\r\n    >\r\n      <CDBSidebar textColor=\"black\" backgroundColor=\"#FFD68D\">\r\n        {/* <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu> */}\r\n        <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n          <img\r\n            className=\"userProfile\"\r\n            src={\r\n              sidebarUser?.profilePicture\r\n                ? PF + sidebarUser.profilePicture\r\n                : NO_AVATAR\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarHeader style={{ textAlign: \"center\" }}>\r\n          <div>{sidebarUser?.username}</div>\r\n          <div className=\"ratings\">\r\n            <div>Ratings: </div>\r\n            <Rating\r\n              value={\r\n                sidebarUser\r\n                  ? sidebarUser.cumulativeRating / sidebarUser.ratedByUsers\r\n                  : 3\r\n              }\r\n              precision={0.1}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarContent>\r\n          <CDBSidebarMenu>\r\n            <CDBSidebarMenuItem\r\n              onClick={handleListings}\r\n              className=\"sidebarMenuItem\"\r\n            >\r\n              <LocalMall className=\"sidebarIcons\" />\r\n              <span className=\"sidebarMenuText\">Listings</span>\r\n            </CDBSidebarMenuItem>\r\n            <CDBSidebarMenuItem\r\n              className=\"sidebarMenuItem\"\r\n              onClick={handleReviews}\r\n            >\r\n              <SwapVert className=\"sidebarIcons\" />\r\n              <span className=\"sidebarMenuText\">Reviews</span>\r\n            </CDBSidebarMenuItem>\r\n            {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"sidebarMenuItem\"\r\n                onClick={handleMyGroups}\r\n              >\r\n                <GroupIcon className=\"sidebarIcons\" />\r\n                <span className=\"sidebarMenuText\">My Groups</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {/* {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem className=\"sidebarMenuItem\" onClick={handleMyGroups}>\r\n                <GroupIcon className=\"sidebarIcons\"/>\r\n                <span className=\"sidebarMenuText\">My Groups</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )} */}\r\n\r\n            {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"sidebarMenuItem\"\r\n                onClick={handleSettings}\r\n              >\r\n                <Settings className=\"sidebarIcons\" />\r\n                <span className=\"sidebarMenuText\">Settings</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </CDBSidebarMenu>\r\n        </CDBSidebarContent>\r\n        {sidebarUser && sidebarUser._id === user?._id ? (\r\n          <CDBSidebarFooter style={{ textAlign: \"center\" }}>\r\n            <div\r\n              className=\"sidebar-btn-wrapper\"\r\n              style={{ padding: \"20px 5px\" }}\r\n            >\r\n              <ExitToApp className=\"sidebarIcons\" onClick={handleLogOut} />\r\n              <span className=\"sidebarMenuText\" onClick={handleLogOut}>\r\n                Log out\r\n              </span>\r\n            </div>\r\n          </CDBSidebarFooter>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </CDBSidebar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./itemListing.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ItemListing({ item, inPost }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const handleClickItem = () => {\r\n    if (user && user._id !== item?.userId) {\r\n      try {\r\n        axios.put(\"/api/items/update/views/\" + item._id);\r\n      } catch (err) {\r\n        console.log(err);\r\n        // history.push(\"/items/\" + item._id);\r\n      }\r\n    }\r\n    if (item?._id) {\r\n      history.push(\"/items/\" + item._id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(item);\r\n  }, [item]);\r\n  return (\r\n    <div className=\"itemListingWrapper\" onClick={() => handleClickItem()}>\r\n      <Card>\r\n        {inPost ? (\r\n          <>\r\n            <Card.Img src={PF + item?.img[0]} />\r\n            <Card.Body className=\"PostItemBody\">{item?.title}</Card.Body>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={PF + item.img[0]}\r\n              className=\"trendingSwapItemImg\"\r\n            />\r\n\r\n            <Card.Body className=\"trendingSwapItemBody\">\r\n              <Card.Title className=\"itemListingCardTitle\">\r\n                <span style={{ marginRight: \"10px\" }}>{item.title}</span>\r\n                <Chip\r\n                  className=\"tag\"\r\n                  label={item.status === \"waiting\" ? \"available\" : item.status}\r\n                  size=\"small\"\r\n                  color={\r\n                    item.status === \"waiting\"\r\n                      ? \"\"\r\n                      : item.status === \"reserved\"\r\n                      ? \"primary\"\r\n                      : \"secondary\"\r\n                  }\r\n                  style={{\r\n                    marginBottom: \"5px\",\r\n                    marginTop: \"5px\",\r\n                  }}\r\n                />\r\n              </Card.Title>\r\n              <span className=\"trendingSwapText\">Ideal Swap: </span>\r\n              {item.idealSwaps.map((tags) => (\r\n                <Chip\r\n                  key={tags}\r\n                  className=\"tag\"\r\n                  label={tags}\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  style={{ marginRight: \"5px\" }}\r\n                />\r\n              ))}\r\n\r\n              <Card.Text>{item.desc}</Card.Text>\r\n            </Card.Body>\r\n          </>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Star(props) {\r\n  const { fill = \"none\" } = props;\r\n  return (\r\n    <svg\r\n      class=\"w-6 h-6 star\"\r\n      fill={fill}\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"0\"\r\n        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport Star from \"../star/Star\";\r\n\r\nexport default function RatingIcon({\r\n  index,\r\n  rating,\r\n  hoverRating,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n  onSaveRating,\r\n  selected,\r\n  notSelected,\r\n}) {\r\n  const fill = useMemo(() => {\r\n    if (hoverRating >= index) {\r\n      return \"rgb(240, 158, 6)\";\r\n    } else if (!hoverRating && rating >= index) {\r\n      return \"rgb(240, 158, 6)\";\r\n    }\r\n    return \"rgb(145, 144, 144)\";\r\n  }, [rating, hoverRating, index]);\r\n\r\n  return (\r\n    <div\r\n      style={{ height: \"20px\", width: \"20px\" }}\r\n      className=\"cursor-pointer\"\r\n      onMouseEnter={() => onMouseEnter(index)}\r\n      onMouseLeave={() => onMouseLeave()}\r\n      onClick={() => onSaveRating(index)}\r\n    >\r\n      {selected ? (\r\n        <Star fill={\"rgb(240, 158, 6)\"} />\r\n      ) : notSelected ? (\r\n        <Star fill={\"rgb(145, 144, 144)\"} />\r\n      ) : (\r\n        <Star fill={fill} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./userReview.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Star from \"../star/Star\";\r\nimport RatingIcon from \"../RatingIcon/RatingIcon\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { get } from \"mongoose\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UserReview({\r\n  review,\r\n  doneReview,\r\n  handleSubmit,\r\n  handleDelete,\r\n}) {\r\n  const [rating, setRating] = useState(0);\r\n  const [hoverRating, setHoverRating] = useState(0);\r\n  const { user } = useContext(AuthContext);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const [reviewer, setReviewer] = useState(null);\r\n  const [reviewText, setReviewText] = useState(\"\");\r\n\r\n  //set the reviewer\r\n  useEffect(() => {\r\n    const getReviewUser = async () => {\r\n      const res = await axios.get(\"/api/users?userId=\" + review.reviewerId);\r\n      setReviewer(res.data);\r\n    };\r\n    if (review) {\r\n      getReviewUser();\r\n    }\r\n  }, [review]);\r\n\r\n  const onMouseEnter = (index) => {\r\n    if (!doneReview) {\r\n      setHoverRating(index);\r\n      console.log(\"hover rating is: \" + index);\r\n    }\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (!doneReview) {\r\n      setHoverRating(0);\r\n    }\r\n  };\r\n\r\n  const onSaveRating = (index) => {\r\n    if (!doneReview) {\r\n      setRating(index);\r\n      console.log(\"your rating is: \" + index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"userReview\">\r\n      <div className=\"userReviewTop\">\r\n        <img\r\n          src={\r\n            doneReview\r\n              ? reviewer && reviewer.profilePicture\r\n                ? PF + reviewer.profilePicture\r\n                : NO_AVATAR\r\n              : user && user.profilePicture\r\n              ? PF + user.profilePicture\r\n              : NO_AVATAR\r\n          }\r\n          alt=\"\"\r\n          className=\"userReviewImg\"\r\n        />\r\n        <div className=\"userReviewTopMiddle\">\r\n          <div className=\"userReviewTopMiddleName\">\r\n            {doneReview\r\n              ? reviewer?.username\r\n              : user\r\n              ? user.username\r\n              : \"Anonymous\"}\r\n          </div>\r\n          <div className=\"userReviewTopMiddleRatings\">\r\n            <div className=\"userReviewTopMiddleRatingsText\">Ratings: </div>\r\n            <div className=\"userReviewRatingStars\">\r\n              {review\r\n                ? [1, 2, 3, 4, 5].map((index) => {\r\n                    return (\r\n                      <RatingIcon\r\n                        index={index}\r\n                        rating={rating}\r\n                        hoverRating={hoverRating}\r\n                        onMouseEnter={onMouseEnter}\r\n                        onMouseLeave={onMouseLeave}\r\n                        onSaveRating={onSaveRating}\r\n                        selected={review.rating >= index}\r\n                        notSelected={review.rating < index}\r\n                      />\r\n                    );\r\n                  })\r\n                : [1, 2, 3, 4, 5].map((index) => {\r\n                    return (\r\n                      <RatingIcon\r\n                        index={index}\r\n                        rating={rating}\r\n                        hoverRating={hoverRating}\r\n                        onMouseEnter={onMouseEnter}\r\n                        onMouseLeave={onMouseLeave}\r\n                        onSaveRating={onSaveRating}\r\n                      />\r\n                    );\r\n                  })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userReviewTopRight\">\r\n          {doneReview ? (\r\n            review.reviewerId === user?._id ? (\r\n              <button\r\n                className=\"userReviewSubmitButton\"\r\n                onClick={() => handleDelete(review)}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <button\r\n              className=\"userReviewSubmitButton\"\r\n              onClick={() => handleSubmit(reviewText, rating)}\r\n            >\r\n              Submit\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"userReviewBottom\">\r\n        {doneReview ? (\r\n          <div className=\"userReviewedText\">{review.reviewText}</div>\r\n        ) : (\r\n          <textarea\r\n            placeholder=\"(Optional) Leave a review ...\"\r\n            className=\"userReviewInput\"\r\n            value={reviewText}\r\n            maxlength=\"1999\"\r\n            onChange={(e) => setReviewText(e.target.value)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./userlisting.css\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport ItemListing from \"../../components/itemListing/ItemListing\";\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport UserReview from \"../../components/userReview/UserReview\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UserListing() {\r\n  const { user, sockio } = useContext(AuthContext); //this user is currentUser\r\n  const username = useParams().username;\r\n  // const subpage = useParams().subpage;\r\n  const [displayItems, setDisplayItems] = useState([]);\r\n  const [viewingCategory, setViewingCategory] = useState(\"tangibles\");\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    console.log(\"username is: \", username);\r\n    // console.log(\"subpage is:\", subpage);\r\n  }, [sockio, username]);\r\n\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const getDisplayItems = async () => {\r\n      if (profileUser) {\r\n        const res = await axios.get(\r\n          \"/api/items/categories?categoryName=\" +\r\n            viewingCategory +\r\n            \"&userId=\" +\r\n            profileUser._id\r\n        );\r\n        setDisplayItems(res.data);\r\n        //console.log(res.data);\r\n      }\r\n    };\r\n    getDisplayItems();\r\n  }, [viewingCategory, profileUser]);\r\n\r\n  const handleClickTangible = () => {\r\n    setViewingCategory(\"tangibles\");\r\n    setTabValue(0);\r\n  };\r\n\r\n  const handleClickIntangible = () => {\r\n    setViewingCategory(\"intangibles\");\r\n    setTabValue(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"userlistingContainer\">\r\n        <SideBar className=\"sidebar\" sidebarUser={profileUser} />\r\n        <div className=\"userListingsRight\">\r\n          <Container className=\"userlistingWrapper\">\r\n            <div className=\"tabBar\">\r\n              <Paper margin={200} style={{ marginBottom: \"10px\" }}>\r\n                <Tabs\r\n                  value={tabValue}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  centered\r\n                >\r\n                  <Tab label=\"Tangible\" onClick={handleClickTangible} />\r\n                  <Tab label=\"Intangible\" onClick={handleClickIntangible} />\r\n                </Tabs>\r\n              </Paper>\r\n            </div>\r\n            <Row className=\"listingRow\" xs={1} md={3}>\r\n              {displayItems.length ? (\r\n                displayItems.map((item) => (\r\n                  <ItemListing key={item._id} item={item} />\r\n                ))\r\n              ) : (\r\n                <div>User does not have any item in this category</div>\r\n              )}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./review.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport UserReview from \"../../components/userReview/UserReview\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst cheeseCakeReview = {\r\n  _id: \"60cb421ce5ae38aaf0c6ec7b\",\r\n  reviewerId: \"60bf21abb893706a58752ecf\",\r\n  revieweeId: \"60bf2195b893706a58752ece\",\r\n  rating: 4,\r\n  reviewText:\r\n    \"The cheese baked rice session I attended was awesome! Punpun is very patient and handheld me throughout the whole session. I'm satisfied with my homemade cheese baked rice!\",\r\n  createdAt: \"2021-06-17T12:37:48.610Z\",\r\n  updatedAt: \"2021-06-17T12:37:48.610Z\",\r\n  __v: 0,\r\n};\r\n\r\nconst punpunReviewBing = {\r\n  _id: \"60ca10cf56bca394fc060b94\",\r\n  reviewerId: \"60bf2195b893706a58752ece\",\r\n  revieweeId: \"60bf21abb893706a58752ecf\",\r\n  rating: 4,\r\n  reviewText: \"The user is very patient and I find the swap very worthwhile\",\r\n  createdAt: \"2021-06-17T12:37:48.610Z\",\r\n  updatedAt: \"2021-06-17T12:37:48.610Z\",\r\n  __v: 0,\r\n};\r\n\r\nexport default function Review() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const username = useParams().username;\r\n  const [reviews, setReviews] = useState([]);\r\n  const [alreadyReviewed, setAlreadyReviewed] = useState(false);\r\n  const [myReview, setMyReview] = useState([]); //the review by the currentUser on the profileUser\r\n  const [initialCumRating, setInitialCumRating] = useState(0);\r\n  const [initialRatedBy, setInitialRatedBy] = useState(0);\r\n  //get the profile user of this page\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  //get all the reviews of this profileUser\r\n  useEffect(() => {\r\n    console.log(user);\r\n    const getReviews = async () => {\r\n      const res = await axios.get(\r\n        \"/api/reviews/profileUser/\" + profileUser._id\r\n      );\r\n      const filterMyReview = res.data.filter(\r\n        //filter away reviews made by currentUser\r\n        (review) => review.reviewerId !== user?._id\r\n      );\r\n      setReviews(filterMyReview);\r\n      console.log(filterMyReview);\r\n    };\r\n    if (profileUser) {\r\n      getReviews();\r\n      setInitialCumRating(profileUser.cumulativeRating);\r\n      setInitialRatedBy(profileUser.ratedByUsers);\r\n    }\r\n  }, [profileUser, user]);\r\n\r\n  //set alreadyReviewed intially based on currentUser and profileUser\r\n  useEffect(() => {\r\n    const getAlreadyReviewed = async () => {\r\n      if (!user || !profileUser || profileUser._id === user._id) {\r\n        setAlreadyReviewed(true); //set to true so we cannot review the profileUser\r\n      } else {\r\n        const res = await axios.get(\r\n          \"/api/reviews/between/\" + profileUser._id + \"/\" + user._id\r\n        );\r\n        if (res.data.length > 0) {\r\n          setAlreadyReviewed(true);\r\n          setMyReview(res.data);\r\n          console.log(res.data);\r\n        } else {\r\n          setAlreadyReviewed(false);\r\n        }\r\n      }\r\n    };\r\n    getAlreadyReviewed();\r\n  }, [profileUser, user]);\r\n\r\n  //handleSubmit if a review is added\r\n  const handleSubmit = async (reviewText, rating) => {\r\n    if (!alreadyReviewed && rating > 0) {\r\n      console.log(\"reviewText is: \" + reviewText + \"\\n rating is: \" + rating);\r\n      const newReview = {\r\n        reviewerId: user._id,\r\n        revieweeId: profileUser._id,\r\n        rating: rating,\r\n        reviewText: reviewText,\r\n      };\r\n      const res = await axios.post(\"/api/reviews\", newReview);\r\n      setMyReview([...myReview, res.data]);\r\n      setAlreadyReviewed(true);\r\n      //also update ratings of profileUser\r\n      const updateRatingRes = await axios.put(\"/api/users/\" + profileUser._id, {\r\n        cumulativeRating: initialCumRating + rating,\r\n        ratedByUsers: initialRatedBy + 1,\r\n      });\r\n      setInitialCumRating(initialCumRating + rating);\r\n      setInitialRatedBy(initialRatedBy + 1);\r\n    }\r\n  };\r\n\r\n  //handleDelete if own rating is deleted\r\n  const handleDelete = async (review) => {\r\n    if (alreadyReviewed) {\r\n      console.log(review);\r\n      const res = await axios.delete(\"/api/reviews/id/\" + review._id);\r\n      console.log(res.status);\r\n      console.log(typeof res.status);\r\n      setMyReview([]);\r\n      setAlreadyReviewed(false);\r\n      const updateRatingRes = await axios.put(\"/api/users/\" + profileUser._id, {\r\n        cumulativeRating: initialCumRating - review.rating,\r\n        ratedByUsers: initialRatedBy - 1,\r\n      });\r\n      setInitialCumRating(initialCumRating - review.rating);\r\n      setInitialRatedBy(initialRatedBy - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"userReviewsContainer\">\r\n        <SideBar sidebarUser={profileUser} />\r\n        <div className=\"userReviewsRight\">\r\n          <Container className=\"userReviewsWrapper\">\r\n            <span className=\"userReviewsHeader\">Reviews</span>\r\n            {alreadyReviewed ? (\r\n              <></>\r\n            ) : (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                doneReview={false}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            )}\r\n            {myReview.map((review) => (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                key={review._id}\r\n                review={review}\r\n                doneReview={true}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            ))}\r\n            {reviews.map((review) => (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                key={review._id}\r\n                review={review}\r\n                doneReview={true}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            ))}\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./product.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ItemListing from \"../../components/itemListing/ItemListing\";\r\nimport { ArrowBackIos } from \"@material-ui/icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Product() {\r\n  const categoryName = useParams().categoryName;\r\n  const pageType = useParams().pageType;\r\n  const [items, setItems] = useState([]);\r\n  const { user, sockio } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    console.log(\"categoryName is: \" + categoryName);\r\n    console.log(\"pageType is \" + pageType);\r\n    const getItems = async () => {\r\n      try {\r\n        if (pageType === \"categories\" && categoryName) {\r\n          const res = await axios.get(\r\n            \"/api/items/categories?categoryName=\" + categoryName\r\n          );\r\n          if (res.status === 200) {\r\n            const displayItems = res.data.filter(\r\n              (item) => item.userId !== user?._id\r\n            );\r\n            await setItems(displayItems);\r\n          }\r\n        } else if (pageType === \"search\" && categoryName) {\r\n          const res = await axios.get(\"/api/items?search=\" + categoryName);\r\n          if (res.status === 200) {\r\n            const displayItems = res.data.filter(\r\n              (item) => item.userId !== user?._id\r\n            );\r\n            await setItems(displayItems);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getItems();\r\n  }, [categoryName, pageType, user]);\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n\r\n      <div className=\"productWrapper\">\r\n        {/*<div className=\"backArrow\">\r\n          <ArrowBackIos />\r\n          <span>Back</span>\r\n        </div> */}\r\n        <span className=\"productHeader\">\r\n          {pageType === \"search\"\r\n            ? \"Search results for: \" + categoryName\r\n            : pageType === \"categories\" && categoryName\r\n            ? categoryName.charAt(0).toUpperCase() + categoryName.slice(1)\r\n            : \"Product Descrption Header\"}\r\n        </span>\r\n        <Row className=\"listingRow\" xl={4} lg={3} md={2} sm={1} xs={1}>\r\n          {items.map((item) => (\r\n            <div>\r\n              <ItemListing key={item._id} item={item} />\r\n            </div>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDEtU9iHU6zDSCB0De42EH4CPhh_WDZcm8\",\r\n  authDomain: \"projectrehash-e91c0.firebaseapp.com\",\r\n  projectId: \"projectrehash-e91c0\",\r\n  storageBucket: \"projectrehash-e91c0.appspot.com\",\r\n  messagingSenderId: \"882668693176\",\r\n  appId: \"1:882668693176:web:1462615739f6878eed364d\",\r\n  measurementId: \"G-DNDTB5D3WW\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst storage = firebase.storage();\r\n\r\nexport { storage };\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  useContext,\r\n} from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./createListing.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\r\nimport AddPhotoAlternateOutlinedIcon from \"@material-ui/icons/AddPhotoAlternateOutlined\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { storage } from \"../../firebase\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nexport default function CreateListing() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const category = [\r\n    { title: \"Clothing\" },\r\n    { title: \"Beauty\" },\r\n    { title: \"Sports Equipments\" },\r\n    { title: \"Home Appliances\" },\r\n    { title: \"Automotive\" },\r\n    { title: \"Hobbies\" },\r\n    { title: \"Computers and Tech\" },\r\n    { title: \"Outdoor Activities\" },\r\n    { title: \"Travel\" },\r\n    { title: \"Discussion\" },\r\n    { title: \"Food\" },\r\n    { title: \"Indoor Activities\" },\r\n    { title: \"Sports\" },\r\n    { title: \"Games and Esports\" },\r\n    { title: \"Others\" },\r\n  ];\r\n\r\n  //Below is code for the Dropzone\r\n  const [files, setFiles] = useState([]);\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [idealCategories, setIdealCategories] = useState([]);\r\n  const [swapCategories, setSwapCategories] = useState([]);\r\n  const [isCreating, setCreating] = useState(false);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  //When file is dropped, set the new array of files based on different conditions\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      if (!!errors[\"images\"]) {\r\n        setErrors({\r\n          ...errors,\r\n          images: null,\r\n        });\r\n      }\r\n      const newFiles = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n          customFileName: Date.now().toString().concat(file.name),\r\n        })\r\n      );\r\n      var allFiles = [...files, ...newFiles];\r\n      console.log(allFiles);\r\n      console.log(allFiles.length);\r\n      if (allFiles.length > 6) {\r\n        allFiles = allFiles.slice(allFiles.length - 6, allFiles.length);\r\n        console.log(allFiles);\r\n      }\r\n      setFiles(allFiles);\r\n    },\r\n    [errors, files]\r\n  );\r\n\r\n  //The useDropzone hook\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: onDrop,\r\n    maxFiles: 6,\r\n  });\r\n\r\n  //setting style for the dropzone\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  //previews of the images uploaded\r\n  const thumbs = files.map((file) => (\r\n    <div className=\"thumb\" key={file.customFileName}>\r\n      <img src={file.preview} className=\"userSwapImg\" alt=\"\" />\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  //Below is for Form Control\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    //if error exists, remove them from the error object\r\n    if (!!errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { title, description, tangible } = form;\r\n    const newErrors = {};\r\n\r\n    //title error\r\n    if (!title || title === \"\") {\r\n      newErrors.title = \"title cannot be blank!\";\r\n    } else if (title.length > 50) {\r\n      newErrors.title = \"title cannot be more than 50 characters\";\r\n    }\r\n\r\n    //description error\r\n    if (!description || description === \"\") {\r\n      newErrors.description = \"description cannot be blank!\";\r\n    } else if (description.length > 800) {\r\n      newErrors.description = \"description cannot be more than 800 characters\";\r\n    }\r\n\r\n    //Tangibles of intangibles not selected\r\n    if (!tangible || tangible === \"\") {\r\n      newErrors.tangible =\r\n        \"specify whether your item is tangible or intangible!\";\r\n    }\r\n\r\n    //Swap category errors\r\n    if (!swapCategories || swapCategories.length === 0) {\r\n      newErrors.swapCategories = \"select at least 1 category!\";\r\n    }\r\n\r\n    //Ideal swap category errors\r\n    if (!idealCategories || idealCategories.length === 0) {\r\n      newErrors.idealCategories = \"select at least 1 category!\";\r\n    }\r\n\r\n    //Check for images\r\n    if (files.length === 0) {\r\n      newErrors.images = \"you have to upload at least 1 image!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const uploadFirebaseOne = async (file) => {\r\n    if (!file) {\r\n      return \"\";\r\n    }\r\n    try {\r\n      const imageFileName = file.customFileName;\r\n      console.log(\"filename is: \" + imageFileName);\r\n      const uploadTask = await storage.ref(`items/${imageFileName}`).put(file);\r\n      const imageUrl = await storage\r\n        .ref(\"items\")\r\n        .child(`${imageFileName}`)\r\n        .getDownloadURL();\r\n      const trimImageUrl = imageUrl.replace(PF, \"\");\r\n      console.log(\"trimImageUrl is: \" + trimImageUrl);\r\n      return trimImageUrl;\r\n    } catch (err) {\r\n      console.log(err);\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  const uploadFirebaseMany = async (files) => {\r\n    if (files.length === 0) return [];\r\n    var fileUrls = [];\r\n\r\n    try {\r\n      for (var i = 0; i < files.length; i++) {\r\n        console.log(\"processing file \" + i);\r\n        const file = files[i];\r\n        const downloadFileResponse = await uploadFirebaseOne(file);\r\n        fileUrls.push(downloadFileResponse);\r\n        console.log(\r\n          \"finish processing file \" + i + \": \" + downloadFileResponse\r\n        );\r\n      }\r\n      console.log(\"finish processing all files\");\r\n      console.log(fileUrls);\r\n      return fileUrls;\r\n    } catch (err) {\r\n      return [];\r\n    }\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      setCreating(true);\r\n      var newItemSwapCat = swapCategories.map((categoryObject) =>\r\n        categoryObject.title.toLowerCase()\r\n      );\r\n      newItemSwapCat = [...newItemSwapCat, form.tangible];\r\n      const newItemIdealSwap = idealCategories.map((categoryObject) =>\r\n        categoryObject.title.toLowerCase()\r\n      );\r\n\r\n      try {\r\n        //modified below\r\n        const imageArray = await uploadFirebaseMany(files);\r\n        console.log(imageArray);\r\n\r\n        // const data = new FormData();\r\n        // for (let i = 0; i < files.length; i += 1) {\r\n        //   data.append(\"file\", files[i]);\r\n        //   data.append(\"name\", files[i].customFileName);\r\n        //   console.log(\"customFileName is: \" + files[i].customFileName);\r\n        //   console.log(typeof files[i].customFileName);\r\n        // }\r\n        // console.log(data);\r\n\r\n        // const uploadFileRes = await axios.post(\"/api/upload/items\", data);\r\n        if (imageArray.length > 0 && !imageArray.includes(\"\")) {\r\n          const newItem = {\r\n            userId: user._id,\r\n            title: form.title,\r\n            desc: form.description,\r\n            img: imageArray,\r\n            categories: newItemSwapCat,\r\n            idealSwaps: newItemIdealSwap,\r\n            status: \"waiting\",\r\n          };\r\n          console.log(newItem);\r\n          const res = await axios.post(\"/api/items\", newItem);\r\n          console.log(res.data);\r\n        }\r\n\r\n        setFiles([]);\r\n        setForm({\r\n          tangible: \"\",\r\n        });\r\n        setIdealCategories([]);\r\n        setSwapCategories([]);\r\n        setCreating(false);\r\n      } catch (err) {\r\n        console.log(err);\r\n        setFiles([]);\r\n        setForm({\r\n          tangible: \"\",\r\n        });\r\n        setIdealCategories([]);\r\n        setSwapCategories([]);\r\n        setCreating(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"createListingContainer\">\r\n        <div className=\"createListingHeader\">\r\n          <span>Make your swap today!</span>\r\n        </div>\r\n\r\n        {/* /* for uploading of images */}\r\n        <Row className=\"createListingContent\">\r\n          <Col xs={6}>\r\n            <Card className=\"uploadImagesCard shadow p-3 mb-5 bg-white rounded\">\r\n              <Card.Body>\r\n                <h5 className=\"uploadImagesCardHeader\">\r\n                  Drag and Drop images here\r\n                </h5>\r\n                <h6 className=\"uploadImagesCardSubHeader\">\r\n                  or click to upload\r\n                </h6>\r\n                <Form>\r\n                  <Form.Group controlId=\"images\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      style={{ display: \"none\" }}\r\n                      isInvalid={!!errors.images}\r\n                    />\r\n                    <div className=\"swapImgDragAndDropWrapper\">\r\n                      <section className=\"container\">\r\n                        <div\r\n                          {...getRootProps({ style })}\r\n                          className=\"dragAndDropDiv\"\r\n                        >\r\n                          <input {...getInputProps()} />\r\n                          <p>\r\n                            <AddPhotoAlternateOutlinedIcon fontSize=\"large\" />\r\n                          </p>\r\n                          <p>Drop away your swap images...</p>\r\n                        </div>\r\n                        <aside className=\"thumbsContainer\">{thumbs}</aside>\r\n                      </section>\r\n                    </div>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.images}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs={6} className=\"createListingContentRight\">\r\n            <Form className=\"formWrapper\">\r\n              <Form.Group controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  type=\"text\"\r\n                  maxlength=\"50\"\r\n                  placeholder=\"Enter your swap title\"\r\n                  value={form.title ? form.title : \"\"}\r\n                  onChange={(e) => setField(\"title\", e.target.value)}\r\n                  isInvalid={!!errors.title}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.title}\r\n                </Form.Control.Feedback>\r\n                <Form.Text className=\"text-muted\">\r\n                  Create an interesting title for your swap!\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  as=\"textarea\"\r\n                  maxlength=\"800\"\r\n                  rows={3}\r\n                  value={form.description ? form.description : \"\"}\r\n                  placeholder=\"Describe your swap\"\r\n                  onChange={(e) => setField(\"description\", e.target.value)}\r\n                  isInvalid={!!errors.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.description}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"tangible\">\r\n                <Form.Label>Is your item Tangible or Intangible?</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  as=\"select\"\r\n                  value={form.tangible}\r\n                  onChange={(e) => setField(\"tangible\", e.target.value)}\r\n                  isInvalid={!!errors.tangible}\r\n                >\r\n                  <option value=\"\" disabled hidden selected>\r\n                    Select category:\r\n                  </option>\r\n                  {/*The tangibles and intangibles spelling must be exactly like this for the database*/}\r\n                  <option value=\"tangibles\">Tangible</option>\r\n                  <option value=\"intangibles\">Intangible</option>\r\n                </Form.Control>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.tangible}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"swapCategories\">\r\n                <Form.Label>What is your swap category?</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ display: \"none\" }}\r\n                  isInvalid={!!errors.swapCategories}\r\n                />\r\n                <div className={classes.root}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={category}\r\n                    value={swapCategories}\r\n                    getOptionLabel={(option) => option.title}\r\n                    onChange={(e, newValue) => {\r\n                      if (!!errors[\"swapCategories\"]) {\r\n                        setErrors({ ...errors, swapCategories: null });\r\n                      }\r\n                      setSwapCategories(newValue);\r\n                      console.log(newValue);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Select categories\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.swapCategories}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"idealCategories\">\r\n                <Form.Label>What is your ideal swap?</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ display: \"none\" }}\r\n                  isInvalid={!!errors.idealCategories}\r\n                />\r\n                <div className={classes.root}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags2\"\r\n                    options={category}\r\n                    value={idealCategories}\r\n                    getOptionLabel={(option) => option.title}\r\n                    onChange={(e, newValue) => {\r\n                      if (!!errors[\"idealCategories\"]) {\r\n                        setErrors({ ...errors, idealCategories: null });\r\n                      }\r\n                      setIdealCategories(newValue);\r\n                      console.log(newValue);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Select ideal swaps\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.idealCategories}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Button\r\n                className=\"postButton\"\r\n                variant=\"warning\"\r\n                onClick={handleSubmit}\r\n                disabled={isCreating}\r\n              >\r\n                {isCreating ? (\r\n                  <CircularProgress color=\"white\" size=\"20px\" />\r\n                ) : (\r\n                  \"Post Swap\"\r\n                )}\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"./singleItem.css\";\r\n//option1\r\n// import Carousel from \"react-multi-carousel\";\r\n//option2\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nexport default function SingleItem({ imgLinkArray }) {\r\n  //if you want to show all pictures in 1 line\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      //the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  // const images = ['/assests/singleItemPics/keychronK2Pic1.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic2.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic1.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic2.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 ];\r\n  // return (\r\n  //     <div>\r\n\r\n  //        <Carousel\r\n  //   ssr\r\n  //   partialVisbile\r\n  // //   deviceType={deviceType}\r\n  //   itemClass=\"image-item\"\r\n  //   responsive={responsive}\r\n  // >\r\n  //   {images.slice(0, ).map((image, index) => {\r\n  //     return (\r\n  //       <div key={index} style={{ position: \"relative\" }}>\r\n  //         <img\r\n  //           draggable={false}\r\n  //           alt=\"text\"\r\n  //           style={{ width: \"100%\", height: \"100%\" }}\r\n  //           src={image}\r\n  //         />\r\n  //       </div>\r\n  //     );\r\n  //   })}\r\n  // </Carousel>\r\n  //     </div>\r\n\r\n  //if you want to show carousel in just 1 image\r\n\r\n  useEffect(() => {\r\n    console.log(imgLinkArray);\r\n  }, [imgLinkArray]);\r\n  return (\r\n    <div className=\"singleItemWrapper\">\r\n      <Carousel responsive={responsive}>\r\n        {imgLinkArray?.map((imgLink) => (\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"singleItemCarouselItemImg\"\r\n              src={PF + imgLink}\r\n              alt=\"\"\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n\r\n        {/* <Carousel.Item>\r\n          <img\r\n            className=\"singleItemCarouselItemImg\"\r\n            src=\"/assests/singleItemPics/keychronK2Pic2.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"singleItemCarouselItemImg\"\r\n            src=\"/assests/singleItemPics/keychronK2Pic3.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </Carousel.Item> */}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./swapAway.css\";\r\nimport { Alert, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { TextsmsOutlined } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function SwapAway({ itemUserId }) {\r\n  //if delete, go back to listings page\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const [itemUser, setItemUser] = useState(null);\r\n  const history = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const getItemUser = async () => {\r\n      if (itemUserId) {\r\n        const res = await axios.get(\"/api/users?userId=\" + itemUserId);\r\n        setItemUser(res.data);\r\n        console.log(\"itemUser is: \" + res.data);\r\n      }\r\n    };\r\n    getItemUser();\r\n  }, [itemUserId]);\r\n\r\n  const handleSwapAway = async () => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n      console.log(\"pushed to login\");\r\n    } else {\r\n      const res = await axios.get(\r\n        \"/api/conversations/find/\" + user._id + \"/\" + itemUserId\r\n      );\r\n      if (res.data.length > 0) {\r\n        history.push(\"/chat/\" + res.data[0]._id);\r\n        console.log(\"pushed to chat id:\" + res.data[0]._id);\r\n      } else {\r\n        const newConvo = await axios.post(\"/api/conversations\", {\r\n          members: [itemUserId, user._id],\r\n        });\r\n        //chatFollow is not used for now\r\n        history.push(\"/chat/\" + newConvo._id); //likely works but needs to be tested\r\n        console.log(newConvo.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert className=\"swapAwayPrompt\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <img\r\n                className=\"swapAwayUserImg\"\r\n                src={\r\n                  itemUser && itemUser.profilePicture\r\n                    ? PF + itemUser.profilePicture\r\n                    : NO_AVATAR\r\n                }\r\n                onClick={() => {\r\n                  itemUser &&\r\n                    history.push(\"/profile/\" + itemUser.username + \"/listings\");\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Alert.Heading\r\n                className=\"swapAwayUsername\"\r\n                style={{ fontSize: \"1rem\" }}\r\n              >\r\n                {itemUser ? itemUser.username : \"\"}\r\n              </Alert.Heading>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Button\r\n          className=\"swapAwayButton\"\r\n          variant=\"warning\"\r\n          onClick={handleSwapAway}\r\n        >\r\n          <div className=\"swapAwayButtonTextGroup\">\r\n            <TextsmsOutlined />\r\n            <span className=\"swapAwayButtonText\">Swap Away!</span>\r\n          </div>\r\n        </Button>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./userItemCommand.css\";\r\nimport { Alert, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport axios from \"axios\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function UserItemCommand({\r\n  itemUserId,\r\n  itemStatus,\r\n  handleReserve,\r\n  handleUnreserve,\r\n  handleSwap,\r\n  handleUnswap,\r\n  handleDelete,\r\n  inProgress,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const [itemUser, setItemUser] = useState(null);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getItemUser = async () => {\r\n      if (itemUserId) {\r\n        const res = await axios.get(\"/api/users?userId=\" + itemUserId);\r\n        setItemUser(res.data);\r\n        console.log(\"itemUser is: \" + res.data);\r\n      }\r\n    };\r\n    getItemUser();\r\n  }, [itemUserId]);\r\n\r\n  const handleKeyDownSwap = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      console.log(\"user pressed enter key and the value is: \" + input);\r\n      if (input !== \"\") {\r\n        console.log(\"input is not empty\");\r\n        try {\r\n          const res = await axios.get(\"/api/agreements?id=\" + input);\r\n          if (!res || res.status !== 200 || !res.data) {\r\n            console.log(\"Error 1\");\r\n            setError(\"Agreement does not exist!\");\r\n          } else if (\r\n            res.data.parties.length >= 2 ||\r\n            res.data.items.length >= 2\r\n          ) {\r\n            console.log(\"Error 2\");\r\n            setError(\"This agreement id already involves 2 parties or 2 items\");\r\n          } else {\r\n            handleSwap(res.data._id);\r\n            setInput(\"\");\r\n            setShowInput(false);\r\n          }\r\n        } catch (err) {\r\n          console.log(\"Error 1\");\r\n          setError(\"Agreement does not exist!\");\r\n        }\r\n      } else {\r\n        console.log(\"input empty!\");\r\n        setError(\"Agreement code cannot be empty!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert className=\"userItemCommandPrompt\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <img\r\n                className=\"userItemCommandUserImg\"\r\n                src={\r\n                  itemUser && itemUser.profilePicture\r\n                    ? PF + itemUser.profilePicture\r\n                    : NO_AVATAR\r\n                }\r\n                onClick={() => {\r\n                  itemUser &&\r\n                    history.push(\"/profile/\" + itemUser.username + \"/listings\");\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Alert.Heading\r\n                className=\"userItemCommandUsername\"\r\n                style={{ fontSize: \"1rem\" }}\r\n              >\r\n                {itemUser ? itemUser.username : \"Anonymous\"}\r\n              </Alert.Heading>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"buttonWrapper\">\r\n            {itemStatus === \"waiting\" ? (\r\n              <div>\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleReserve}\r\n                  disabled={inProgress}\r\n                >\r\n                  <VerifiedUserIcon className=\"icons\" />\r\n                  {inProgress ? (\r\n                    <CircularProgress color=\"white\" size=\"20px\" />\r\n                  ) : (\r\n                    <span className=\"action\">Mark as Reserve</span>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            ) : itemStatus === \"reserved\" ? (\r\n              <div>\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleUnreserve}\r\n                  disabled={inProgress}\r\n                >\r\n                  <VerifiedUserIcon className=\"icons\" />\r\n                  {inProgress ? (\r\n                    <CircularProgress color=\"white\" size=\"20px\" />\r\n                  ) : (\r\n                    <span className=\"action\">Unreserve</span>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div>\r\n              {itemStatus === \"deleted\" ? (\r\n                <></>\r\n              ) : itemStatus === \"swapped\" ? (\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleUnswap}\r\n                  disabled={inProgress}\r\n                >\r\n                  <ShoppingBasketIcon className=\"icons\" />\r\n                  {inProgress ? (\r\n                    <CircularProgress color=\"white\" size=\"20px\" />\r\n                  ) : (\r\n                    <span className=\"action\">Cancel Agreement</span>\r\n                  )}\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button\r\n                    className=\"button\"\r\n                    variant=\"warning\"\r\n                    disabled={inProgress}\r\n                  >\r\n                    <ShoppingBasketIcon className=\"icons\" />\r\n                    {inProgress ? (\r\n                      <CircularProgress color=\"white\" size=\"20px\" />\r\n                    ) : (\r\n                      <span\r\n                        className=\"action\"\r\n                        onClick={() => setShowInput(!showInput)}\r\n                      >\r\n                        Mark as Swapped\r\n                      </span>\r\n                    )}\r\n                  </Button>\r\n                  {showInput ? (\r\n                    <Form className=\"userItemCommandForm\">\r\n                      <Form.Group controlId=\"title\">\r\n                        <Form.Control\r\n                          className=\"userItemCommandFormControl\"\r\n                          type=\"input\"\r\n                          maxlength=\"30\"\r\n                          placeholder=\"Enter your agreement code\"\r\n                          value={input}\r\n                          onChange={(e) => {\r\n                            setInput(e.target.value);\r\n                            setError(\"\");\r\n                            console.log(\"changed to: \" + e.target.value);\r\n                          }}\r\n                          onKeyDown={handleKeyDownSwap}\r\n                          isInvalid={error !== \"\"}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {error}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {itemStatus === \"deleted\" || itemStatus === \"swapped\" ? (\r\n                <></>\r\n              ) : (\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleDelete}\r\n                  disabled={inProgress}\r\n                >\r\n                  <HighlightOffIcon className=\"icons\" />\r\n                  {inProgress ? (\r\n                    <CircularProgress color=\"white\" size=\"20px\" />\r\n                  ) : (\r\n                    <span className=\"action\">Delete</span>\r\n                  )}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./item.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SingleItem from \"../../components/singleItem/SingleItem\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { ArrowBackIos, ImageRounded } from \"@material-ui/icons\";\r\nimport SwapAway from \"../../components/swapAway/SwapAway\";\r\nimport UserItemCommand from \"../../components/userItemCommand/UserItemCommand\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { storage } from \"../../firebase\";\r\n\r\nexport default function Item() {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const itemId = useParams().itemId;\r\n  const [item, setItem] = useState(null);\r\n  const history = useHistory();\r\n  const [copyLinkText, setCopyLinkText] = useState(\"\");\r\n  const [inProgress, setInProgress] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getItem = async () => {\r\n      try {\r\n        if (itemId) {\r\n          const res = await axios.get(\"/api/items?itemId=\" + itemId);\r\n          await setItem(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getItem();\r\n  }, [itemId]);\r\n\r\n  const handleReserve = async () => {\r\n    try {\r\n      if (itemId) {\r\n        setInProgress(true);\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"reserved\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n        setInProgress(false);\r\n      }\r\n    } catch (err) {\r\n      setInProgress(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUnreserve = async () => {\r\n    try {\r\n      if (itemId) {\r\n        setInProgress(true);\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"waiting\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n        setInProgress(false);\r\n      }\r\n    } catch (err) {\r\n      setInProgress(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSwap = async (agreementId) => {\r\n    console.log(\"handleSwap called with agreementId: \" + agreementId);\r\n    try {\r\n      setInProgress(true);\r\n      const agreementRes = await axios.put(\r\n        \"/api/agreements/update/addParties/\" + agreementId,\r\n        { userId: user?._id, itemId: itemId }\r\n      );\r\n      if (agreementRes.status === 200 && itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"swapped\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n        setInProgress(false);\r\n      }\r\n      setInProgress(false);\r\n    } catch (err) {\r\n      setInProgress(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUnswap = async () => {\r\n    console.log(\"handleUnswap called\");\r\n    try {\r\n      setInProgress(true);\r\n      const agreementRes = await axios.put(\r\n        \"/api/agreements/update/removeParties\",\r\n        {\r\n          userId: user?._id,\r\n          itemId: itemId,\r\n        }\r\n      );\r\n      if (agreementRes.status === 200 && itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"waiting\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n        setInProgress(false);\r\n      }\r\n      setInProgress(false);\r\n    } catch (err) {\r\n      setInProgress(false);\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    console.log(\"handleDelete called\");\r\n    if (item) {\r\n      try {\r\n        setInProgress(true);\r\n\r\n        const tempItemId = item?._id;\r\n        await axios.delete(\"/api/posts/filter?itemId=\" + tempItemId);\r\n        const res = await axios.delete(\"/api/items?itemId=\" + item?._id);\r\n        if (res.status === 200) {\r\n          history.push(\"/profile/\" + user.username + \"/listings\");\r\n        }\r\n        setInProgress(false);\r\n        //image can be deleted only after push to the page so that process is faster. In case of fail deletion nothing much\r\n        //only firebase will store more pictures\r\n        for (var i = 0; i < item.img.length; i++) {\r\n          var imageRef = storage.refFromURL(PF + item.img[i]);\r\n          try {\r\n            await imageRef.delete();\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        setInProgress(false);\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCopyLink = (type) => {\r\n    console.log(\"copy link\");\r\n    var dummy = document.createElement(\"input\");\r\n    const text =\r\n      type === \"link\" ? window.location.href : item?._id ? item._id : \"\";\r\n\r\n    document.body.appendChild(dummy);\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n    setCopyLinkText(\r\n      type === \"link\"\r\n        ? \"Link to this page has been copied\"\r\n        : \"Item ID has been copied\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"itemPage\">\r\n      <TopBar currentUser={user} />\r\n      {/* <div className=\"itemBackArrow\">\r\n        <ArrowBackIos />\r\n        <span>Back</span>\r\n      </div> */}\r\n      <label className=\"itemHeader\">\r\n        {item ? item.title : \"Error: No Item Displayed\"}\r\n        {item ? (\r\n          <Chip\r\n            className=\"itemTag\"\r\n            label={item.status === \"waiting\" ? \"available\" : item.status}\r\n            size=\"small\"\r\n            color={\r\n              item.status === \"waiting\"\r\n                ? \"\"\r\n                : item.status === \"reserved\"\r\n                ? \"primary\"\r\n                : \"secondary\"\r\n            }\r\n            style={{\r\n              marginLeft: \"15px\",\r\n              marginRight: \"10px\",\r\n              marginTop: \"0px\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </label>\r\n\r\n      <Container className=\"itemImg\">\r\n        <Row>\r\n          <Col>\r\n            <SingleItem imgLinkArray={item ? item.img : []} />\r\n          </Col>\r\n          <Col>\r\n            {user?._id === item?.userId ? (\r\n              <UserItemCommand\r\n                itemUserId={item?.userId}\r\n                itemStatus={item?.status}\r\n                handleReserve={handleReserve}\r\n                handleUnreserve={handleUnreserve}\r\n                handleDelete={handleDelete}\r\n                handleSwap={handleSwap}\r\n                handleUnswap={handleUnswap}\r\n                inProgress={inProgress}\r\n              />\r\n            ) : (\r\n              <SwapAway itemUserId={item?.userId} />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* <div className=\"itemImg\">\r\n                <SingleItem />\r\n                <SwapAway />\r\n            </div> */}\r\n      <div className=\"itemHeaderSecond\">\r\n        <div className=\"itemGetLink\" onClick={() => handleCopyLink(\"link\")}>\r\n          Copy Link\r\n        </div>\r\n        <div className=\"itemGetLink\" onClick={() => handleCopyLink(\"id\")}>\r\n          Copy Item ID\r\n        </div>\r\n        <div className=\"itemCopyLinkText\">{copyLinkText}</div>\r\n      </div>\r\n      <div className=\"itemDescription\">\r\n        <h5>Description</h5>\r\n        <span>\r\n          {item\r\n            ? item.desc\r\n            : \"The item does not exist, and hence no description\"}\r\n        </span>\r\n      </div>\r\n      <div className=\"itemIdealSwaps\">\r\n        <h5>Ideal swaps</h5>\r\n        {item?.idealSwaps.map((tags) => (\r\n          <Chip\r\n            className=\"tag\"\r\n            key={tags}\r\n            label={tags}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./login.css\";\r\nimport RestoreFromTrashRoundedIcon from \"@material-ui/icons/RestoreFromTrashRounded\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const { user, dispatch, isFetching } = useContext(AuthContext);\r\n  // const usernameRef = useRef();\r\n  // const passwordRef = useRef();\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  // const checkCredentials = async () => {\r\n  //   try {\r\n  //     const res = await axios\r\n  //       .post(\"/api/auth/login\", {\r\n  //         username: usernameRef.current.value,\r\n  //         password: passwordRef.current.value,\r\n  //       })\r\n  //       .then(() => {\r\n  //         usernameRef.current.setCustomValidity(\"\");\r\n  //         passwordRef.current.setCustomValidity(\"\");\r\n  //       });\r\n  //   } catch (err) {\r\n  //     if (err.response.status === 400) {\r\n  //       usernameRef.current.setCustomValidity(\"Incorrect username or password\");\r\n  //     }\r\n  //   }\r\n  // };\r\n  const handleUsername = async (e) => {\r\n    setUsername(e.target.value);\r\n    console.log(e.target.value);\r\n    // checkCredentials();\r\n  };\r\n  const handlePassword = async (e) => {\r\n    setPassword(e.target.value);\r\n    console.log(e.target.value);\r\n    // checkCredentials();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const loginCall = async (userCredential, dispatch) => {\r\n      dispatch({ type: \"LOGIN_START\" });\r\n      try {\r\n        const res = await axios.post(\"/api/auth/login\", userCredential);\r\n        const sock = await io(); //const sock = await io(\"ws://localhost:8080\");\r\n        sock.on(\"connect\", () => {\r\n          sock.emit(\"addUser\", res.data._id);\r\n          console.log(\"sock inside try block: \", sock);\r\n          dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: { user: res.data, sock: sock },\r\n          });\r\n        });\r\n      } catch (err) {\r\n        setErrorMessage(\"Incorrect username or password\");\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: err });\r\n      }\r\n    };\r\n    loginCall({ username: username, password: password }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginTop\">\r\n          <RestoreFromTrashRoundedIcon\r\n            className=\"loginShoppingCartIcon\"\r\n            style={{\r\n              fontSize: 220,\r\n              color: \"white\",\r\n            }}\r\n          />\r\n        </div>\r\n        <form className=\"loginBottom\" onSubmit={handleSubmit}>\r\n          <div className=\"loginInputWrapper\">\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                color: \"white\",\r\n                fontSize: 32,\r\n                top: 32,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"USERNAME\"\r\n              onChange={handleUsername}\r\n              value={username}\r\n              // ref={usernameRef}\r\n              required\r\n              className=\"loginInput\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"loginInputWrapper\">\r\n            <LockOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                color: \"white\",\r\n                fontSize: 32,\r\n                top: 32,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"PASSWORD\"\r\n              required\r\n              onChange={handlePassword}\r\n              value={password}\r\n              // ref={passwordRef}\r\n              className=\"loginInput\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <div className=\"loginErrorMessageWrapper\">{errorMessage}</div>\r\n\r\n          <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n            {isFetching ? (\r\n              <CircularProgress color=\"white\" size=\"20px\" />\r\n            ) : (\r\n              \"LOGIN\"\r\n            )}\r\n          </button>\r\n          {/* <Link to=\"/register\" className=\"loginBottomLink\">\r\n            Forgot password?\r\n          </Link> */}\r\n          <Link to=\"/register\" className=\"loginBottomLink\">\r\n            New to ReHash? Sign up now!\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./conversation.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\n\r\nexport default function Conversation({\r\n  active,\r\n  userId,\r\n  lastMessageText,\r\n  lastMessageTime,\r\n  online,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const [displayTimeAgo, setDisplayTimeAgo] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"lastMessageText updated. the new message is: \",\r\n      lastMessageText\r\n    );\r\n  }, [lastMessageText]);\r\n\r\n  useEffect(() => {\r\n    if (lastMessageTime) {\r\n      setDisplayTimeAgo(format(lastMessageTime));\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (lastMessageTime) {\r\n        if (displayTimeAgo !== format(lastMessageTime)) {\r\n          setDisplayTimeAgo(format(lastMessageTime));\r\n        }\r\n      }\r\n\r\n      // console.log(\"This will run every second!\");\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [lastMessageTime]);\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\"/api/users?userId=\" + userId);\r\n        await setUser(res.data);\r\n        console.log(\"successfully got user\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div\r\n      className={active ? \"conversation conversationActive\" : \"conversation\"}\r\n    >\r\n      <div className=\"conversationLeft\">\r\n        <img\r\n          src={user?.profilePicture ? PF + user.profilePicture : NO_AVATAR}\r\n          alt=\"\"\r\n          className=\"conversationImg\"\r\n        />\r\n        {online ? <div className=\"conversationBadge\"></div> : <></>}\r\n      </div>\r\n\r\n      <div className=\"conversationRight\">\r\n        <div className=\"conversationRightTop\">\r\n          <div className=\"conversationName\">{user?.username}</div>\r\n          <div className=\"conversationStatus\">{displayTimeAgo}</div>\r\n        </div>\r\n\r\n        <span className=\"conversationLastMsg\">{lastMessageText}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./message.css\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Message({ message, own, pictureLink }) {\r\n  const [displayTimeAgo, setDisplayTimeAgo] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    if (message) {\r\n      setDisplayTimeAgo(format(message.createdAt));\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (displayTimeAgo !== format(message.createdAt)) {\r\n        setDisplayTimeAgo(format(message.createdAt));\r\n      }\r\n      // console.log(\"This will run every second!\");\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [message]);\r\n\r\n  return own ? (\r\n    <div className=\"messageOwn\">\r\n      <div className=\"messageTopOwn\">\r\n        <img className=\"messageImgOwn\" src={pictureLink} alt=\"\" />\r\n        <p\r\n          className=\"messageTextOwn\"\r\n          onClick={() => {\r\n            setShow(!show);\r\n          }}\r\n        >\r\n          {message.text}\r\n        </p>\r\n      </div>\r\n      {show ? <div className=\"messageBottom\">{displayTimeAgo}</div> : <></>}\r\n    </div>\r\n  ) : (\r\n    <div className=\"message\">\r\n      <div className=\"messageTop\">\r\n        <img className=\"messageImg\" src={pictureLink} alt=\"\" />\r\n        <p\r\n          className=\"messageText\"\r\n          onClick={() => {\r\n            setShow(!show);\r\n          }}\r\n        >\r\n          {message.text}\r\n        </p>\r\n      </div>\r\n      {show ? <div className=\"messageBottom\">{displayTimeAgo}</div> : <></>}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport \"./chat.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Chat() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentChatWith, setCurrentChatWith] = useState(null);\r\n  const [currentChatWithLastActive, setCurrentChatWithLastActive] =\r\n    useState(\"\");\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n\r\n  const scrollRef = useRef();\r\n  const initialActiveConvoId = useParams().initialActiveConvoId;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getInitialActiveConvo = async () => {\r\n      if (initialActiveConvoId !== \"0\") {\r\n        console.log(\"initialActiveConvoId is: \" + initialActiveConvoId);\r\n        const res = await axios.get(\r\n          \"/api/conversations/id/\" + initialActiveConvoId\r\n        );\r\n        setCurrentChat(res.data);\r\n      }\r\n    };\r\n    getInitialActiveConvo();\r\n  }, [initialActiveConvoId]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    if (sockio) {\r\n      sockio.on(\"getMessage\", (data) => {\r\n        setArrivalMessage({\r\n          sender: data.senderId,\r\n          text: data.text,\r\n          createdAt: Date.now(),\r\n        });\r\n      });\r\n    }\r\n  }, [sockio]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    if (sockio && user) {\r\n      sockio.on(\"getUsers\", (users) => {\r\n        console.log(\"getUser received on client side\");\r\n        setOnlineUsers(\r\n          user.chatFollow.filter((f) => users.some((u) => u.userId === f))\r\n        );\r\n      });\r\n    }\r\n  }, [user, sockio]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          \"/api/conversations/search/\" +\r\n            user._id +\r\n            \"/searchText?searchText=\" +\r\n            searchText\r\n        );\r\n        if (res.status === 200) {\r\n          setConversations(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user, messages, onlineUsers, searchText]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    const friendId = currentChat?.members.find((m) => m !== user._id);\r\n\r\n    const getCurrentChatWith = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?userId=\" + friendId);\r\n        await setCurrentChatWith(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getCurrentChatWith();\r\n  }, [user, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const updateLastActive = async () => {\r\n      var timeago = \"\";\r\n      try {\r\n        if (currentChatWith) {\r\n          const res = await axios.get(\r\n            \"/api/users?userId=\" + currentChatWith?._id\r\n          );\r\n          const newLastActive = res.data.lastActive;\r\n          console.log(\"newLastActive: \", newLastActive);\r\n          timeago = format(newLastActive);\r\n          console.log(\"LOOK AT ME: TIMEAGO \", timeago);\r\n        }\r\n      } catch (err) {\r\n        timeago = format(currentChatWith?.lastActive);\r\n        console.log(err);\r\n      }\r\n      setCurrentChatWithLastActive(\"Active \" + timeago);\r\n    };\r\n\r\n    updateLastActive();\r\n    const interval = setInterval(() => {\r\n      updateLastActive();\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [currentChatWith]);\r\n\r\n  //handles the event that the \"send\" button is clicked\r\n  const handleSendMessage = async (e) => {\r\n    if (newMessage !== \"\") {\r\n      e.preventDefault();\r\n      await setNewMessage(\"\");\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n\r\n      try {\r\n        const res = await axios.post(\"/api/messages\", message);\r\n\r\n        const lastMessageText = res.data.text;\r\n        const lastMessageTime = res.data.createdAt;\r\n        const updateRes = await axios.put(\r\n          \"/api/conversations/\" + currentChat._id + \"/lastmessage\",\r\n          { lastMessageText: lastMessageText, lastMessageTime: lastMessageTime }\r\n        );\r\n        console.log(updateRes);\r\n        console.log(\"currentChat is: \", currentChat);\r\n        await setMessages([...messages, res.data]);\r\n        console.log(\r\n          \"updated messages. the new messaged sent is: \",\r\n          res.data.text\r\n        );\r\n\r\n        const receiverId = currentChat.members.find(\r\n          (member) => member !== user._id\r\n        );\r\n        // console.log(\"sockio id right before emitting: \" + sockio.id);\r\n        sockio.emit(\"sendMessage\", {\r\n          senderId: user._id,\r\n          receiverId: receiverId,\r\n          text: newMessage,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      console.log(\"new message when eneter is pressed: \", newMessage);\r\n      setNewMessage(newMessage);\r\n      if (newMessage !== \"\") {\r\n        handleSendMessage(e);\r\n        console.log(\"passing to handleSendMessage\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    history.push(\"/profile/\" + currentChatWith.username + \"/listings\");\r\n  };\r\n\r\n  const handleGenerateAgreement = async () => {\r\n    console.log(\"generate agreement is clicked\");\r\n    const res = await axios.post(\"/api/agreements\");\r\n    if (res.data && res.data._id) {\r\n      setNewMessage(\"Your agreement code has been generated: \" + res.data._id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"auto\" });\r\n  }, [messages]);\r\n\r\n  const handleSearch = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if ((searchText.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"searchText is empty\");\r\n      } else if (user) {\r\n        try {\r\n          const res = await axios.get(\r\n            \"/api/conversations/search/\" +\r\n              user._id +\r\n              \"/searchText?searchText=\" +\r\n              searchText\r\n          );\r\n          if (res.status === 200) {\r\n            setConversations(res.data);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input\r\n              placeholder=\"Search for users...\"\r\n              className=\"chatMenuInput\"\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              onKeyDown={handleSearch}\r\n              value={searchText}\r\n            />\r\n            {conversations.map((c) => {\r\n              const userId = c.members.find((m) => m !== user._id);\r\n              return (\r\n                <div onClick={() => setCurrentChat(c)}>\r\n                  <Conversation\r\n                    online={onlineUsers.includes(userId)}\r\n                    lastMessageText={c.lastMessageText}\r\n                    lastMessageTime={c.lastMessageTime}\r\n                    userId={userId}\r\n                    active={currentChat ? c._id === currentChat._id : false}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxHeader\">\r\n                  <div className=\"chatBoxHeaderLeft\">\r\n                    <img\r\n                      src={\r\n                        currentChatWith?.profilePicture\r\n                          ? PF + currentChatWith.profilePicture\r\n                          : NO_AVATAR\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"chatBoxHeaderImg\"\r\n                    />\r\n                    <div className=\"chatBoxHeaderContent\">\r\n                      <div className=\"chatBoxHeaderName\">\r\n                        {currentChatWith?.username}\r\n                      </div>\r\n                      <div className=\"chatBoxHeaderStatus\">\r\n                        {onlineUsers.includes(currentChatWith?._id)\r\n                          ? \"Online now\"\r\n                          : currentChatWithLastActive}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"chatBoxViewProfileButton\"\r\n                    onClick={handleViewProfile}\r\n                  >\r\n                    View Profile\r\n                  </button>\r\n                </div>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      <Message\r\n                        message={m}\r\n                        own={m.sender === user?._id}\r\n                        pictureLink={\r\n                          m.sender === user?._id\r\n                            ? user?.profilePicture\r\n                              ? PF + user.profilePicture\r\n                              : NO_AVATAR\r\n                            : currentChatWith?.profilePicture\r\n                            ? PF + currentChatWith.profilePicture\r\n                            : NO_AVATAR\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"Write a message ...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                    onKeyDown={handleKeyDown}\r\n                  ></textarea>\r\n                  <button\r\n                    className=\"chatAgreementButton\"\r\n                    onClick={handleGenerateAgreement}\r\n                  >\r\n                    Generate Agreement\r\n                  </button>\r\n                  <button\r\n                    className=\"chatSubmitButton\"\r\n                    onClick={handleSendMessage}\r\n                  >\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./myGroups.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport GroupIcon from \"../../components/groupIcon/GroupIcon\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MyGroups() {\r\n  const { user, sockio } = useContext(AuthContext); //this user is currentUser\r\n  const username = useParams().username;\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [myGroups, setMyGroups] = useState([]);\r\n  const ADD_GROUP_IMAGE = process.env.REACT_APP_PUBLIC_FOLDER_ADDGROUP;\r\n\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const getMyGroups = async () => {\r\n      if (profileUser) {\r\n        const res = await axios.get(\r\n          \"/api/groups/filter?userId=\" + profileUser._id\r\n        );\r\n        setMyGroups(res.data);\r\n      }\r\n    };\r\n    getMyGroups();\r\n  }, [profileUser]);\r\n\r\n  const handleUpdateGroup = (group) => {\r\n    if (group && group.length > 0 && group[0]) {\r\n      setMyGroups([...group, ...myGroups]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"myGroupsPageTopSection\">\r\n        <TopBar currentUser={user} handleUpdateGroup={handleUpdateGroup} />\r\n      </div>\r\n      <div className=\"myGroupsPageMiddleSection\">\r\n        <SideBar className=\"sidebar\" sidebarUser={profileUser} />\r\n        <div className=\"myGroupsPageMiddleSectionRight\">\r\n          <div className=\"myGroupsPageMiddleSectionRightHeader\">\r\n            <span className=\"myGroupsPageMiddleSectionRightHeaderText\">\r\n              Groups You Have Joined\r\n            </span>\r\n            <div className=\"myGroupsPageGroupIconWrapper\">\r\n              <Row\r\n                className=\"myGroupsPageGroupIconContainer\"\r\n                xl={5}\r\n                lg={4}\r\n                md={3}\r\n                xs={2}\r\n              >\r\n                <Col>\r\n                  <GroupIcon groupImg={ADD_GROUP_IMAGE} create={true} />\r\n                </Col>\r\n                {myGroups.map((group) => (\r\n                  <Col key={group._id}>\r\n                    <GroupIcon\r\n                      groupImg={group.groupImg}\r\n                      groupName={group.groupName}\r\n                      groupId={group._id}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./settings.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport { Container, Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { storage } from \"../../firebase\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Settings() {\r\n  const { user, sockio, dispatch } = useContext(AuthContext);\r\n  const username = useParams().username;\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const EMPTY_USER_PROFILE = process.env.REACT_APP_PUBLIC_FOLDER_USERPROFILE;\r\n\r\n  const [form, setForm] = useState({ showPassword: false });\r\n  const [errors, setErrors] = useState({});\r\n  const [imgError, setImgError] = useState({});\r\n  const [passwordUpdateValid, setPasswordUpdateValid] = useState(false);\r\n\r\n  const [isUpdatingPicture, setIsUpdatingPicture] = useState(false);\r\n  const [isUpdatingPassword, setisUpdatingPassword] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  const imageHandler = (e) => {\r\n    const newFile = Object.assign(e.target.files[0], {\r\n      preview: URL.createObjectURL(e.target.files[0]),\r\n    });\r\n    setImgFile(newFile);\r\n    if (newFile && imgError.imgFile) {\r\n      setImgError({ imgFile: null });\r\n    }\r\n    console.log(newFile.preview);\r\n  };\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      if (imgFile) {\r\n        URL.revokeObjectURL(imgFile.preview);\r\n      }\r\n    },\r\n    [imgFile]\r\n  );\r\n\r\n  const handleChangePicture = async (e) => {\r\n    e.preventDefault();\r\n    if (!imgFile) {\r\n      setImgError({ imgFile: \"No image uploaded!\" });\r\n    } else {\r\n      // const data = new FormData();\r\n      // data.append(\"file\", imgFile);\r\n      // console.log(data);\r\n\r\n      const updatePicture = async () => {\r\n        try {\r\n          // const uploadFileRes = await axios.post(\"/api/upload/person\", data);\r\n          // if (uploadFileRes.status === 200) {\r\n          //   const newProfilePicture = {\r\n          //     profilePicture: uploadFileRes.data.imagePath,\r\n          //   };\r\n          //   const newUser = { ...user, ...newProfilePicture };\r\n          //   console.log(newUser);\r\n\r\n          //   const res = await axios.put(\"/api/users/\" + user._id, {\r\n          //     profilePicture: uploadFileRes.data.imagePath,\r\n          //   });\r\n          //   if (res.status === 200) {\r\n          //     dispatch({\r\n          //       type: \"UPDATE\",\r\n          //       payload: { user: newUser, sock: sockio },\r\n          //     });\r\n          //   }\r\n          // }\r\n          setIsUpdatingPicture(true);\r\n          const imageFileName = Date.now() + imgFile.name;\r\n          console.log(\"filename is: \" + imageFileName);\r\n          const uploadTask = storage\r\n            .ref(`person/${imageFileName}`)\r\n            .put(imgFile);\r\n          uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n              const progress = Math.round(\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n              );\r\n              console.log(\"progress is: \" + progress.toString());\r\n            },\r\n            (error) => {\r\n              console.log(error);\r\n              setIsUpdatingPicture(false);\r\n            },\r\n            async () => {\r\n              //get download url and upload the post info\r\n              try {\r\n                const imageUrl = await storage\r\n                  .ref(\"person\")\r\n                  .child(`${imageFileName}`)\r\n                  .getDownloadURL();\r\n                const trimImageUrl = imageUrl.replace(PF, \"\");\r\n                console.log(trimImageUrl);\r\n                const newProfilePicture = {\r\n                  profilePicture: trimImageUrl,\r\n                };\r\n\r\n                console.log(newProfilePicture);\r\n                const newUser = { ...user, ...newProfilePicture };\r\n                console.log(newUser);\r\n                // update group in database\r\n                const res = await axios.put(\"/api/users/\" + user._id, {\r\n                  profilePicture: trimImageUrl,\r\n                });\r\n                if (res.status === 200) {\r\n                  const tempProfilePic = user.profilePicture;\r\n                  dispatch({\r\n                    type: \"UPDATE\",\r\n                    payload: { user: newUser, sock: sockio },\r\n                  });\r\n                  setIsUpdatingPicture(false);\r\n                  //delete the old picture only after new picture updated to database and updated to Context object\r\n                  //delete only if previously there is image\r\n                  if (tempProfilePic && tempProfilePic !== \"\") {\r\n                    try {\r\n                      const imageRef = storage.refFromURL(PF + tempProfilePic);\r\n                      await imageRef.delete();\r\n                    } catch (error) {\r\n                      console.log(error);\r\n                    }\r\n                  }\r\n                }\r\n              } catch (error) {\r\n                console.log(error);\r\n                setIsUpdatingPicture(false);\r\n              }\r\n            }\r\n          );\r\n        } catch (err) {\r\n          console.log(err);\r\n          setIsUpdatingPicture(false);\r\n        }\r\n      };\r\n\r\n      await updatePicture();\r\n      setImgFile(null);\r\n    }\r\n  };\r\n\r\n  //Below is for Form Control for password\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    //if error exists, remove them from the error object\r\n    if (!!errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    }\r\n\r\n    if (passwordUpdateValid) {\r\n      setPasswordUpdateValid(false);\r\n    }\r\n  };\r\n\r\n  //handles Password submit\r\n  const handleSubmitPassword = async (e) => {\r\n    e.preventDefault();\r\n    setPasswordUpdateValid(false);\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      const updatePassword = async () => {\r\n        try {\r\n          setisUpdatingPassword(true);\r\n          const res = await axios.put(\"/api/auth/updatePassword/\" + user._id, {\r\n            currentPassword: form.currentPassword,\r\n            newPassword: form.newPassword,\r\n          });\r\n          if (\r\n            res &&\r\n            res.status === 200 &&\r\n            res.data.message === \"User password has been updated\"\r\n          ) {\r\n            setPasswordUpdateValid(true);\r\n            setForm({\r\n              showPassword: false,\r\n              confirmPassword: \"\",\r\n              newPassword: \"\",\r\n              currentPassword: \"\",\r\n            });\r\n            setisUpdatingPassword(false);\r\n            alert(\"password updated\");\r\n          } else if (\r\n            res &&\r\n            res.status === 200 &&\r\n            res.data.message === \"wrong password\"\r\n          ) {\r\n            const wrongPasswordError = { currentPassword: \"Wrong Password!\" };\r\n            setErrors({\r\n              ...errors,\r\n              ...wrongPasswordError,\r\n            });\r\n            setisUpdatingPassword(false);\r\n            alert(\"wrong password\");\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          setisUpdatingPassword(false);\r\n        }\r\n      };\r\n      await updatePassword();\r\n    }\r\n  };\r\n\r\n  //function for finding errors in password form\r\n  const findFormErrors = () => {\r\n    const { currentPassword, newPassword, confirmPassword } = form;\r\n    const newErrors = {};\r\n\r\n    if (!currentPassword || currentPassword === \"\") {\r\n      newErrors.currentPassword = \"Current password cannot be empty!\";\r\n    }\r\n\r\n    if (!newPassword || newPassword.length < 6) {\r\n      newErrors.newPassword = \"New password must have at least 6 characters!\";\r\n    }\r\n\r\n    if (!confirmPassword || confirmPassword !== newPassword) {\r\n      newErrors.confirmPassword = \"New and confirm passwords do not match!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"settingsContainer\">\r\n        <SideBar sidebarUser={user} />\r\n        <div className=\"settingsRight\">\r\n          <span className=\"settingsHeader\">Settings</span>\r\n          <Container className=\"settingsWrapper\">\r\n            <Card\r\n              style={{ width: \"60em\", height: \"19em\" }}\r\n              className=\"settingsUserProfileContainer shadow p-3 mb-5 bg-white rounded\"\r\n            >\r\n              <span className=\"settingsUserProfileHeader\">User Profile</span>\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <img\r\n                      src={\r\n                        imgFile && imgFile.preview\r\n                          ? imgFile.preview\r\n                          : user && user.profilePicture\r\n                          ? PF + user.profilePicture\r\n                          : EMPTY_USER_PROFILE\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"userProfileImg\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"settingsImgInstructions\">\r\n                      <div className=\"settingsImgInstructionsText\">\r\n                        Upload a profile picture of yourself to help others know\r\n                        more about you!\r\n                      </div>\r\n                      <Form.Group>\r\n                        <Form.Control\r\n                          className=\"imgUploadButton\"\r\n                          as=\"input\"\r\n                          name=\"image-upload\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={imageHandler}\r\n                          isInvalid={!!imgError.imgFile}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {imgError.imgFile}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Button\r\n                        className=\"changeProfilePictureButton\"\r\n                        variant=\"warning\"\r\n                        onClick={handleChangePicture}\r\n                        disabled={isUpdatingPicture}\r\n                      >\r\n                        {isUpdatingPicture ? (\r\n                          <CircularProgress color=\"white\" size=\"20px\" />\r\n                        ) : (\r\n                          \"Change profile picture\"\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                    {/* <div>{user.profilePicture}</div> */}\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Card>\r\n            <Card\r\n              style={{ width: \"60em\" }}\r\n              className=\"settingsPasswordContainer shadow p-3 mb-5 bg-white rounded\"\r\n            >\r\n              <span className=\"settingsPasswordHeader\">Password</span>\r\n              <Form>\r\n                <div className=\"passwordInputWrapper\">\r\n                  <Form.Group controlId=\"oldPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"currentPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"Current Password\"\r\n                      value={form.currentPassword}\r\n                      onChange={(e) =>\r\n                        setField(\"currentPassword\", e.target.value)\r\n                      }\r\n                      isInvalid={!!errors.currentPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.currentPassword}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"newPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"newPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"New Password\"\r\n                      value={form.newPassword}\r\n                      onChange={(e) => setField(\"newPassword\", e.target.value)}\r\n                      isInvalid={!!errors.newPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.newPassword}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"confirmPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"Confirm Password\"\r\n                      value={form.confirmPassword}\r\n                      onChange={(e) =>\r\n                        setField(\"confirmPassword\", e.target.value)\r\n                      }\r\n                      isInvalid={!!errors.confirmPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.confirmPassword}\r\n                    </Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"valid\">\r\n                      \"Password updated successfully\"\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={form.showPassword}\r\n                    onClick={() => setField(\"showPassword\", !form.showPassword)}\r\n                  />\r\n                  <label className=\"checkboxLabel\">Show input</label>\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    className=\"passwordButton\"\r\n                    variant=\"warning\"\r\n                    onClick={handleSubmitPassword}\r\n                    disabled={isUpdatingPassword}\r\n                  >\r\n                    {isUpdatingPassword ? (\r\n                      <CircularProgress color=\"white\" size=\"20px\" />\r\n                    ) : (\r\n                      \"Update password\"\r\n                    )}\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./groupSidebar.css\";\r\nimport {\r\n  CDBSidebar,\r\n  CDBSidebarContent,\r\n  CDBSidebarFooter,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n} from \"cdbreact\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { storage } from \"../../firebase\";\r\n\r\nexport default function GroupSidebar({\r\n  group,\r\n  isGroupMember,\r\n  handleLeave,\r\n  handleJoin,\r\n  handleUpdateGroup,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_GROUP_IMAGE = process.env.REACT_APP_PUBLIC_FOLDER_NOIMAGEUPLOADED;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [showInviteInput, setShowInviteInput] = useState(false);\r\n  const [newImgLink, setNewImgLink] = useState(null);\r\n  const [inviteError, setInviteError] = useState(\"\");\r\n  const [inviteNameInput, setInviteNameInput] = useState(\"\");\r\n  const [inviteSuccess, setInviteSuccess] = useState(\"\");\r\n  const [editedDescription, setEditedDescription] = useState(\"\"); //the text to be shown in the textarea during edit of description\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n      setEditedDescription(\r\n        group.description + \"(Delete this and press 'Enter' when done editing)\"\r\n      );\r\n    }\r\n  }, [group]);\r\n\r\n  const handleInviteButton = () => {\r\n    showInviteInput ? setShowInviteInput(false) : setShowInviteInput(true);\r\n  };\r\n\r\n  const handleKeyDownInvite = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setInviteNameInput(inviteNameInput);\r\n      if ((inviteNameInput.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"invitation name is empty!\");\r\n        setInviteNameInput(\"\");\r\n      } else {\r\n        console.log(\"trying to find user to invite...\");\r\n        try {\r\n          const res = await axios.get(\"/api/users?username=\" + inviteNameInput);\r\n          if (res.status === 200 && group && res.data) {\r\n            if (group.members.includes(res.data._id)) {\r\n              setInviteError(\"User already in this group!\");\r\n            } else {\r\n              //get the notification with this group and user first\r\n              const getNotiRes = await axios.get(\r\n                \"/api/notifications/filter?userId=\" +\r\n                  res.data._id +\r\n                  \"&invitationId=\" +\r\n                  group._id\r\n              );\r\n              //If notification exist, check if the notification senderNames contain current user, setError if yes, update notification otherwise\r\n              if (getNotiRes.status === 200 && getNotiRes.data.length > 0) {\r\n                if (getNotiRes.data[0].senderName.includes(user.username)) {\r\n                  setInviteError(\r\n                    \"User previously invited and has not responded!\"\r\n                  );\r\n                } else {\r\n                  const updateNotiRes = await axios.put(\r\n                    \"/api/notifications/\" +\r\n                      getNotiRes.data[0]._id +\r\n                      \"/addSender/\" +\r\n                      user.username\r\n                  );\r\n                  if (updateNotiRes.status === 200) {\r\n                    setInviteNameInput(\"\");\r\n                    setInviteSuccess(\"Invitation sent!\");\r\n                  } else {\r\n                    setInviteError(\"Server error. Unable to send notification\");\r\n                  }\r\n                }\r\n              } else {\r\n                //Else if notification does not exist, do the below\r\n                const newNotification = {\r\n                  senderName: [user.username],\r\n                  receiverId: res.data._id,\r\n                  invitationId: group._id,\r\n                  invitationName: group.groupName,\r\n                };\r\n                const notificationRes = await axios.post(\r\n                  \"/api/notifications\",\r\n                  newNotification\r\n                );\r\n                if (notificationRes.status === 200) {\r\n                  setInviteNameInput(\"\");\r\n                  setInviteSuccess(\"Invitation sent!\");\r\n                } else {\r\n                  setInviteError(\"Server error. Unable to send notification\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          setInviteError(\"User not found!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDownDescription = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setEditedDescription(editedDescription);\r\n      if ((editedDescription.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"editedDescription is empty!\");\r\n        setDescriptionError(\"Description cannot be empty!\");\r\n        return;\r\n      }\r\n      if (editedDescription.length > 200) {\r\n        setDescriptionError(\"Description cannot exceed 200 characters!\");\r\n        return;\r\n      }\r\n      try {\r\n        const newGroupDescription = {\r\n          description: editedDescription,\r\n        };\r\n        //update group in database\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id,\r\n          newGroupDescription\r\n        );\r\n        if (res.status === 200) {\r\n          setEditMode(false);\r\n          handleUpdateGroup(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setDescriptionError(\"Server error: unable to update!\");\r\n        setEditMode(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const inviteComponent = (\r\n    <div className=\"inviteComponentWrapper\">\r\n      <div className=\"inviteComponentContainer\">\r\n        <span className=\"inviteComponentText\">Who do you want to invite?</span>\r\n        <input\r\n          className=\"inviteComponentInput\"\r\n          placeholder=\"Input name and Enter...\"\r\n          maxLength=\"30\"\r\n          value={inviteNameInput}\r\n          onChange={(e) => {\r\n            setInviteNameInput(e.target.value);\r\n            if (inviteError !== \"\") {\r\n              setInviteError(\"\");\r\n            }\r\n            if (inviteSuccess !== \"\") {\r\n              setInviteSuccess(\"\");\r\n            }\r\n          }}\r\n          onKeyDown={handleKeyDownInvite}\r\n        />\r\n        <div className=\"inviteComponentErrorMessage\">{inviteError}</div>\r\n        <div className=\"inviteComponentSuccessMessage\">{inviteSuccess}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handleClickGroupPicture = () => {\r\n    if (user && group && user._id === group.creatorId) {\r\n      alert(\"Close this dialogue and select image to upload\");\r\n      document.getElementById(\"groupImageUploadInput\").click();\r\n    } else {\r\n      alert(\r\n        \"You must be logged in and be the creator of this group to change the group photo\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUploadGroupImage = async (e) => {\r\n    if (e.target.files[0]) {\r\n      const imageFile = e.target.files[0];\r\n      console.log(imageFile);\r\n      try {\r\n        // const data = new FormData();\r\n        // data.append(\"file\", imageFile);\r\n        //upload picture to storage and get new filename\r\n        // const uploadFileRes = await axios.post(\"/api/upload/group\", data);\r\n        // if (uploadFileRes.status === 200 && group) {\r\n        //   const newGroupPicture = {\r\n        //     groupImg: uploadFileRes.data.imagePath,\r\n        //   };\r\n        //   console.log(newGroupPicture);\r\n        //   //update group in database\r\n        //   const res = await axios.put(\r\n        //     \"/api/groups/\" + group._id,\r\n        //     newGroupPicture\r\n        //   );\r\n        //   if (res.status === 200) {\r\n        //     setNewImgLink(uploadFileRes.data.imagePath);\r\n        //   }\r\n        // }\r\n\r\n        //newly added\r\n\r\n        const imageFileName = Date.now() + imageFile.name;\r\n        console.log(\"filename is: \" + imageFileName);\r\n        const uploadTask = storage.ref(`group/${imageFileName}`).put(imageFile);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress = Math.round(\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            );\r\n            console.log(\"progress is: \" + progress.toString());\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n          },\r\n          async () => {\r\n            //get download url and upload the post info\r\n            const imageUrl = await storage\r\n              .ref(\"group\")\r\n              .child(`${imageFileName}`)\r\n              .getDownloadURL();\r\n            const trimImageUrl = imageUrl.replace(PF, \"\");\r\n            console.log(trimImageUrl);\r\n            const newGroupPicture = {\r\n              groupImg: trimImageUrl,\r\n            };\r\n\r\n            console.log(newGroupPicture);\r\n            //update group in database\r\n            const res = await axios.put(\r\n              \"/api/groups/\" + group._id,\r\n              newGroupPicture\r\n            );\r\n            if (res.status === 200) {\r\n              const tempNewImgLink = newImgLink;\r\n              setNewImgLink(trimImageUrl);\r\n              //delete the picture only if new picture successfully registered in database\r\n              if (\r\n                (tempNewImgLink && tempNewImgLink !== \"\") ||\r\n                (group && group.groupImg !== \"\")\r\n              ) {\r\n                try {\r\n                  var oldImageRef;\r\n                  if (tempNewImgLink && tempNewImgLink !== \"\") {\r\n                    console.log(\"taking newImgLink\");\r\n                    oldImageRef = storage.refFromURL(PF + tempNewImgLink);\r\n                  } else {\r\n                    console.log(\"taking groupImg link\");\r\n                    oldImageRef = storage.refFromURL(PF + group.groupImg);\r\n                  }\r\n                  await oldImageRef.delete();\r\n                } catch (error) {\r\n                  console.log(error);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        );\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGroupHome = () => {\r\n    if (group) {\r\n      history.push(\"/groups/\" + group._id + \"/main\");\r\n    }\r\n  };\r\n\r\n  const handleMyPosts = () => {\r\n    if (group) {\r\n      history.push(\"/groups/\" + group._id + \"/myPosts\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"GroupSidebarWrapper\">\r\n      <CDBSidebar textColor=\"black\" backgroundColor=\"#FFD68D\">\r\n        <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n          <div className=\"groupProfileDiv\">\r\n            <img\r\n              className=\"groupProfile\"\r\n              src={\r\n                newImgLink\r\n                  ? PF + newImgLink //removed PF for now\r\n                  : group?.groupImg\r\n                  ? PF + group.groupImg\r\n                  : NO_GROUP_IMAGE\r\n              }\r\n              alt=\"\"\r\n              onClick={handleClickGroupPicture}\r\n            />\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              id=\"groupImageUploadInput\"\r\n              accept=\"image/*\"\r\n              onChange={handleUploadGroupImage}\r\n            />\r\n          </div>\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarHeader style={{ textAlign: \"center\" }}>\r\n          <div className=\"groupNameWrapper\">\r\n            <div className=\"groupName\">\r\n              <span className=\"groupNameText\">\r\n                {group?.groupName ? group.groupName : \"No Group Name\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {isGroupMember ? (\r\n            <div>\r\n              <div className=\"groupInviteButtonWrapper\">\r\n                <div className=\"groupInviteButton\" onClick={handleInviteButton}>\r\n                  <span className=\"groupInviteButtonText\">+ Invite</span>\r\n                </div>\r\n\r\n                {/* {showInviteInput ? inviteComponent : <></>} */}\r\n              </div>\r\n              <div>{showInviteInput ? inviteComponent : <></>}</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"groupJoinButtonWrapper\">\r\n              <div className=\"groupJoinButton\" onClick={handleJoin}>\r\n                <span className=\"groupJoinButtonText\">+ Join Group</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarContent>\r\n          <CDBSidebarMenu>\r\n            <div className=\"groupDescriptionContainer\">\r\n              <div className=\"groupDescriptionHeader\">\r\n                <div className=\"groupDescriptionHeaderText\">\r\n                  Group Description:\r\n                </div>\r\n                {user && group && user._id === group.creatorId && !editMode ? (\r\n                  <div\r\n                    className=\"groupDescriptionHeaderEdit\"\r\n                    onClick={() => setEditMode(true)}\r\n                  >\r\n                    edit\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              {editMode ? (\r\n                <>\r\n                  <textarea\r\n                    className=\"groupDescriptionTextArea\"\r\n                    rows={6}\r\n                    value={editedDescription}\r\n                    onChange={(e) => {\r\n                      if (descriptionError !== \"\") {\r\n                        setDescriptionError(\"\");\r\n                      }\r\n                      setEditedDescription(e.target.value);\r\n                    }}\r\n                    onKeyDown={handleKeyDownDescription}\r\n                  />\r\n                  <div className=\"groupDescriptionError\">\r\n                    {descriptionError}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"groupDescriptionContent\">\r\n                  {group?.description\r\n                    ? group.description\r\n                    : \"This group creator has left no description of this group\"}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CDBSidebarMenuItem\r\n              className=\"groupMenuItem\"\r\n              onClick={handleGroupHome}\r\n            >\r\n              <HomeIcon className=\"groupMyPostsIcon\" />\r\n              <span className=\"groupMyPosts\">Group Home</span>\r\n            </CDBSidebarMenuItem>\r\n            {isGroupMember ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"groupMenuItem\"\r\n                onClick={handleMyPosts}\r\n              >\r\n                <CreateIcon className=\"groupMyPostsIcon\" />\r\n                <span className=\"groupMyPosts\">My Posts</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </CDBSidebarMenu>\r\n        </CDBSidebarContent>\r\n        <CDBSidebarFooter>\r\n          {isGroupMember ? (\r\n            <div className=\"groupLeaveButtonWrapper\">\r\n              <div className=\"groupLeaveButton\" onClick={handleLeave}>\r\n                <span className=\"groupLeaveButtonText\">Leave Group</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </CDBSidebarFooter>\r\n      </CDBSidebar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./groupSharePost.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function GroupSharePost({ handleAdd }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [itemId, setItemId] = useState(\"\");\r\n  const [itemError, setItemError] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n\r\n  const handlePost = async () => {\r\n    if ((itemId.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      setItemError(\"Item ID cannot be empty!\");\r\n      return;\r\n    }\r\n    if ((description.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      setDescriptionError(\"Description cannot be empty!\");\r\n      return;\r\n    }\r\n    console.log(\"itemId: \" + itemId);\r\n    console.log(\"description: \" + description);\r\n    try {\r\n      const findItemRes = await axios.get(\"/api/items?itemId=\" + itemId);\r\n      if (!findItemRes.data) {\r\n        setItemError(\"Item with given Item ID does not exist!\");\r\n        return;\r\n      }\r\n      if (!user || findItemRes.data.userId !== user._id) {\r\n        setItemError(\"Item with given ID does not belong to you!\");\r\n        return;\r\n      }\r\n      const itemIdTemp = itemId;\r\n      const descriptionTemp = description;\r\n      setItemId(\"\");\r\n      setDescription(\"\");\r\n      handleAdd(itemIdTemp, descriptionTemp);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setItemError(\"Item with given Item ID does not exist!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupSharePostWrapper\">\r\n      <div className=\"groupSharePostContainer\">\r\n        <div className=\"sharePostTop\">\r\n          <div className=\"sharePostTopContainer\">\r\n            <img\r\n              className=\"sharePostProfileImg\"\r\n              src={user?.profilePicture ? PF + user.profilePicture : NO_AVATAR}\r\n              alt=\"\"\r\n            />\r\n            <span className=\"sharePostProfileText\">\r\n              {user?.username ? user.username : \"No Name\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"sharePostContainer\">\r\n          <div className=\"sharePostContainerWrapper\">\r\n            <div className=\"sharePostContainerTop\">\r\n              <div className=\"sharePostContainerItemId\">\r\n                <input\r\n                  value={itemId}\r\n                  maxlength=\"30\"\r\n                  onChange={(e) => {\r\n                    setItemId(e.target.value);\r\n                    if (itemError !== \"\") {\r\n                      setItemError(\"\");\r\n                    }\r\n                  }}\r\n                  className=\"sharePostContainerItemIdInput\"\r\n                  placeholder=\"Item ID (can be copied from items page)\"\r\n                />\r\n                <span className=\"sharePostContainerErrorMessage\">\r\n                  {itemError}\r\n                </span>\r\n              </div>\r\n              <div className=\"sharePostButton\" onClick={handlePost}>\r\n                Post\r\n              </div>\r\n            </div>\r\n            <div className=\"sharePostContainerTextArea\">\r\n              <textarea\r\n                value={description}\r\n                maxlength=\"1000\"\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  if (descriptionError !== \"\") {\r\n                    setDescriptionError(\"\");\r\n                  }\r\n                }}\r\n                className=\"sharePostContainerTextAreaInput\"\r\n                placeholder=\"Describe your post...\"\r\n              />\r\n              <span className=\"sharePostContainerErrorMessage\">\r\n                {descriptionError}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./comment.css\";\r\n\r\nexport default function Comment({\r\n  commentText,\r\n  commentUserId,\r\n  own,\r\n  handleDelete,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const [commentUser, setCommentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getCommentUser = async () => {\r\n      try {\r\n        const res = await axios(\"/api/users?userId=\" + commentUserId);\r\n        await setCommentUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getCommentUser();\r\n  }, [commentUserId]);\r\n\r\n  return (\r\n    <div className=\"commentWrapper\">\r\n      <div className=\"commentContainer\">\r\n        <div className=\"commentUserDetails\">\r\n          <img\r\n            className=\"commentProfileImg\"\r\n            src={\r\n              commentUser && commentUser.profilePicture\r\n                ? PF + commentUser.profilePicture\r\n                : NO_AVATAR\r\n            }\r\n            alt=\"\"\r\n          />\r\n          <span className=\"commentProfileText\">\r\n            {commentUser?.username ? commentUser.username : \"No Name\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"commentUserContent\">{commentText}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./post.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport TextsmsOutlinedIcon from \"@material-ui/icons/TextsmsOutlined\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport ItemListing from \"../itemListing/ItemListing\";\r\nimport Comment from \"../comment/Comment\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Post({ post, handleDelete, canCommentAndLike }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const NO_AVATAR = process.env.REACT_APP_PUBLIC_FOLDER_NOAVATAR;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [postUser, setPostUser] = useState(null);\r\n  const [postComments, setPostComments] = useState([]);\r\n  const [postItem, setPostItem] = useState(null);\r\n  const [incomingComment, setIncomingComment] = useState(\"\");\r\n  const [liked, setLiked] = useState(false);\r\n  const [displayLikeCount, setDisplayLikeCount] = useState(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getPostUser = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?userId=\" + post?.postUserId);\r\n        await setPostUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostUser();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const getPostComments = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/comments/filter?postId=\" + post?._id);\r\n        await setPostComments(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostComments();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const getPostItem = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/items?itemId=\" + post?.itemId);\r\n        await setPostItem(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostItem();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setDisplayLikeCount(post.likedBy.length);\r\n      if (user) {\r\n        setLiked(post.likedBy.includes(user._id));\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n    }\r\n  }, [post, user]);\r\n\r\n  //handles new comment when user press enter\r\n  const handleKeyDownComment = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setIncomingComment(incomingComment);\r\n      if ((incomingComment.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"comment is empty!\");\r\n        setIncomingComment(\"\");\r\n      } else {\r\n        console.log(\"adding new comment...\");\r\n        const newComment = {\r\n          postId: post._id,\r\n          commentUserId: user._id,\r\n          commentText: incomingComment,\r\n        };\r\n        try {\r\n          setIncomingComment(\"\");\r\n          const res = await axios.post(\"/api/comments\", newComment);\r\n          await setPostComments([...postComments, res.data]);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //handles the event when user clicks swapAway\r\n  const handleSwapAway = async () => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n      console.log(\"pushed to login\");\r\n    } else {\r\n      const res = await axios.get(\r\n        \"/api/conversations/find/\" + user._id + \"/\" + post.postUserId\r\n      );\r\n      if (res.data.length > 0) {\r\n        history.push(\"/chat/\" + res.data[0]._id);\r\n        console.log(\"pushed to chat id:\" + res.data[0]._id);\r\n      } else {\r\n        const newConvo = await axios.post(\"/api/conversations\", {\r\n          members: [post.postUserId, user._id],\r\n        });\r\n        //chatFollow is not used for now\r\n        history.push(\"/chat/\" + newConvo._id); //likely works but needs to be tested\r\n        console.log(newConvo.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  //handles like and dislike\r\n  const handleDislike = async () => {\r\n    if (canCommentAndLike) {\r\n      setLiked(false);\r\n      setDisplayLikeCount(displayLikeCount - 1);\r\n      try {\r\n        const res = await axios.put(\r\n          \"/api/posts/\" + post._id + \"/removeLike/\" + user?._id\r\n        );\r\n        // if (res.status === 200) {\r\n        // }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You cannot dislike this post as you are either not logged in or not a member of this group!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLike = async () => {\r\n    if (canCommentAndLike) {\r\n      setLiked(true);\r\n      setDisplayLikeCount(displayLikeCount + 1);\r\n      try {\r\n        const res = await axios.put(\r\n          \"/api/posts/\" + post._id + \"/addLike/\" + user?._id\r\n        );\r\n        // if (res.status === 200) {\r\n        // }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You cannot like this post as you are either not logged in or not a member of this group!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    if (postUser) {\r\n      history.push(\"/profile/\" + postUser.username + \"/listings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"postWrapper\">\r\n      <div className=\"postContainer\">\r\n        <div className=\"postTop\">\r\n          {/* <div className=\"postTopContainer\"> */}\r\n          <Row className=\"postTopContainerWrapper\">\r\n            <Col className=\"postTopContainerLeft\">\r\n              <img\r\n                className=\"postProfileImg\"\r\n                src={\r\n                  postUser && postUser.profilePicture\r\n                    ? PF + postUser.profilePicture\r\n                    : NO_AVATAR\r\n                }\r\n                alt=\"\"\r\n                onClick={handleViewProfile}\r\n              />\r\n              <span className=\"postProfileText\">\r\n                {postUser?.username ? postUser.username : \"No Name\"}\r\n              </span>\r\n            </Col>\r\n            <Col className=\"postTopContainerRight\">\r\n              {user && user._id === post.postUserId ? (\r\n                <div className=\"deleteButtonWrapper\">\r\n                  <div\r\n                    className=\"deleteButton\"\r\n                    onClick={() => handleDelete(post._id)}\r\n                  >\r\n                    <span className=\"deleteButtonText\">Delete</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"postSwapButtonWrapper\">\r\n                  <div className=\"postSwapButton\" onClick={handleSwapAway}>\r\n                    <TextsmsOutlinedIcon className=\"chatIcon\" />\r\n                    <span className=\"postSwapButtonText\">Swap Away!</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"postMiddle\">\r\n          <div className=\"postMiddleDescription\">\r\n            <div className=\"postMiddleDescriptionContainer\">\r\n              {post?.description\r\n                ? post.description\r\n                : \"No description available\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"postMiddleItemListing\">\r\n            <ItemListing item={postItem} inPost={true} />\r\n          </div>\r\n          <div className=\"postMiddleItemLikesComments\">\r\n            <div className=\"postMiddleItemLikesCommentsContainer\">\r\n              <div className=\"postMiddleItemLikes\">\r\n                {liked ? (\r\n                  <FavoriteIcon onClick={handleDislike} />\r\n                ) : (\r\n                  <FavoriteBorderIcon onClick={handleLike} />\r\n                )}\r\n                <span className=\"numberLikes\">{displayLikeCount}</span>\r\n              </div>\r\n              <div className=\"postMiddleItemComments\">\r\n                <ChatBubbleOutlineIcon />\r\n                <span className=\"numberComments\">{postComments.length}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          {canCommentAndLike && (\r\n            <div className=\"postCommentInputWrapper\">\r\n              <textarea\r\n                value={incomingComment}\r\n                onChange={(e) => setIncomingComment(e.target.value)}\r\n                onKeyDown={handleKeyDownComment}\r\n                className=\"postCommentInput\"\r\n                placeholder=\"Write a comment and press enter to send...\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"postCommentContentSection\">\r\n            {postComments.map((comment) => (\r\n              <Comment\r\n                commentText={comment.commentText}\r\n                commentUserId={comment.commentUserId}\r\n                key={comment._id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./group.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport GroupSidebar from \"../../components/groupSidebar/GroupSidebar\";\r\nimport GroupSharePost from \"../../components/groupSharePost/GroupSharePost\";\r\nimport Post from \"../../components/post/Post\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Group() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const groupId = useParams().groupId;\r\n  const pageType = useParams().pageType;\r\n  const [displayPosts, setDisplayPosts] = useState([]);\r\n  const [group, setGroup] = useState(null);\r\n  const [isGroupMember, setIsGroupMember] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getGroup = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/groups?groupId=\" + groupId);\r\n        await setGroup(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getGroup();\r\n  }, [groupId]);\r\n\r\n  useEffect(() => {\r\n    if (group && user) {\r\n      setIsGroupMember(group.members.includes(user._id));\r\n    }\r\n  }, [group, user]);\r\n\r\n  useEffect(() => {\r\n    const getDisplayPosts = async () => {\r\n      try {\r\n        if (pageType === \"main\") {\r\n          console.log(\"page type is main\");\r\n          const res = await axios.get(\"/api/posts/filter?groupId=\" + groupId);\r\n          await setDisplayPosts(res.data);\r\n        } else if (pageType === \"myPosts\") {\r\n          console.log(\"page type is myPosts\");\r\n          const res = await axios.get(\r\n            \"/api/posts/filter?groupId=\" + groupId + \"&userId=\" + user?._id\r\n          );\r\n          await setDisplayPosts(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getDisplayPosts();\r\n  }, [pageType, groupId, user]);\r\n\r\n  const handleUpdateGroupNotification = (group) => {\r\n    if (group && group.length > 0 && group[0] && user) {\r\n      setIsGroupMember(group[0].members.includes(user._id));\r\n    }\r\n  };\r\n\r\n  //passed into Post component to delete post\r\n  const handleDelete = async (postId) => {\r\n    try {\r\n      console.log(\"deleting post with id: \" + postId); //60f7f6e319807816605c790c\r\n      const res = await axios.delete(\"/api/posts?postId=\" + postId);\r\n      if (res.status === 200) {\r\n        console.log(res.data.message);\r\n        setDisplayPosts(displayPosts.filter((post) => post._id !== postId));\r\n        await axios.delete(\"/api/comments/filter?postId=\" + postId); //delete all comments of this post from database at last to avoid waiting\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //passed into GroupSharePost component to add post\r\n  const handleAdd = async (itemId, description) => {\r\n    try {\r\n      if (group && user) {\r\n        const newPost = {\r\n          groupId: group._id,\r\n          postUserId: user._id,\r\n          description: description,\r\n          itemId: itemId,\r\n        };\r\n        console.log(newPost);\r\n        const res = await axios.post(\"/api/posts\", newPost);\r\n        if (res.status === 200) {\r\n          setDisplayPosts([res.data, ...displayPosts]);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //passed into GroupSideBar to change isGroupMember and update database\r\n  const handleLeave = async () => {\r\n    //try without updating the group\r\n    try {\r\n      if (group && user) {\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id + \"/removeMember/\" + user._id\r\n        );\r\n        if (res.status === 200) {\r\n          setIsGroupMember(false);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    try {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n      if (group && user) {\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id + \"/addMember/\" + user._id\r\n        );\r\n        if (res.status === 200) {\r\n          setIsGroupMember(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdateGroup = (group) => {\r\n    if (group) {\r\n      setGroup(group);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"groupPageTop\">\r\n        <TopBar\r\n          currentUser={user}\r\n          handleUpdateGroup={handleUpdateGroupNotification}\r\n        />\r\n      </div>\r\n      <div className=\"groupPageContainer\">\r\n        <div className=\"groupSidebarWrapper\">\r\n          <GroupSidebar\r\n            className=\"groupSidebarComponent\"\r\n            group={group}\r\n            isGroupMember={isGroupMember}\r\n            handleLeave={handleLeave}\r\n            handleJoin={handleJoin}\r\n            handleUpdateGroup={handleUpdateGroup}\r\n          />\r\n        </div>\r\n        <div className=\"groupPageContainerRight\">\r\n          <div className=\"groupPagecontainerRightShareWrapper\">\r\n            {group && user && isGroupMember && pageType === \"main\" ? (\r\n              <GroupSharePost handleAdd={handleAdd} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          {displayPosts.map((post) => (\r\n            <Post\r\n              post={post}\r\n              key={post._id}\r\n              handleDelete={handleDelete}\r\n              canCommentAndLike={group && user && isGroupMember}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport GroupIcon from \"../../components/groupIcon/GroupIcon\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./groupList.css\";\r\n\r\nexport default function GroupList() {\r\n  const searchText = useParams().searchText;\r\n  const [groups, setGroups] = useState([]);\r\n  const { user, sockio } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const getGroups = async () => {\r\n      try {\r\n        if (searchText) {\r\n          const res = await axios.get(\"/api/groups?search=\" + searchText);\r\n          await setGroups(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getGroups();\r\n  }, [searchText]);\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"productWrapper\">\r\n        <div className=\"productHeader\">\r\n          {searchText ? \"Search results for: \" + searchText : \"\"}\r\n        </div>\r\n        <Row className=\"listingRow\" xl={5} lg={4} md={3} sm={2}>\r\n          {groups.map((group) => (\r\n            <div>\r\n              <GroupIcon\r\n                key={group._id}\r\n                groupImg={group.groupImg}\r\n                groupName={group.groupName}\r\n                groupId={group._id}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Register from \"./pages/register/Register\";\r\nimport UserListing from \"./pages/userlisting/UserListing\";\r\nimport Review from \"./pages/review/Review\";\r\nimport Product from \"./pages/product/Product\";\r\nimport CreateListing from \"./pages/createListing/CreateListing\";\r\nimport Item from \"./pages/item/Item\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./pages/login/Login\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport Chat from \"./pages/chat/Chat\";\r\nimport MyGroups from \"./pages/myGroups/MyGroups\";\r\nimport Settings from \"./pages/settings/Settings\";\r\nimport Group from \"./pages/group/Group\";\r\nimport GroupList from \"./pages/groupList/GroupList\";\r\n\r\nfunction App() {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  /*TODO:\r\n  7. show notification count\r\n  9. Change storage system to online storage\r\n  */\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {user ? <Redirect to=\"/home\" /> : <Login />}\r\n          {/* {user ? <Group /> : <Group />} */}\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          {user ? <Redirect to=\"/home\" /> : <Register />}\r\n        </Route>\r\n        <Route exact path=\"/product/:pageType/:categoryName\">\r\n          <Product />\r\n        </Route>\r\n        <Route exact path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/create\">\r\n          {user ? <CreateListing /> : <Login />}\r\n        </Route>\r\n        <Route exact path=\"/chat/:initialActiveConvoId\">\r\n          {user ? <Chat /> : <Login />}\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/listings\">\r\n          <UserListing />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/reviews\">\r\n          <Review />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/settings\">\r\n          <Settings />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/mygroups\">\r\n          <MyGroups />\r\n        </Route>\r\n        <Route exact path=\"/items/:itemId\">\r\n          <Item />\r\n        </Route>\r\n        {/* GroupList path must be written before Group */}\r\n        <Route exact path=\"/groups/search/:searchText\">\r\n          <GroupList />\r\n        </Route>\r\n        <Route exact path=\"/groups/:groupId/:pageType\">\r\n          <Group />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { AuthContextProvider } from \"./context/AuthContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}