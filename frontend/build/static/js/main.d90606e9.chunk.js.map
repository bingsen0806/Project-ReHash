{"version":3,"sources":["components/notification/Notification.js","components/topbar/TopBar.js","components/itemlistsTangible/ItemListsTangible.js","components/itemlistsIntangible/ItemListsIntangible.js","components/ads/Ads.js","context/AuthReducer.js","context/AuthContext.js","components/groupIcon/GroupIcon.js","components/groupIconContainer/GroupIconContainer.js","pages/home/Home.js","pages/register/Register.jsx","components/sidebar/SideBar.js","components/itemListing/ItemListing.js","components/star/Star.jsx","components/RatingIcon/RatingIcon.jsx","components/userReview/UserReview.jsx","pages/userlisting/UserListing.js","pages/review/Review.js","pages/product/Product.js","pages/createListing/CreateListing.js","components/singleItem/SingleItem.js","components/swapAway/SwapAway.js","components/userItemCommand/UserItemCommand.js","pages/item/Item.js","pages/login/Login.jsx","components/conversation/Conversation.jsx","components/message/Message.jsx","pages/chat/Chat.jsx","pages/myGroups/MyGroups.js","pages/settings/Settings.js","components/groupSidebar/GroupSidebar.js","components/groupSharePost/GroupSharePost.js","components/comment/Comment.jsx","components/post/Post.jsx","pages/group/Group.js","pages/groupList/GroupList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Notification","senderArray","notification","handleAccept","handleDeny","className","senderName","length","toString","invitationName","Row","Col","onClick","TopBar","currentUser","handleUpdateGroup","PF","process","history","useHistory","useState","searchText","setSearchText","userNotifications","setUserNotifications","searchType","setSearchType","useEffect","a","axios","get","_id","res","status","data","console","log","getUserNotifications","navbarNotificationTitle","htmlColor","delete","filter","noti","invitationId","put","addGroupRes","Navbar","expand","Brand","push","src","alt","Toggle","aria-controls","Collapse","id","Nav","Link","Search","placeholder","value","onChange","e","target","onKeyDown","key","preventDefault","match","name","selected","to","TextsmsOutlined","DropdownButton","variant","title","map","Dropdown","Item","username","profilePicture","ItemLists","handleClick","category","responsive","superLargeDesktop","breakpoint","max","min","items","xl","lg","md","sm","xs","Button","Accessibility","Face","SportsFootball","Home","DriveEta","Redeem","Computer","Apps","ItemListsIntangible","OutdoorGrill","Room","Forum","Fastfood","BeachAccess","SportsHandball","SportsEsports","Ads","itemArray","adItemComponent","item","img","style","width","outline","Carousel","interval","AuthReducer","state","action","type","user","isFetching","error","sockio","payload","sock","INITIAL_STATE","JSON","parse","localStorage","getItem","AuthContext","createContext","AuthContextProvider","children","useReducer","dispatch","setItem","stringify","Provider","GroupIcon","groupImg","groupName","groupId","create","useContext","newGroupName","setNewGroupName","handleCreateNewGroup","newGroup","creatorId","members","description","post","rows","GroupIconContainer","recommendedGroups","group","setRecommendedGroups","trendingSwaps","setTrendingSwaps","getRecommendedGroups","getTrendingSwaps","Register","email","setEmail","setUsername","password","setPassword","confirmPassword","setConfirmPassword","emailError","setEmailError","userError","setUserError","setIsFetching","handleCheckUsername","handleCheckEmail","handleRegister","alert","onSubmit","required","disabled","CircularProgress","color","size","SideBar","sidebarUser","handleLogOut","logoutCall","disconnect","textColor","backgroundColor","prefix","textAlign","Rating","cumulativeRating","ratedByUsers","precision","readOnly","LocalMall","SwapVert","Settings","padding","ExitToApp","ItemListing","inPost","userId","err","handleClickItem","Card","Img","Body","Title","marginRight","Chip","label","marginBottom","marginTop","idealSwaps","tags","Text","desc","Star","props","fill","class","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","RatingIcon","index","rating","hoverRating","onMouseEnter","onMouseLeave","onSaveRating","notSelected","useMemo","height","UserReview","review","doneReview","handleSubmit","handleDelete","setRating","setHoverRating","reviewer","setReviewer","reviewText","setReviewText","reviewerId","getReviewUser","UserListing","useParams","displayItems","setDisplayItems","viewingCategory","setViewingCategory","profileUser","setProfileUser","tabValue","setTabValue","getProfileUser","getDisplayItems","Container","Paper","margin","Tabs","indicatorColor","centered","Tab","Review","reviews","setReviews","alreadyReviewed","setAlreadyReviewed","myReview","setMyReview","initialCumRating","setInitialCumRating","initialRatedBy","setInitialRatedBy","filterMyReview","getReviews","getAlreadyReviewed","newReview","revieweeId","Product","categoryName","pageType","setItems","getItems","charAt","toUpperCase","slice","useStyles","makeStyles","theme","root","spacing","baseStyle","flex","display","flexDirection","alignItems","borderWidth","borderRadius","borderColor","borderStyle","transition","activeStyle","acceptStyle","rejectStyle","CreateListing","classes","files","setFiles","form","setForm","errors","setErrors","idealCategories","setIdealCategories","swapCategories","setSwapCategories","onDrop","useCallback","acceptedFiles","images","newFiles","file","Object","assign","preview","URL","createObjectURL","customFileName","Date","now","concat","allFiles","useDropzone","accept","maxFiles","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","thumbs","forEach","revokeObjectURL","setField","field","findFormErrors","tangible","newErrors","keys","newItemSwapCat","categoryObject","toLowerCase","newItemIdealSwap","FormData","i","append","uploadFileRes","newItem","imagePaths","categories","Form","Group","controlId","Control","isInvalid","fontSize","Feedback","Label","maxlength","as","hidden","Autocomplete","multiple","limitTags","options","getOptionLabel","option","newValue","renderInput","params","TextField","SingleItem","imgLinkArray","desktop","tablet","mobile","imgLink","SwapAway","itemUserId","itemUser","setItemUser","getItemUser","handleSwapAway","newConvo","Alert","Heading","UserItemCommand","itemStatus","handleReserve","handleUnreserve","handleSwap","handleUnswap","showInput","setShowInput","input","setInput","setError","handleKeyDownSwap","parties","itemId","copyLinkText","setCopyLinkText","agreementId","handleCopyLink","dummy","document","createElement","text","window","location","href","body","appendChild","select","execCommand","removeChild","marginLeft","Login","errorMessage","setErrorMessage","handleUsername","handlePassword","userCredential","io","on","emit","loginCall","position","top","left","Conversation","active","lastMessageText","lastMessageTime","online","displayTimeAgo","setDisplayTimeAgo","setUser","format","setInterval","clearInterval","getUser","Message","message","own","pictureLink","show","setShow","createdAt","Chat","conversations","setConversations","currentChat","setCurrentChat","messages","setMessages","newMessage","setNewMessage","arrivalMessage","setArrivalMessage","onlineUsers","setOnlineUsers","currentChatWith","setCurrentChatWith","currentChatWithLastActive","setCurrentChatWithLastActive","scrollRef","useRef","initialActiveConvoId","getInitialActiveConvo","sender","senderId","includes","prev","users","chatFollow","f","some","u","getConversations","getMessages","friendId","find","m","getCurrentChatWith","updateLastActive","timeago","newLastActive","lastActive","handleSendMessage","conversationId","updateRes","receiverId","member","handleGenerateAgreement","current","scrollIntoView","behavior","handleSearch","c","ref","MyGroups","myGroups","setMyGroups","getMyGroups","imgFile","setImgFile","showPassword","imgError","setImgError","passwordUpdateValid","setPasswordUpdateValid","handleChangePicture","updatePicture","newProfilePicture","imagePath","newUser","handleSubmitPassword","updatePassword","currentPassword","newPassword","wrongPasswordError","newFile","placeHolder","isValid","checked","GroupSidebar","isGroupMember","handleLeave","handleJoin","showInviteInput","setShowInviteInput","newImgLink","setNewImgLink","inviteError","setInviteError","inviteNameInput","setInviteNameInput","inviteSuccess","setInviteSuccess","editedDescription","setEditedDescription","editMode","setEditMode","descriptionError","setDescriptionError","handleKeyDownInvite","getNotiRes","newNotification","handleKeyDownDescription","newGroupDescription","inviteComponent","handleUploadGroupImage","imageFile","newGroupPicture","getElementById","click","GroupSharePost","handleAdd","setDescription","setItemId","itemError","setItemError","handlePost","findItemRes","itemIdTemp","descriptionTemp","Comment","commentText","commentUserId","commentUser","setCommentUser","getCommentUser","Post","canCommentAndLike","postUser","setPostUser","postComments","setPostComments","postItem","setPostItem","incomingComment","setIncomingComment","liked","setLiked","displayLikeCount","setDisplayLikeCount","postUserId","getPostUser","getPostComments","getPostItem","likedBy","handleKeyDownComment","newComment","postId","handleDislike","handleLike","comment","displayPosts","setDisplayPosts","setGroup","setIsGroupMember","getGroup","getDisplayPosts","newPost","GroupList","groups","setGroups","getGroups","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d90606e9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./notification.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\n\r\nexport default function Notification({\r\n  notification,\r\n  handleAccept,\r\n  handleDeny,\r\n}) {\r\n  const formatName = (senderArray) => {\r\n    if (senderArray?.length && senderArray.length === 1) {\r\n      return senderArray[0];\r\n    } else if (senderArray?.length && senderArray.length === 2) {\r\n      return senderArray[0] + \" and 1 other\";\r\n    } else if (senderArray?.length) {\r\n      return (\r\n        senderArray[0] +\r\n        \" and \" +\r\n        (senderArray.length - 1).toString() +\r\n        \" others\"\r\n      );\r\n    } else {\r\n      return \"No Name\";\r\n    }\r\n  };\r\n  //TODO: change senderName\r\n  return (\r\n    <div className=\"notiWrapper\">\r\n      <div className=\"notiContainer\">\r\n        <span className=\"notiContainerUsername\">\r\n          {notification ? formatName(notification.senderName) : \"username\"}\r\n        </span>{\" \"}\r\n        has invited you to join{\" \"}\r\n        <span className=\"notiContainerGroupName\">\r\n          {notification ? notification.invitationName : \"group name\"}\r\n        </span>\r\n        .\r\n      </div>\r\n      <Row className=\"notibuttonGroupWrapper\">\r\n        <Col>\r\n          <div\r\n            className=\"acceptButtonWrapper\"\r\n            onClick={() => {\r\n              handleAccept(notification);\r\n            }}\r\n          >\r\n            <div className=\"acceptButton\">\r\n              <span className=\"acceptButtonText\">Accept</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <div\r\n            className=\"denyButtonWrapper\"\r\n            onClick={() => handleDeny(notification)}\r\n          >\r\n            <div className=\"denyButton\">\r\n              <span className=\"denyButtonText\">Deny</span>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  DropdownButton,\r\n  Dropdown,\r\n} from \"react-bootstrap\";\r\nimport \"./topbar.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Search, TextsmsOutlined } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport Notification from \"../notification/Notification\";\r\nimport axios from \"axios\";\r\n\r\nexport default function TopBar({ currentUser, handleUpdateGroup }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const history = useHistory();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [userNotifications, setUserNotifications] = useState([]);\r\n  const [searchType, setSearchType] = useState(\"item\");\r\n\r\n  const handleClickHome = () => {\r\n    history.push(\"/home\");\r\n  };\r\n  const handleClickCreate = () => {\r\n    history.push(\"/create\");\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if ((searchText.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"search string is empty!\");\r\n      } else {\r\n        if (searchType === \"item\") {\r\n          history.push(\"/product/search/\" + searchText);\r\n        } else if (searchType === \"group\") {\r\n          history.push(\"/groups/search/\" + searchText);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getUserNotifications = async () => {\r\n      if (currentUser) {\r\n        try {\r\n          const res = await axios.get(\r\n            \"/api/notifications/filter?userId=\" + currentUser._id\r\n          );\r\n          if (res.status === 200) {\r\n            setUserNotifications(res.data);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    };\r\n    getUserNotifications();\r\n  }, [currentUser]);\r\n\r\n  const navbarNotificationTitle = (\r\n    <NotificationsIcon className=\"userNotificationIcon\" htmlColor=\"orange\" />\r\n  );\r\n\r\n  const handleAccept = async (notification) => {\r\n    // alert(\"clicked on accept!\");\r\n    if (notification && currentUser) {\r\n      try {\r\n        const deleteRes = await axios.delete(\r\n          \"/api/notifications?notificationId=\" + notification._id\r\n        );\r\n        if (deleteRes.status === 200) {\r\n          setUserNotifications(\r\n            userNotifications.filter(\r\n              (noti) => noti.invitationId !== notification.invitationId //needs test by sending two noti by diff people for same group, then accept one\r\n            )\r\n          );\r\n        }\r\n        const addGroupRes = await axios.put(\r\n          \"/api/groups/\" +\r\n            notification.invitationId +\r\n            \"/addMember/\" +\r\n            currentUser._id\r\n        );\r\n        if (addGroupRes.status === 200 && handleUpdateGroup) {\r\n          handleUpdateGroup([addGroupRes.data]);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDeny = async (notification) => {\r\n    // alert(\"clicked on deny!\");\r\n    if (notification && currentUser) {\r\n      try {\r\n        const deleteRes = await axios.delete(\r\n          \"/api/notifications?notificationId=\" + notification._id\r\n        );\r\n        if (deleteRes.status === 200) {\r\n          setUserNotifications(\r\n            userNotifications.filter((noti) => noti._id !== notification._id)\r\n          );\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"topbarWrapper fixed-top\" expand=\"lg\">\r\n      <Navbar.Brand onClick={() => handleClickHome()}>\r\n        <img className=\"ReHashLogo\" src={PF + \"ReHashLogo.png\"} alt=\"\" />\r\n        <span className=\"logoText\">ReHash</span>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\" className=\"collapseBar\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link className=\"swap\" onClick={() => handleClickCreate()}>\r\n            Swap on ReHash\r\n          </Nav.Link>\r\n          <div className=\"searchbar\">\r\n            <Search className=\"searchIcon\" />\r\n            <input\r\n              placeholder=\"Seach for groups or swap items...\"\r\n              className=\"searchInput\"\r\n              value={searchText}\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              onKeyDown={handleSearch}\r\n            />\r\n            <select\r\n              name=\"choice\"\r\n              className=\"searchInputSelect\"\r\n              value={searchType}\r\n              onChange={(e) => setSearchType(e.target.value)}\r\n            >\r\n              <option value=\"item\" selected>\r\n                item\r\n              </option>\r\n              <option value=\"group\">group</option>\r\n            </select>\r\n          </div>\r\n          <Link to=\"/chat/0\">\r\n            <TextsmsOutlined className=\"chat\" htmlColor=\"orange\" />\r\n          </Link>\r\n          {/* notification list */}\r\n          <DropdownButton\r\n            className=\"userNotification\"\r\n            variant=\"warning\"\r\n            title={navbarNotificationTitle}\r\n          >\r\n            <div className=\"userNotificationLabel\">Notifications</div>\r\n            <div className=\"userNotificationList\">\r\n              {userNotifications.length > 0 ? (\r\n                userNotifications.map((notification) => (\r\n                  <Dropdown.Item key={notification._id}>\r\n                    <Notification\r\n                      notification={notification}\r\n                      handleAccept={handleAccept}\r\n                      handleDeny={handleDeny}\r\n                    />\r\n                  </Dropdown.Item>\r\n                ))\r\n              ) : (\r\n                <div className=\"userNoNotificationsLabel\">No notifcations</div>\r\n              )}\r\n            </div>\r\n          </DropdownButton>\r\n          {/* <NotificationsIcon className=\"userNotification\" htmlColor=\"orange\"/> */}\r\n\r\n          <Link\r\n            to={\r\n              currentUser\r\n                ? \"/profile/\" + currentUser.username + \"/listings\"\r\n                : \"/\"\r\n            }\r\n          >\r\n            <img\r\n              className=\"userProfilePic\"\r\n              src={\r\n                currentUser && currentUser.profilePicture\r\n                  ? PF + currentUser.profilePicture\r\n                  : PF + \"person/noAvatar.png\"\r\n              }\r\n              alt=\"userProfile\"\r\n            />\r\n          </Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  Accessibility,\r\n  Face,\r\n  SportsFootball,\r\n  Home,\r\n  DriveEta,\r\n  Redeem,\r\n  Computer,\r\n  Apps,\r\n} from \"@material-ui/icons\";\r\nimport \"./itemlistsTangible.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemLists() {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    xl: {\r\n      breakpoint: { max: 3000, min: 1200 },\r\n      items: 6,\r\n    },\r\n    lg: {\r\n      breakpoint: { max: 1200, min: 992 },\r\n      items: 5,\r\n    },\r\n    md: {\r\n      breakpoint: { max: 992, min: 768 },\r\n      items: 4,\r\n    },\r\n    sm: {\r\n      breakpoint: { max: 768, min: 576 },\r\n      items: 3,\r\n    },\r\n    xs: {\r\n      breakpoint: { max: 576, min: 0 },\r\n      items: 2,\r\n    },\r\n  };\r\n  const history = useHistory();\r\n  const handleClick = (category) => {\r\n    history.push(\"/product/categories/\" + category);\r\n  };\r\n  return (\r\n    <Carousel responsive={responsive}>\r\n      <div className=\"item\" onClick={() => handleClick(\"clothing\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Accessibility className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Clothing</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"beauty\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Face className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Beauty</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"sports equipments\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsFootball className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Sports Equipments</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"home appliances\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Home className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Home Appliances</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"automotive\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <DriveEta className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Automotive</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"hobbies\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Redeem className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Hobbies</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"computers and tech\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Computer className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Computers & Tech</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"other tangibles\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Apps className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Others</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./itemlistsIntangible.css\";\r\nimport { Button, Col, Row } from \"react-bootstrap\";\r\nimport {\r\n  OutdoorGrill,\r\n  Room,\r\n  Forum,\r\n  Fastfood,\r\n  BeachAccess,\r\n  SportsHandball,\r\n  SportsEsports,\r\n  Apps,\r\n} from \"@material-ui/icons\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function ItemListsIntangible() {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    xl: {\r\n      breakpoint: { max: 3000, min: 1200 },\r\n      items: 6,\r\n    },\r\n    lg: {\r\n      breakpoint: { max: 1200, min: 992 },\r\n      items: 5,\r\n    },\r\n    md: {\r\n      breakpoint: { max: 992, min: 768 },\r\n      items: 4,\r\n    },\r\n    sm: {\r\n      breakpoint: { max: 768, min: 576 },\r\n      items: 3,\r\n    },\r\n    xs: {\r\n      breakpoint: { max: 576, min: 0 },\r\n      items: 2,\r\n    },\r\n  };\r\n  const history = useHistory();\r\n  const handleClick = (category) => {\r\n    history.push(\"/product/categories/\" + category);\r\n  };\r\n  return (\r\n    <Carousel responsive={responsive}>\r\n      <div className=\"item\" onClick={() => handleClick(\"outdoor activities\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <OutdoorGrill className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Outdoor Activities</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"travel\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Room className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Travel</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"discussion\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Forum className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Discussion</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"food\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Fastfood className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Food</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"indoor activities\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <BeachAccess className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Indoor Activities</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"sports\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsHandball className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Sports</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"games and esports\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <SportsEsports className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Games & Esports</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <div className=\"item\" onClick={() => handleClick(\"other intangibles\")}>\r\n        <div className=\"button\">\r\n          <Button className=\"itemButton\">\r\n            <Col>\r\n              <Row>\r\n                <Apps className=\"itemIcon\" />\r\n              </Row>\r\n              <Row>\r\n                <span className=\"itemText text-center\">Others</span>\r\n              </Row>\r\n            </Col>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Carousel>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ads.css\";\r\nimport { Carousel } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Ads({ itemArray }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const history = useHistory();\r\n  const adItemComponent = (item) => (\r\n    <img\r\n      className=\"adsPics d-block\"\r\n      src={\r\n        item?.img && item.img.length > 0\r\n          ? PF + item.img[0]\r\n          : PF + \"group/noImageUploaded.png\"\r\n      }\r\n      alt=\"cannot display\"\r\n    />\r\n  );\r\n  return (\r\n    <div style={{ width: \"35%\", outline: \"none\" }}>\r\n      <Carousel className=\"adsWrapper\">\r\n        <Carousel.Item interval={3000}>\r\n          <img\r\n            className=\"adsPics d-block\"\r\n            src={PF + \"group/trending.jpg\"}\r\n            alt=\"First slide\"\r\n          />\r\n        </Carousel.Item>\r\n        {itemArray.map((item) => (\r\n          <Carousel.Item\r\n            key={item._id}\r\n            interval={3000}\r\n            onClick={() => {\r\n              history.push(\"/items/\" + item._id);\r\n            }}\r\n          >\r\n            {adItemComponent(item)}\r\n          </Carousel.Item>\r\n        ))}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","const AuthReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_START\":\r\n      return {\r\n        user: null,\r\n        isFetching: true,\r\n        error: false,\r\n        sockio: null,\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    case \"LOGIN_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n        sockio: null,\r\n      };\r\n    case \"LOGOUT_START\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: true,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: null,\r\n      };\r\n    case \"LOGOUT_FAILURE\":\r\n      return {\r\n        user: null,\r\n        isFetching: false,\r\n        error: action.payload,\r\n        sockio: null,\r\n      };\r\n    case \"UPDATE\":\r\n      return {\r\n        user: action.payload.user,\r\n        isFetching: false,\r\n        error: false,\r\n        sockio: action.payload.sock,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AuthReducer;\r\n","import { createContext, useEffect, useReducer } from \"react\";\r\nimport AuthReducer from \"./AuthReducer\";\r\n\r\nconst INITIAL_STATE = {\r\n  user: JSON.parse(localStorage.getItem(\"rehashUser\")) || null, //changed\r\n  isFetching: false,\r\n  error: false,\r\n  sockio: null,\r\n};\r\n\r\nexport const AuthContext = createContext(INITIAL_STATE);\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AuthReducer, INITIAL_STATE);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"rehashUser\", JSON.stringify(state.user));\r\n  }, [state.user]);\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user: state.user,\r\n        isFetching: state.isFetching,\r\n        error: state.error,\r\n        sockio: state.sockio,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport \"./groupIcon.css\";\r\n\r\nexport default function GroupIcon({ groupImg, groupName, groupId, create }) {\r\n  //should limit to 35-40 characters\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [newGroupName, setNewGroupName] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleClickGroupIcon = () => {\r\n    if (groupId) {\r\n      history.push(\"/groups/\" + groupId + \"/main\");\r\n    }\r\n  };\r\n\r\n  const handleCreateNewGroup = async () => {\r\n    if ((newGroupName.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      console.log(\"newGroupName is empty!\");\r\n      setNewGroupName(\"\");\r\n    } else if (user) {\r\n      try {\r\n        const newGroup = {\r\n          creatorId: user._id,\r\n          members: [user._id],\r\n          description:\r\n            \"No description yet. Waiting for group creator to update description.\",\r\n          groupName: newGroupName,\r\n        };\r\n        const res = await axios.post(\"/api/groups\", newGroup);\r\n        if (res.status === 200) {\r\n          setNewGroupName(\"\");\r\n          history.push(\"/groups/\" + res.data._id + \"/main\");\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n  return create ? (\r\n    <div className=\"groupIconButtonBackgroundCreate\">\r\n      <img\r\n        className=\"groupIconButtonImg\"\r\n        src={groupImg ? PF + groupImg : PF + \"group.noImageUploaded.png\"}\r\n        onClick={handleCreateNewGroup}\r\n        alt=\"\"\r\n      />\r\n      <textarea\r\n        rows={3}\r\n        className=\"groupIconTextArea\"\r\n        placeholder=\"Enter new group name (max 50 characters) and click '+'\"\r\n        value={newGroupName}\r\n        onChange={(e) => {\r\n          if (e.target.value.length <= 50) {\r\n            setNewGroupName(e.target.value);\r\n          }\r\n        }}\r\n      />\r\n    </div>\r\n  ) : (\r\n    <div className=\"groupIconButtonBackground\" onClick={handleClickGroupIcon}>\r\n      <img\r\n        className=\"groupIconButtonImg\"\r\n        src={groupImg ? PF + groupImg : PF + \"group/noImageUploaded.png\"}\r\n        alt=\"\"\r\n      />\r\n      <div className=\"groupIconButtonName\">\r\n        {groupName ? groupName : \"No Group Name\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./groupIconContainer.css\";\r\nimport Carousel from \"react-multi-carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\nimport GroupIcon from \"../groupIcon/GroupIcon\";\r\n\r\nexport default function GroupIconContainer({ recommendedGroups }) {\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      // the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    xl: {\r\n      breakpoint: { max: 3000, min: 1200 },\r\n      items: 6,\r\n    },\r\n    lg: {\r\n      breakpoint: { max: 1200, min: 992 },\r\n      items: 5,\r\n    },\r\n    md: {\r\n      breakpoint: { max: 992, min: 800 },\r\n      items: 4,\r\n    },\r\n    sm: {\r\n      breakpoint: { max: 800, min: 620 },\r\n      items: 3,\r\n    },\r\n    xs: {\r\n      breakpoint: { max: 620, min: 0 },\r\n      items: 2,\r\n    },\r\n  };\r\n\r\n  return recommendedGroups && recommendedGroups.length > 0 ? (\r\n    <Carousel responsive={responsive}>\r\n      {recommendedGroups.map((group) => (\r\n        <GroupIcon\r\n          key={group._id}\r\n          groupName={group.groupName}\r\n          groupImg={group.groupImg}\r\n          groupId={group._id}\r\n        />\r\n      ))}\r\n    </Carousel>\r\n  ) : (\r\n    <div>No recommended groups.</div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport ItemListsTangible from \"../../components/itemlistsTangible/ItemListsTangible\";\r\nimport \"./home.css\";\r\nimport ItemListsIntangible from \"../../components/itemlistsIntangible/ItemListsIntangible\";\r\nimport TrendingSwaps from \"../../components/trendingSwaps/TrendingSwaps\";\r\nimport Ads from \"../../components/ads/Ads\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport GroupIconContainer from \"../../components/groupIconContainer/GroupIconContainer\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Home() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [recommendedGroups, setRecommendedGroups] = useState([]);\r\n  const [trendingSwaps, setTrendingSwaps] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    console.log(\"user is: \", user);\r\n  }, [sockio, user]);\r\n\r\n  useEffect(() => {\r\n    const getRecommendedGroups = async () => {\r\n      try {\r\n        if (user) {\r\n          const res = await axios.get(\"/api/groups/recommended/\" + user._id);\r\n          if (res.status === 200) {\r\n            setRecommendedGroups(res.data);\r\n          }\r\n        } else {\r\n          //give a fake userId of \"0\", because the api will make sure that the user with given userId is not in the recommended group\r\n          const res = await axios.get(\"/api/groups/recommended/0\");\r\n          if (res.status === 200) {\r\n            setRecommendedGroups(res.data);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getRecommendedGroups();\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const getTrendingSwaps = async () => {\r\n      try {\r\n        if (user) {\r\n          const res = await axios.get(\r\n            \"/api/items/trendingSwaps?userId=\" + user._id\r\n          );\r\n          if (res.status === 200) {\r\n            setTrendingSwaps(res.data);\r\n          }\r\n        } else {\r\n          const res = await axios.get(\"/api/items/trendingSwaps\");\r\n          if (res.status === 200) {\r\n            setTrendingSwaps(res.data);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getTrendingSwaps();\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"adContainer\">\r\n        <Ads itemArray={trendingSwaps} />\r\n      </div>\r\n\r\n      <div className=\"homeWrapper\">\r\n        <div className=\"tangible\">\r\n          <div className=\"itemsType\">\r\n            <span>Explore Tangible</span>\r\n          </div>\r\n          <ItemListsTangible />\r\n        </div>\r\n        <div className=\"intangible\">\r\n          <div className=\"itemsType\">\r\n            <span>Explore Intangible</span>\r\n          </div>\r\n          <ItemListsIntangible />\r\n        </div>\r\n        <div className=\"recommendedGroups\">\r\n          <div className=\"itemsType\">\r\n            <span>Recommended Groups</span>\r\n          </div>\r\n          <GroupIconContainer recommendedGroups={recommendedGroups} />\r\n        </div>\r\n        {/* <div className=\"trendingSwap\">\r\n          <span className=\"trendingSwapHead\">Trending Swaps</span>\r\n          <TrendingSwaps className=\"trendingSwapItems\" />\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./register.css\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Register() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [userError, setUserError] = useState(\"\");\r\n  const [isFetching, setIsFetching] = useState(false);\r\n\r\n  const handleEmail = (e) => {\r\n    console.log(e.target.value);\r\n    setEmail(e.target.value);\r\n    if (emailError !== \"\") {\r\n      setEmailError(\"\");\r\n    }\r\n    // try {\r\n    //   await axios.get(\"/api/users?email=\" + e.target.value);\r\n    //   e.target.setCustomValidity(\"Email already taken\");\r\n    // } catch (err) {\r\n    //   if (err.response.status === 400) {\r\n    //     e.target.setCustomValidity(\"\");\r\n    //   }\r\n    // }\r\n  };\r\n  const handleUsername = (e) => {\r\n    console.log(e.target.value);\r\n    setUsername(e.target.value);\r\n    if (userError !== \"\") {\r\n      setUserError(\"\");\r\n    }\r\n    // try {\r\n    //   await axios.get(\"/api/users?username=\" + e.target.value);\r\n    //   e.target.setCustomValidity(\"Username already taken\");\r\n    // } catch (err) {\r\n    //   if (err.response.status === 400) {\r\n    //     e.target.setCustomValidity(\"\");\r\n    //   }\r\n    // }\r\n  };\r\n  const handlePassword = (e) => {\r\n    console.log(e.target.value);\r\n    setPassword(e.target.value);\r\n    // if (e.target.value.length < 6) {\r\n    //   e.target.setCustomValidity(\"Password must have at least 6 characters\");\r\n    // } else {\r\n    //   e.target.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n  const handleConfirmPassword = (e) => {\r\n    console.log(e.target.value);\r\n    setConfirmPassword(e.target.value);\r\n    // if (e.target.value !== password) {\r\n    //   console.log(password);\r\n    //   console.log(e.target.value);\r\n    //   e.target.setCustomValidity(\"Passwords don't match!\");\r\n    // } else {\r\n    //   e.target.setCustomValidity(\"\");\r\n    // }\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const handleCheckUsername = async (e) => {\r\n    setIsFetching(true);\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.get(\"/api/users?username=\" + username);\r\n      if (res.status === 200) {\r\n        setUserError(\"Username already taken\");\r\n        setIsFetching(false);\r\n      }\r\n    } catch (err) {\r\n      handleCheckEmail();\r\n    }\r\n  };\r\n\r\n  const handleCheckEmail = async () => {\r\n    try {\r\n      const res = await axios.get(\"/api/users?email=\" + email);\r\n      if (res.status === 200) {\r\n        setEmailError(\"Email already taken\");\r\n        setIsFetching(false);\r\n      }\r\n    } catch (err) {\r\n      handleRegister();\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    console.log(email);\r\n    console.log(username);\r\n    console.log(password);\r\n    console.log(confirmPassword);\r\n    if (password.length >= 6 && password === confirmPassword) {\r\n      const user = {\r\n        username: username,\r\n        email: email,\r\n        password: password,\r\n      };\r\n      try {\r\n        const res = await axios.post(\"/api/auth/register\", user);\r\n        if (res.status === 200) {\r\n          setIsFetching(false);\r\n          history.push(\"/\");\r\n        }\r\n      } catch (err) {\r\n        alert(\"register failed due to server error\");\r\n        setIsFetching(false);\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      setIsFetching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <div className=\"registerWrapper\">\r\n        <div className=\"registerLeft\">\r\n          <div className=\"registerLeftWrapper  \">\r\n            <div className=\"registerLeftTop \">\r\n              <img\r\n                className=\"registerLeftLogo\"\r\n                src=\"/assests/ReHashLogo.png\"\r\n                alt=\"ReHash logo\"\r\n              />\r\n              <span id=\"registerText\" className=\"registerLeftLogoText \">\r\n                ReHash\r\n              </span>\r\n            </div>\r\n            <span className=\"registerLeftBottom\">\r\n              Excited to embark on you ReHash journey? Sign up now!\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"registerRight\">\r\n          <div className=\"registerRightTop\">\r\n            <Link to=\"/\" className=\"registerBack\">\r\n              <ArrowBackIosIcon />\r\n              <span>Back</span>\r\n            </Link>\r\n          </div>\r\n          <div className=\"registerRightBottom\">\r\n            <div className=\"registerRightHeader\">\r\n              <h2>Register Individual Account!</h2>\r\n              {/* <span className=\"registerRightHeaderText\">\r\n                For the purpose of industry regulations, your details are\r\n                requested\r\n              </span> */}\r\n            </div>\r\n            <form\r\n              action=\"\"\r\n              className=\"registerBox\"\r\n              onSubmit={handleCheckUsername}\r\n            >\r\n              <span className=\"registerInputLabel\">Your full name *</span>\r\n              <input\r\n                placeholder=\"Enter username\"\r\n                required\r\n                value={username}\r\n                onChange={handleUsername}\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">{userError}</span>\r\n              <span className=\"registerInputLabel\">Email address *</span>\r\n              <input\r\n                placeholder=\"Enter email address\"\r\n                required\r\n                value={email}\r\n                onChange={handleEmail}\r\n                type=\"email\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">{emailError}</span>\r\n              <span className=\"registerInputLabel\">Create password *</span>\r\n              <input\r\n                placeholder=\"Enter password with at least 6 characters\"\r\n                required\r\n                value={password}\r\n                onChange={handlePassword}\r\n                type=\"password\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">\r\n                {password !== \"\" && password.length < 6\r\n                  ? \"Password must have at least 6 characters\"\r\n                  : \"\"}\r\n              </span>\r\n              <span className=\"registerInputLabel\">Confirm password *</span>\r\n              <input\r\n                placeholder=\"Confirm password\"\r\n                required\r\n                value={confirmPassword}\r\n                onChange={handleConfirmPassword}\r\n                type=\"password\"\r\n                className=\"registerInput\"\r\n              />\r\n              <span className=\"registerInputError\">\r\n                {confirmPassword !== \"\" &&\r\n                password !== \"\" &&\r\n                confirmPassword !== password\r\n                  ? \"Passwords don't match!\"\r\n                  : \"\"}\r\n              </span>\r\n              <button\r\n                className=\"registerButton\"\r\n                type=\"submit\"\r\n                disabled={isFetching}\r\n              >\r\n                {isFetching ? (\r\n                  <CircularProgress color=\"white\" size=\"20px\" />\r\n                ) : (\r\n                  \"Register Account\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport \"./sidebar.css\";\r\nimport { Rating } from \"@material-ui/lab\";\r\n\r\nimport {\r\n  CDBSidebar,\r\n  CDBSidebarContent,\r\n  CDBSidebarFooter,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n} from \"cdbreact\";\r\nimport { LocalMall, SwapVert, ExitToApp, Settings } from \"@material-ui/icons\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nexport default function SideBar({ sidebarUser }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio, dispatch } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const handleLogOut = async (e) => {\r\n    e.preventDefault();\r\n    const logoutCall = async (dispatch) => {\r\n      dispatch({ type: \"LOGOUT_START\", payload: { user: user, sock: sockio } });\r\n      try {\r\n        await sockio.disconnect();\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      } catch (err) {\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: err });\r\n      }\r\n    };\r\n    await logoutCall(dispatch);\r\n    history.push(\"/\");\r\n    console.log(\"logged out\");\r\n  };\r\n\r\n  const handleListings = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/listings\");\r\n    console.log(\"done\");\r\n  };\r\n  const handleReviews = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/reviews\");\r\n  };\r\n  const handleSettings = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/settings\");\r\n  };\r\n  const handleMyGroups = () => {\r\n    history.push(\"/profile/\" + sidebarUser?.username + \"/mygroups\");\r\n  };\r\n  return (\r\n    <div\r\n      className=\"sidebar\"\r\n      // style={{ display: \"flex\", height: \"100vh\", overflow: \"scroll initial\" }}\r\n    >\r\n      <CDBSidebar textColor=\"black\" backgroundColor=\"#FFD68D\">\r\n        {/* <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu>\r\n        <CDBSidebarMenu className=\"dummyslot\"></CDBSidebarMenu> */}\r\n        <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n          <img\r\n            className=\"userProfile\"\r\n            src={\r\n              sidebarUser?.profilePicture\r\n                ? PF + sidebarUser.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarHeader style={{ textAlign: \"center\" }}>\r\n          <div>{sidebarUser?.username}</div>\r\n          <div className=\"ratings\">\r\n            <div>Ratings: </div>\r\n            <Rating\r\n              value={\r\n                sidebarUser\r\n                  ? sidebarUser.cumulativeRating / sidebarUser.ratedByUsers\r\n                  : 3\r\n              }\r\n              precision={0.1}\r\n              readOnly\r\n            />\r\n          </div>\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarContent>\r\n          <CDBSidebarMenu>\r\n            <CDBSidebarMenuItem\r\n              onClick={handleListings}\r\n              className=\"sidebarMenuItem\"\r\n            >\r\n              <LocalMall className=\"sidebarIcons\" />\r\n              <span className=\"sidebarMenuText\">Listings</span>\r\n            </CDBSidebarMenuItem>\r\n            <CDBSidebarMenuItem\r\n              className=\"sidebarMenuItem\"\r\n              onClick={handleReviews}\r\n            >\r\n              <SwapVert className=\"sidebarIcons\" />\r\n              <span className=\"sidebarMenuText\">Reviews</span>\r\n            </CDBSidebarMenuItem>\r\n            {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"sidebarMenuItem\"\r\n                onClick={handleMyGroups}\r\n              >\r\n                <GroupIcon className=\"sidebarIcons\" />\r\n                <span className=\"sidebarMenuText\">My Groups</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {/* {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem className=\"sidebarMenuItem\" onClick={handleMyGroups}>\r\n                <GroupIcon className=\"sidebarIcons\"/>\r\n                <span className=\"sidebarMenuText\">My Groups</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )} */}\r\n\r\n            {sidebarUser && sidebarUser._id === user?._id ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"sidebarMenuItem\"\r\n                onClick={handleSettings}\r\n              >\r\n                <Settings className=\"sidebarIcons\" />\r\n                <span className=\"sidebarMenuText\">Settings</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </CDBSidebarMenu>\r\n        </CDBSidebarContent>\r\n        {sidebarUser && sidebarUser._id === user?._id ? (\r\n          <CDBSidebarFooter style={{ textAlign: \"center\" }}>\r\n            <div\r\n              className=\"sidebar-btn-wrapper\"\r\n              style={{ padding: \"20px 5px\" }}\r\n            >\r\n              <ExitToApp className=\"sidebarIcons\" onClick={handleLogOut} />\r\n              <span className=\"sidebarMenuText\" onClick={handleLogOut}>\r\n                Log out\r\n              </span>\r\n            </div>\r\n          </CDBSidebarFooter>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </CDBSidebar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport \"./itemListing.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function ItemListing({ item, inPost }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  const handleClickItem = () => {\r\n    if (user && user._id !== item.userId) {\r\n      try {\r\n        axios.put(\"/api/items/update/views/\" + item._id);\r\n      } catch (err) {\r\n        console.log(err);\r\n        history.push(\"/items/\" + item._id);\r\n      }\r\n    }\r\n    history.push(\"/items/\" + item._id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(item);\r\n  }, [item]);\r\n  return (\r\n    <div className=\"itemListingWrapper\" onClick={() => handleClickItem()}>\r\n      <Card>\r\n        {inPost ? (\r\n          <>\r\n            <Card.Img src={PF + item?.img[0]} />\r\n            <Card.Body className=\"PostItemBody\">{item?.title}</Card.Body>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={PF + item.img[0]}\r\n              className=\"trendingSwapItemImg\"\r\n            />\r\n\r\n            <Card.Body className=\"trendingSwapItemBody\">\r\n              <Card.Title className=\"itemListingCardTitle\">\r\n                <span style={{ marginRight: \"10px\" }}>{item.title}</span>\r\n                <Chip\r\n                  className=\"tag\"\r\n                  label={item.status === \"waiting\" ? \"available\" : item.status}\r\n                  size=\"small\"\r\n                  color={\r\n                    item.status === \"waiting\"\r\n                      ? \"\"\r\n                      : item.status === \"reserved\"\r\n                      ? \"primary\"\r\n                      : \"secondary\"\r\n                  }\r\n                  style={{\r\n                    marginBottom: \"5px\",\r\n                    marginTop: \"5px\",\r\n                  }}\r\n                />\r\n              </Card.Title>\r\n              <span className=\"trendingSwapText\">Ideal Swap: </span>\r\n              {item.idealSwaps.map((tags) => (\r\n                <Chip\r\n                  key={tags}\r\n                  className=\"tag\"\r\n                  label={tags}\r\n                  size=\"small\"\r\n                  color=\"secondary\"\r\n                  style={{ marginRight: \"5px\" }}\r\n                />\r\n              ))}\r\n\r\n              <Card.Text>{item.desc}</Card.Text>\r\n            </Card.Body>\r\n          </>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Star(props) {\r\n  const { fill = \"none\" } = props;\r\n  return (\r\n    <svg\r\n      class=\"w-6 h-6 star\"\r\n      fill={fill}\r\n      stroke=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth=\"0\"\r\n        d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport Star from \"../star/Star\";\r\n\r\nexport default function RatingIcon({\r\n  index,\r\n  rating,\r\n  hoverRating,\r\n  onMouseEnter,\r\n  onMouseLeave,\r\n  onSaveRating,\r\n  selected,\r\n  notSelected,\r\n}) {\r\n  const fill = useMemo(() => {\r\n    if (hoverRating >= index) {\r\n      return \"rgb(240, 158, 6)\";\r\n    } else if (!hoverRating && rating >= index) {\r\n      return \"rgb(240, 158, 6)\";\r\n    }\r\n    return \"rgb(145, 144, 144)\";\r\n  }, [rating, hoverRating, index]);\r\n\r\n  return (\r\n    <div\r\n      style={{ height: \"20px\", width: \"20px\" }}\r\n      className=\"cursor-pointer\"\r\n      onMouseEnter={() => onMouseEnter(index)}\r\n      onMouseLeave={() => onMouseLeave()}\r\n      onClick={() => onSaveRating(index)}\r\n    >\r\n      {selected ? (\r\n        <Star fill={\"rgb(240, 158, 6)\"} />\r\n      ) : notSelected ? (\r\n        <Star fill={\"rgb(145, 144, 144)\"} />\r\n      ) : (\r\n        <Star fill={fill} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./userReview.css\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport Star from \"../star/Star\";\r\nimport RatingIcon from \"../RatingIcon/RatingIcon\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { get } from \"mongoose\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UserReview({\r\n  review,\r\n  doneReview,\r\n  handleSubmit,\r\n  handleDelete,\r\n}) {\r\n  const [rating, setRating] = useState(0);\r\n  const [hoverRating, setHoverRating] = useState(0);\r\n  const { user } = useContext(AuthContext);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [reviewer, setReviewer] = useState(null);\r\n  const [reviewText, setReviewText] = useState(\"\");\r\n\r\n  //set the reviewer\r\n  useEffect(() => {\r\n    const getReviewUser = async () => {\r\n      const res = await axios.get(\"/api/users?userId=\" + review.reviewerId);\r\n      setReviewer(res.data);\r\n    };\r\n    if (review) {\r\n      getReviewUser();\r\n    }\r\n  }, [review]);\r\n\r\n  const onMouseEnter = (index) => {\r\n    if (!doneReview) {\r\n      setHoverRating(index);\r\n      console.log(\"hover rating is: \" + index);\r\n    }\r\n  };\r\n\r\n  const onMouseLeave = () => {\r\n    if (!doneReview) {\r\n      setHoverRating(0);\r\n    }\r\n  };\r\n\r\n  const onSaveRating = (index) => {\r\n    if (!doneReview) {\r\n      setRating(index);\r\n      console.log(\"your rating is: \" + index);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"userReview\">\r\n      <div className=\"userReviewTop\">\r\n        <img\r\n          src={\r\n            doneReview\r\n              ? reviewer && reviewer.profilePicture\r\n                ? PF + reviewer.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n              : user && user.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + \"person/noAvatar.png\"\r\n          }\r\n          alt=\"\"\r\n          className=\"userReviewImg\"\r\n        />\r\n        <div className=\"userReviewTopMiddle\">\r\n          <div className=\"userReviewTopMiddleName\">\r\n            {doneReview\r\n              ? reviewer?.username\r\n              : user\r\n              ? user.username\r\n              : \"Anonymous\"}\r\n          </div>\r\n          <div className=\"userReviewTopMiddleRatings\">\r\n            <div className=\"userReviewTopMiddleRatingsText\">Ratings: </div>\r\n            <div className=\"userReviewRatingStars\">\r\n              {review\r\n                ? [1, 2, 3, 4, 5].map((index) => {\r\n                    return (\r\n                      <RatingIcon\r\n                        index={index}\r\n                        rating={rating}\r\n                        hoverRating={hoverRating}\r\n                        onMouseEnter={onMouseEnter}\r\n                        onMouseLeave={onMouseLeave}\r\n                        onSaveRating={onSaveRating}\r\n                        selected={review.rating >= index}\r\n                        notSelected={review.rating < index}\r\n                      />\r\n                    );\r\n                  })\r\n                : [1, 2, 3, 4, 5].map((index) => {\r\n                    return (\r\n                      <RatingIcon\r\n                        index={index}\r\n                        rating={rating}\r\n                        hoverRating={hoverRating}\r\n                        onMouseEnter={onMouseEnter}\r\n                        onMouseLeave={onMouseLeave}\r\n                        onSaveRating={onSaveRating}\r\n                      />\r\n                    );\r\n                  })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"userReviewTopRight\">\r\n          {doneReview ? (\r\n            review.reviewerId === user?._id ? (\r\n              <button\r\n                className=\"userReviewSubmitButton\"\r\n                onClick={() => handleDelete(review)}\r\n              >\r\n                Delete\r\n              </button>\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <button\r\n              className=\"userReviewSubmitButton\"\r\n              onClick={() => handleSubmit(reviewText, rating)}\r\n            >\r\n              Submit\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <div className=\"userReviewBottom\">\r\n        {doneReview ? (\r\n          <div className=\"userReviewedText\">{review.reviewText}</div>\r\n        ) : (\r\n          <textarea\r\n            placeholder=\"(Optional) Leave a review ...\"\r\n            className=\"userReviewInput\"\r\n            value={reviewText}\r\n            onChange={(e) => setReviewText(e.target.value)}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./userlisting.css\";\r\nimport { Row, Container } from \"react-bootstrap\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport ItemListing from \"../../components/itemListing/ItemListing\";\r\nimport { Paper, Tabs, Tab } from \"@material-ui/core\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport UserReview from \"../../components/userReview/UserReview\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function UserListing() {\r\n  const { user, sockio } = useContext(AuthContext); //this user is currentUser\r\n  const username = useParams().username;\r\n  // const subpage = useParams().subpage;\r\n  const [displayItems, setDisplayItems] = useState([]);\r\n  const [viewingCategory, setViewingCategory] = useState(\"tangibles\");\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio?.id);\r\n    console.log(\"username is: \", username);\r\n    // console.log(\"subpage is:\", subpage);\r\n  }, [sockio, username]);\r\n\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const getDisplayItems = async () => {\r\n      if (profileUser) {\r\n        const res = await axios.get(\r\n          \"/api/items/categories?categoryName=\" +\r\n            viewingCategory +\r\n            \"&userId=\" +\r\n            profileUser._id\r\n        );\r\n        setDisplayItems(res.data);\r\n        //console.log(res.data);\r\n      }\r\n    };\r\n    getDisplayItems();\r\n  }, [viewingCategory, profileUser]);\r\n\r\n  const handleClickTangible = () => {\r\n    setViewingCategory(\"tangibles\");\r\n    setTabValue(0);\r\n  };\r\n\r\n  const handleClickIntangible = () => {\r\n    setViewingCategory(\"intangibles\");\r\n    setTabValue(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"userlistingContainer\">\r\n        <SideBar className=\"sidebar\" sidebarUser={profileUser} />\r\n        <div className=\"userListingsRight\">\r\n          <Container className=\"userlistingWrapper\">\r\n            <div className=\"tabBar\">\r\n              <Paper margin={200} style={{ marginBottom: \"10px\" }}>\r\n                <Tabs\r\n                  value={tabValue}\r\n                  indicatorColor=\"primary\"\r\n                  textColor=\"primary\"\r\n                  centered\r\n                >\r\n                  <Tab label=\"Tangible\" onClick={handleClickTangible} />\r\n                  <Tab label=\"Intangible\" onClick={handleClickIntangible} />\r\n                </Tabs>\r\n              </Paper>\r\n            </div>\r\n            <Row className=\"listingRow\" xs={1} md={3}>\r\n              {displayItems.length ? (\r\n                displayItems.map((item) => (\r\n                  <ItemListing key={item._id} item={item} />\r\n                ))\r\n              ) : (\r\n                <div>User does not have any item in this category</div>\r\n              )}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./review.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport UserReview from \"../../components/userReview/UserReview\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst cheeseCakeReview = {\r\n  _id: \"60cb421ce5ae38aaf0c6ec7b\",\r\n  reviewerId: \"60bf21abb893706a58752ecf\",\r\n  revieweeId: \"60bf2195b893706a58752ece\",\r\n  rating: 4,\r\n  reviewText:\r\n    \"The cheese baked rice session I attended was awesome! Punpun is very patient and handheld me throughout the whole session. I'm satisfied with my homemade cheese baked rice!\",\r\n  createdAt: \"2021-06-17T12:37:48.610Z\",\r\n  updatedAt: \"2021-06-17T12:37:48.610Z\",\r\n  __v: 0,\r\n};\r\n\r\nconst punpunReviewBing = {\r\n  _id: \"60ca10cf56bca394fc060b94\",\r\n  reviewerId: \"60bf2195b893706a58752ece\",\r\n  revieweeId: \"60bf21abb893706a58752ecf\",\r\n  rating: 4,\r\n  reviewText: \"The user is very patient and I find the swap very worthwhile\",\r\n  createdAt: \"2021-06-17T12:37:48.610Z\",\r\n  updatedAt: \"2021-06-17T12:37:48.610Z\",\r\n  __v: 0,\r\n};\r\n\r\nexport default function Review() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const username = useParams().username;\r\n  const [reviews, setReviews] = useState([]);\r\n  const [alreadyReviewed, setAlreadyReviewed] = useState(false);\r\n  const [myReview, setMyReview] = useState([]); //the review by the currentUser on the profileUser\r\n  const [initialCumRating, setInitialCumRating] = useState(0);\r\n  const [initialRatedBy, setInitialRatedBy] = useState(0);\r\n  //get the profile user of this page\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  //get all the reviews of this profileUser\r\n  useEffect(() => {\r\n    console.log(user);\r\n    const getReviews = async () => {\r\n      const res = await axios.get(\r\n        \"/api/reviews/profileUser/\" + profileUser._id\r\n      );\r\n      const filterMyReview = res.data.filter(\r\n        //filter away reviews made by currentUser\r\n        (review) => review.reviewerId !== user?._id\r\n      );\r\n      setReviews(filterMyReview);\r\n      console.log(filterMyReview);\r\n    };\r\n    if (profileUser) {\r\n      getReviews();\r\n      setInitialCumRating(profileUser.cumulativeRating);\r\n      setInitialRatedBy(profileUser.ratedByUsers);\r\n    }\r\n  }, [profileUser, user]);\r\n\r\n  //set alreadyReviewed intially based on currentUser and profileUser\r\n  useEffect(() => {\r\n    const getAlreadyReviewed = async () => {\r\n      if (!user || !profileUser || profileUser._id === user._id) {\r\n        setAlreadyReviewed(true); //set to true so we cannot review the profileUser\r\n      } else {\r\n        const res = await axios.get(\r\n          \"/api/reviews/between/\" + profileUser._id + \"/\" + user._id\r\n        );\r\n        if (res.data.length > 0) {\r\n          setAlreadyReviewed(true);\r\n          setMyReview(res.data);\r\n          console.log(res.data);\r\n        } else {\r\n          setAlreadyReviewed(false);\r\n        }\r\n      }\r\n    };\r\n    getAlreadyReviewed();\r\n  }, [profileUser, user]);\r\n\r\n  //handleSubmit if a review is added\r\n  const handleSubmit = async (reviewText, rating) => {\r\n    if (!alreadyReviewed && rating > 0) {\r\n      console.log(\"reviewText is: \" + reviewText + \"\\n rating is: \" + rating);\r\n      const newReview = {\r\n        reviewerId: user._id,\r\n        revieweeId: profileUser._id,\r\n        rating: rating,\r\n        reviewText: reviewText,\r\n      };\r\n      const res = await axios.post(\"/api/reviews\", newReview);\r\n      setMyReview([...myReview, res.data]);\r\n      setAlreadyReviewed(true);\r\n      //also update ratings of profileUser\r\n      const updateRatingRes = await axios.put(\"/api/users/\" + profileUser._id, {\r\n        cumulativeRating: initialCumRating + rating,\r\n        ratedByUsers: initialRatedBy + 1,\r\n      });\r\n      setInitialCumRating(initialCumRating + rating);\r\n      setInitialRatedBy(initialRatedBy + 1);\r\n    }\r\n  };\r\n\r\n  //handleDelete if own rating is deleted\r\n  const handleDelete = async (review) => {\r\n    if (alreadyReviewed) {\r\n      console.log(review);\r\n      const res = await axios.delete(\"/api/reviews/id/\" + review._id);\r\n      console.log(res.status);\r\n      console.log(typeof res.status);\r\n      setMyReview([]);\r\n      setAlreadyReviewed(false);\r\n      const updateRatingRes = await axios.put(\"/api/users/\" + profileUser._id, {\r\n        cumulativeRating: initialCumRating - review.rating,\r\n        ratedByUsers: initialRatedBy - 1,\r\n      });\r\n      setInitialCumRating(initialCumRating - review.rating);\r\n      setInitialRatedBy(initialRatedBy - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"userReviewsContainer\">\r\n        <SideBar sidebarUser={profileUser} />\r\n        <div className=\"userReviewsRight\">\r\n          <Container className=\"userReviewsWrapper\">\r\n            <span className=\"userReviewsHeader\">Reviews</span>\r\n            {alreadyReviewed ? (\r\n              <></>\r\n            ) : (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                doneReview={false}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            )}\r\n            {myReview.map((review) => (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                key={review._id}\r\n                review={review}\r\n                doneReview={true}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            ))}\r\n            {reviews.map((review) => (\r\n              <UserReview\r\n                className=\"userReview\"\r\n                key={review._id}\r\n                review={review}\r\n                doneReview={true}\r\n                handleSubmit={handleSubmit}\r\n                handleDelete={handleDelete}\r\n              />\r\n            ))}\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./product.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport ItemListing from \"../../components/itemListing/ItemListing\";\r\nimport { ArrowBackIos } from \"@material-ui/icons\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Product() {\r\n  const categoryName = useParams().categoryName;\r\n  const pageType = useParams().pageType;\r\n  const [items, setItems] = useState([]);\r\n  const { user, sockio } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    console.log(\"categoryName is: \" + categoryName);\r\n    console.log(\"pageType is \" + pageType);\r\n    const getItems = async () => {\r\n      try {\r\n        if (pageType === \"categories\" && categoryName) {\r\n          const res = await axios.get(\r\n            \"/api/items/categories?categoryName=\" + categoryName\r\n          );\r\n          if (res.status === 200) {\r\n            const displayItems = res.data.filter(\r\n              (item) => item.userId !== user?._id\r\n            );\r\n            await setItems(displayItems);\r\n          }\r\n        } else if (pageType === \"search\" && categoryName) {\r\n          const res = await axios.get(\"/api/items?search=\" + categoryName);\r\n          if (res.status === 200) {\r\n            const displayItems = res.data.filter(\r\n              (item) => item.userId !== user?._id\r\n            );\r\n            await setItems(displayItems);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getItems();\r\n  }, [categoryName, pageType]);\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n\r\n      <div className=\"productWrapper\">\r\n        {/*<div className=\"backArrow\">\r\n          <ArrowBackIos />\r\n          <span>Back</span>\r\n        </div> */}\r\n        <span className=\"productHeader\">\r\n          {pageType === \"search\"\r\n            ? \"Search results for: \" + categoryName\r\n            : pageType === \"categories\" && categoryName\r\n            ? categoryName.charAt(0).toUpperCase() + categoryName.slice(1)\r\n            : \"Product Descrption Header\"}\r\n        </span>\r\n        <Row className=\"listingRow\" xl={4} lg={3} md={2} sm={1} xs={1}>\r\n          {items.map((item) => (\r\n            <div>\r\n              <ItemListing key={item._id} item={item} />\r\n            </div>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  useContext,\r\n} from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./createListing.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport { Form, Button, Card, Row, Col } from \"react-bootstrap\";\r\nimport AddPhotoAlternateOutlinedIcon from \"@material-ui/icons/AddPhotoAlternateOutlined\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 500,\r\n    \"& > * + *\": {\r\n      marginTop: theme.spacing(3),\r\n    },\r\n  },\r\n}));\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  alignItems: \"center\",\r\n  padding: \"20px\",\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: \"#eeeeee\",\r\n  borderStyle: \"dashed\",\r\n  backgroundColor: \"#fafafa\",\r\n  color: \"#bdbdbd\",\r\n  outline: \"none\",\r\n  transition: \"border .24s ease-in-out\",\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: \"#2196f3\",\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: \"#00e676\",\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: \"#ff1744\",\r\n};\r\n\r\nexport default function CreateListing() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const category = [\r\n    { title: \"Clothing\" },\r\n    { title: \"Beauty\" },\r\n    { title: \"Sports Equipments\" },\r\n    { title: \"Home Appliances\" },\r\n    { title: \"Automotive\" },\r\n    { title: \"Clothing\" },\r\n    { title: \"Hobbies\" },\r\n    { title: \"Computers and Tech\" },\r\n    { title: \"Outdoor Activities\" },\r\n    { title: \"Travel\" },\r\n    { title: \"Discussion\" },\r\n    { title: \"Food\" },\r\n    { title: \"Indoor Activities\" },\r\n    { title: \"Sports\" },\r\n    { title: \"Games and Esports\" },\r\n    { title: \"Others\" },\r\n  ];\r\n\r\n  //Below is code for the Dropzone\r\n  const [files, setFiles] = useState([]);\r\n  const [form, setForm] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [idealCategories, setIdealCategories] = useState([]);\r\n  const [swapCategories, setSwapCategories] = useState([]);\r\n\r\n  //When file is dropped, set the new array of files based on different conditions\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      if (!!errors[\"images\"]) {\r\n        setErrors({\r\n          ...errors,\r\n          images: null,\r\n        });\r\n      }\r\n      const newFiles = acceptedFiles.map((file) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file),\r\n          customFileName: Date.now().toString().concat(file.name),\r\n        })\r\n      );\r\n      var allFiles = [...files, ...newFiles];\r\n      console.log(allFiles);\r\n      console.log(allFiles.length);\r\n      if (allFiles.length > 6) {\r\n        allFiles = allFiles.slice(allFiles.length - 6, allFiles.length);\r\n        console.log(allFiles);\r\n      }\r\n      setFiles(allFiles);\r\n    },\r\n    [errors, files]\r\n  );\r\n\r\n  //The useDropzone hook\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({\r\n    accept: \"image/*\",\r\n    onDrop: onDrop,\r\n    maxFiles: 6,\r\n  });\r\n\r\n  //setting style for the dropzone\r\n  const style = useMemo(\r\n    () => ({\r\n      ...baseStyle,\r\n      ...(isDragActive ? activeStyle : {}),\r\n      ...(isDragAccept ? acceptStyle : {}),\r\n      ...(isDragReject ? rejectStyle : {}),\r\n    }),\r\n    [isDragActive, isDragReject, isDragAccept]\r\n  );\r\n\r\n  //previews of the images uploaded\r\n  const thumbs = files.map((file) => (\r\n    <div className=\"thumb\" key={file.customFileName}>\r\n      <img src={file.preview} className=\"userSwapImg\" alt=\"\" />\r\n    </div>\r\n  ));\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\r\n    },\r\n    [files]\r\n  );\r\n\r\n  //Below is for Form Control\r\n\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    //if error exists, remove them from the error object\r\n    if (!!errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    }\r\n  };\r\n\r\n  const findFormErrors = () => {\r\n    const { title, description, tangible } = form;\r\n    const newErrors = {};\r\n\r\n    //title error\r\n    if (!title || title === \"\") {\r\n      newErrors.title = \"title cannot be blank!\";\r\n    } else if (title.length > 50) {\r\n      newErrors.title = \"title cannot be more than 50 characters\";\r\n    }\r\n\r\n    //description error\r\n    if (!description || description === \"\") {\r\n      newErrors.description = \"description cannot be blank!\";\r\n    } else if (description.length > 500) {\r\n      newErrors.description = \"description cannot be more than 500 characters\";\r\n    }\r\n\r\n    //Tangibles of intangibles not selected\r\n    if (!tangible || tangible === \"\") {\r\n      newErrors.tangible =\r\n        \"specify whether your item is tangible or intangible!\";\r\n    }\r\n\r\n    //Swap category errors\r\n    if (!swapCategories || swapCategories.length === 0) {\r\n      newErrors.swapCategories = \"select at least 1 category!\";\r\n    }\r\n\r\n    //Ideal swap category errors\r\n    if (!idealCategories || idealCategories.length === 0) {\r\n      newErrors.idealCategories = \"select at least 1 category!\";\r\n    }\r\n\r\n    //Check for images\r\n    if (files.length === 0) {\r\n      newErrors.images = \"you have to upload at least 1 image!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      var newItemSwapCat = swapCategories.map((categoryObject) =>\r\n        categoryObject.title.toLowerCase()\r\n      );\r\n      newItemSwapCat = [...newItemSwapCat, form.tangible];\r\n      const newItemIdealSwap = idealCategories.map((categoryObject) =>\r\n        categoryObject.title.toLowerCase()\r\n      );\r\n\r\n      const data = new FormData();\r\n      for (let i = 0; i < files.length; i += 1) {\r\n        data.append(\"file\", files[i]);\r\n        data.append(\"name\", files[i].customFileName);\r\n        console.log(\"customFileName is: \" + files[i].customFileName);\r\n        console.log(typeof files[i].customFileName);\r\n      }\r\n\r\n      console.log(data);\r\n      const uploadFileRes = await axios.post(\"/api/upload/items\", data);\r\n      if (uploadFileRes.status === 200) {\r\n        const newItem = {\r\n          userId: user._id,\r\n          title: form.title,\r\n          desc: form.description,\r\n          img: uploadFileRes.data.imagePaths,\r\n          categories: newItemSwapCat,\r\n          idealSwaps: newItemIdealSwap,\r\n          status: \"waiting\",\r\n        };\r\n        console.log(newItem);\r\n        const res = await axios.post(\"/api/items\", newItem);\r\n        console.log(res.data);\r\n      }\r\n\r\n      setFiles([]);\r\n      setForm({\r\n        tangible: \"\",\r\n      });\r\n      setIdealCategories([]);\r\n      setSwapCategories([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"createListingContainer\">\r\n        <div className=\"createListingHeader\">\r\n          <span>Make your swap today!</span>\r\n        </div>\r\n\r\n        {/* /* for uploading of images */}\r\n        <Row className=\"createListingContent\">\r\n          <Col xs={6}>\r\n            <Card className=\"uploadImagesCard shadow p-3 mb-5 bg-white rounded\">\r\n              <Card.Body>\r\n                <h5 className=\"uploadImagesCardHeader\">\r\n                  Drag and Drop images here\r\n                </h5>\r\n                <h6 className=\"uploadImagesCardSubHeader\">\r\n                  or click to upload\r\n                </h6>\r\n                <Form>\r\n                  <Form.Group controlId=\"images\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      style={{ display: \"none\" }}\r\n                      isInvalid={!!errors.images}\r\n                    />\r\n                    <div className=\"swapImgDragAndDropWrapper\">\r\n                      <section className=\"container\">\r\n                        <div\r\n                          {...getRootProps({ style })}\r\n                          className=\"dragAndDropDiv\"\r\n                        >\r\n                          <input {...getInputProps()} />\r\n                          <p>\r\n                            <AddPhotoAlternateOutlinedIcon fontSize=\"large\" />\r\n                          </p>\r\n                          <p>Drop away your swap images...</p>\r\n                        </div>\r\n                        <aside className=\"thumbsContainer\">{thumbs}</aside>\r\n                      </section>\r\n                    </div>\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.images}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </Form>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n\r\n          <Col xs={6} className=\"createListingContentRight\">\r\n            <Form className=\"formWrapper\">\r\n              <Form.Group controlId=\"title\">\r\n                <Form.Label>Title</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  type=\"text\"\r\n                  maxlength=\"50\"\r\n                  placeholder=\"Enter your swap title\"\r\n                  value={form.title ? form.title : \"\"}\r\n                  onChange={(e) => setField(\"title\", e.target.value)}\r\n                  isInvalid={!!errors.title}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.title}\r\n                </Form.Control.Feedback>\r\n                <Form.Text className=\"text-muted\">\r\n                  Create an interesting title for your swap!\r\n                </Form.Text>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"description\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  as=\"textarea\"\r\n                  maxlength=\"500\"\r\n                  rows={3}\r\n                  value={form.description ? form.description : \"\"}\r\n                  placeholder=\"Describe your swap\"\r\n                  onChange={(e) => setField(\"description\", e.target.value)}\r\n                  isInvalid={!!errors.description}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.description}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"tangible\">\r\n                <Form.Label>Is your item Tangible or Intangible?</Form.Label>\r\n                <Form.Control\r\n                  className=\"swapAwayFormControl\"\r\n                  as=\"select\"\r\n                  value={form.tangible}\r\n                  onChange={(e) => setField(\"tangible\", e.target.value)}\r\n                  isInvalid={!!errors.tangible}\r\n                >\r\n                  <option value=\"\" disabled hidden selected>\r\n                    Select category:\r\n                  </option>\r\n                  {/*The tangibles and intangibles spelling must be exactly like this for the database*/}\r\n                  <option value=\"tangibles\">Tangible</option>\r\n                  <option value=\"intagibles\">Intangible</option>\r\n                </Form.Control>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.tangible}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"swapCategories\">\r\n                <Form.Label>What is your swap category?</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ display: \"none\" }}\r\n                  isInvalid={!!errors.swapCategories}\r\n                />\r\n                <div className={classes.root}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags\"\r\n                    options={category}\r\n                    value={swapCategories}\r\n                    getOptionLabel={(option) => option.title}\r\n                    onChange={(e, newValue) => {\r\n                      if (!!errors[\"swapCategories\"]) {\r\n                        setErrors({ ...errors, swapCategories: null });\r\n                      }\r\n                      setSwapCategories(newValue);\r\n                      console.log(newValue);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Select categories\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.swapCategories}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"idealCategories\">\r\n                <Form.Label>What is your ideal swap?</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  style={{ display: \"none\" }}\r\n                  isInvalid={!!errors.idealCategories}\r\n                />\r\n                <div className={classes.root}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    limitTags={2}\r\n                    id=\"multiple-limit-tags2\"\r\n                    options={category}\r\n                    value={idealCategories}\r\n                    getOptionLabel={(option) => option.title}\r\n                    onChange={(e, newValue) => {\r\n                      if (!!errors[\"idealCategories\"]) {\r\n                        setErrors({ ...errors, idealCategories: null });\r\n                      }\r\n                      setIdealCategories(newValue);\r\n                      console.log(newValue);\r\n                    }}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        variant=\"outlined\"\r\n                        label=\"Select ideal swaps\"\r\n                      />\r\n                    )}\r\n                  />\r\n                </div>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  {errors.idealCategories}\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n              <Button\r\n                className=\"postButton\"\r\n                variant=\"warning\"\r\n                onClick={handleSubmit}\r\n              >\r\n                Post Swap\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport \"./singleItem.css\";\r\n//option1\r\n// import Carousel from \"react-multi-carousel\";\r\n//option2\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport \"react-multi-carousel/lib/styles.css\";\r\n\r\nexport default function SingleItem({ imgLinkArray }) {\r\n  //if you want to show all pictures in 1 line\r\n  const responsive = {\r\n    superLargeDesktop: {\r\n      //the naming can be any, depends on you.\r\n      breakpoint: { max: 4000, min: 3000 },\r\n      items: 8,\r\n    },\r\n    desktop: {\r\n      breakpoint: { max: 3000, min: 1024 },\r\n      items: 6,\r\n    },\r\n    tablet: {\r\n      breakpoint: { max: 1024, min: 464 },\r\n      items: 2,\r\n    },\r\n    mobile: {\r\n      breakpoint: { max: 464, min: 0 },\r\n      items: 1,\r\n    },\r\n  };\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  // const images = ['/assests/singleItemPics/keychronK2Pic1.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic2.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic1.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic2.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 '/assests/singleItemPics/keychronK2Pic3.jpg',\r\n  //                 ];\r\n  // return (\r\n  //     <div>\r\n\r\n  //        <Carousel\r\n  //   ssr\r\n  //   partialVisbile\r\n  // //   deviceType={deviceType}\r\n  //   itemClass=\"image-item\"\r\n  //   responsive={responsive}\r\n  // >\r\n  //   {images.slice(0, ).map((image, index) => {\r\n  //     return (\r\n  //       <div key={index} style={{ position: \"relative\" }}>\r\n  //         <img\r\n  //           draggable={false}\r\n  //           alt=\"text\"\r\n  //           style={{ width: \"100%\", height: \"100%\" }}\r\n  //           src={image}\r\n  //         />\r\n  //       </div>\r\n  //     );\r\n  //   })}\r\n  // </Carousel>\r\n  //     </div>\r\n\r\n  //if you want to show carousel in just 1 image\r\n\r\n  useEffect(() => {\r\n    console.log(imgLinkArray);\r\n  }, [imgLinkArray]);\r\n  return (\r\n    <div className=\"singleItemWrapper\">\r\n      <Carousel responsive={responsive}>\r\n        {imgLinkArray?.map((imgLink) => (\r\n          <Carousel.Item>\r\n            <img\r\n              className=\"singleItemCarouselItemImg\"\r\n              src={PF + imgLink}\r\n              alt=\"\"\r\n            />\r\n          </Carousel.Item>\r\n        ))}\r\n\r\n        {/* <Carousel.Item>\r\n          <img\r\n            className=\"singleItemCarouselItemImg\"\r\n            src=\"/assests/singleItemPics/keychronK2Pic2.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"singleItemCarouselItemImg\"\r\n            src=\"/assests/singleItemPics/keychronK2Pic3.jpg\"\r\n            alt=\"\"\r\n          />\r\n        </Carousel.Item> */}\r\n      </Carousel>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./swapAway.css\";\r\nimport { Alert, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport { TextsmsOutlined } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function SwapAway({ itemUserId }) {\r\n  //if delete, go back to listings page\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [itemUser, setItemUser] = useState(null);\r\n  const history = useHistory();\r\n  const { user } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const getItemUser = async () => {\r\n      if (itemUserId) {\r\n        const res = await axios.get(\"/api/users?userId=\" + itemUserId);\r\n        setItemUser(res.data);\r\n        console.log(\"itemUser is: \" + res.data);\r\n      }\r\n    };\r\n    getItemUser();\r\n  }, [itemUserId]);\r\n\r\n  const handleSwapAway = async () => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n      console.log(\"pushed to login\");\r\n    } else {\r\n      const res = await axios.get(\r\n        \"/api/conversations/find/\" + user._id + \"/\" + itemUserId\r\n      );\r\n      if (res.data.length > 0) {\r\n        history.push(\"/chat/\" + res.data[0]._id);\r\n        console.log(\"pushed to chat id:\" + res.data[0]._id);\r\n      } else {\r\n        const newConvo = await axios.post(\"/api/conversations\", {\r\n          members: [itemUserId, user._id],\r\n        });\r\n        //chatFollow is not used for now\r\n        history.push(\"/chat/\" + newConvo._id); //likely works but needs to be tested\r\n        console.log(newConvo.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert className=\"swapAwayPrompt\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <img\r\n                className=\"swapAwayUserImg\"\r\n                src={\r\n                  itemUser && itemUser.profilePicture\r\n                    ? PF + itemUser.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                onClick={() => {\r\n                  itemUser &&\r\n                    history.push(\"/profile/\" + itemUser.username + \"/listings\");\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Alert.Heading\r\n                className=\"swapAwayUsername\"\r\n                style={{ fontSize: \"1rem\" }}\r\n              >\r\n                {itemUser ? itemUser.username : \"\"}\r\n              </Alert.Heading>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <Button\r\n          className=\"swapAwayButton\"\r\n          variant=\"warning\"\r\n          onClick={handleSwapAway}\r\n        >\r\n          <div className=\"swapAwayButtonTextGroup\">\r\n            <TextsmsOutlined />\r\n            <span className=\"swapAwayButtonText\">Swap Away!</span>\r\n          </div>\r\n        </Button>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./userItemCommand.css\";\r\nimport { Alert, Button, Container, Row, Col } from \"react-bootstrap\";\r\nimport VerifiedUserIcon from \"@material-ui/icons/VerifiedUser\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport axios from \"axios\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function UserItemCommand({\r\n  itemUserId,\r\n  itemStatus,\r\n  handleReserve,\r\n  handleUnreserve,\r\n  handleSwap,\r\n  handleUnswap,\r\n  handleDelete,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [itemUser, setItemUser] = useState(null);\r\n  const [showInput, setShowInput] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getItemUser = async () => {\r\n      if (itemUserId) {\r\n        const res = await axios.get(\"/api/users?userId=\" + itemUserId);\r\n        setItemUser(res.data);\r\n        console.log(\"itemUser is: \" + res.data);\r\n      }\r\n    };\r\n    getItemUser();\r\n  }, [itemUserId]);\r\n\r\n  const handleKeyDownSwap = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      console.log(\"user pressed enter key and the value is: \" + input);\r\n      if (input !== \"\") {\r\n        console.log(\"input is not empty\");\r\n        try {\r\n          const res = await axios.get(\"/api/agreements?id=\" + input);\r\n          if (!res || res.status !== 200 || !res.data) {\r\n            console.log(\"Error 1\");\r\n            setError(\"Agreement does not exist!\");\r\n          } else if (\r\n            res.data.parties.length >= 2 ||\r\n            res.data.items.length >= 2\r\n          ) {\r\n            console.log(\"Error 2\");\r\n            setError(\"This agreement id already involves 2 parties or 2 items\");\r\n          } else {\r\n            handleSwap(res.data._id);\r\n            setInput(\"\");\r\n            setShowInput(false);\r\n          }\r\n        } catch (err) {\r\n          console.log(\"Error 1\");\r\n          setError(\"Agreement does not exist!\");\r\n        }\r\n      } else {\r\n        console.log(\"input empty!\");\r\n        setError(\"Agreement code cannot be empty!\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Alert className=\"userItemCommandPrompt\">\r\n        <Container>\r\n          <Row>\r\n            <Col sm={2}>\r\n              <img\r\n                className=\"userItemCommandUserImg\"\r\n                src={\r\n                  itemUser && itemUser.profilePicture\r\n                    ? PF + itemUser.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                onClick={() => {\r\n                  itemUser &&\r\n                    history.push(\"/profile/\" + itemUser.username + \"/listings\");\r\n                }}\r\n                alt=\"\"\r\n              />\r\n            </Col>\r\n            <Col sm={10}>\r\n              <Alert.Heading\r\n                className=\"userItemCommandUsername\"\r\n                style={{ fontSize: \"1rem\" }}\r\n              >\r\n                {itemUser ? itemUser.username : \"Anonymous\"}\r\n              </Alert.Heading>\r\n            </Col>\r\n          </Row>\r\n          <div className=\"buttonWrapper\">\r\n            {itemStatus === \"waiting\" ? (\r\n              <div>\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleReserve}\r\n                >\r\n                  <VerifiedUserIcon className=\"icons\" />\r\n                  <span className=\"action\">Mark as Reserve</span>\r\n                </Button>\r\n              </div>\r\n            ) : itemStatus === \"reserved\" ? (\r\n              <div>\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleUnreserve}\r\n                >\r\n                  <VerifiedUserIcon className=\"icons\" />\r\n                  <span className=\"action\">Unreserve</span>\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            <div>\r\n              {itemStatus === \"deleted\" ? (\r\n                <></>\r\n              ) : itemStatus === \"swapped\" ? (\r\n                <Button className=\"button\" variant=\"warning\">\r\n                  <ShoppingBasketIcon className=\"icons\" />\r\n                  <span className=\"action\" onClick={handleUnswap}>\r\n                    Cancel Agreement\r\n                  </span>\r\n                </Button>\r\n              ) : (\r\n                <>\r\n                  <Button className=\"button\" variant=\"warning\">\r\n                    <ShoppingBasketIcon className=\"icons\" />\r\n                    <span\r\n                      className=\"action\"\r\n                      onClick={() => setShowInput(!showInput)}\r\n                    >\r\n                      Mark as Swapped\r\n                    </span>\r\n                  </Button>\r\n                  {showInput ? (\r\n                    <Form className=\"userItemCommandForm\">\r\n                      <Form.Group controlId=\"title\">\r\n                        <Form.Control\r\n                          className=\"userItemCommandFormControl\"\r\n                          type=\"input\"\r\n                          maxlength=\"30\"\r\n                          placeholder=\"Enter your agreement code\"\r\n                          value={input}\r\n                          onChange={(e) => {\r\n                            setInput(e.target.value);\r\n                            setError(\"\");\r\n                            console.log(\"changed to: \" + e.target.value);\r\n                          }}\r\n                          onKeyDown={handleKeyDownSwap}\r\n                          isInvalid={error !== \"\"}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {error}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                    </Form>\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <div>\r\n              {itemStatus === \"deleted\" || itemStatus === \"swapped\" ? (\r\n                <></>\r\n              ) : (\r\n                <Button\r\n                  className=\"button\"\r\n                  variant=\"warning\"\r\n                  onClick={handleDelete}\r\n                >\r\n                  <HighlightOffIcon className=\"icons\" />\r\n                  <span className=\"action\">Delete</span>\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Alert>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./item.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SingleItem from \"../../components/singleItem/SingleItem\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { ArrowBackIos } from \"@material-ui/icons\";\r\nimport SwapAway from \"../../components/swapAway/SwapAway\";\r\nimport UserItemCommand from \"../../components/userItemCommand/UserItemCommand\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function Item() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const itemId = useParams().itemId;\r\n  const [item, setItem] = useState(null);\r\n  const history = useHistory();\r\n  const [copyLinkText, setCopyLinkText] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const getItem = async () => {\r\n      try {\r\n        if (itemId) {\r\n          const res = await axios.get(\"/api/items?itemId=\" + itemId);\r\n          await setItem(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getItem();\r\n  }, [itemId]);\r\n\r\n  const handleReserve = async () => {\r\n    try {\r\n      if (itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"reserved\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUnreserve = async () => {\r\n    try {\r\n      if (itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"waiting\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleSwap = async (agreementId) => {\r\n    console.log(\"handleSwap called with agreementId: \" + agreementId);\r\n    try {\r\n      const agreementRes = await axios.put(\r\n        \"/api/agreements/update/addParties/\" + agreementId,\r\n        { userId: user?._id, itemId: itemId }\r\n      );\r\n      if (agreementRes.status === 200 && itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"swapped\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUnswap = async () => {\r\n    console.log(\"handleUnswap called\");\r\n    try {\r\n      const agreementRes = await axios.put(\r\n        \"/api/agreements/update/removeParties\",\r\n        {\r\n          userId: user?._id,\r\n          itemId: itemId,\r\n        }\r\n      );\r\n      if (agreementRes.status === 200 && itemId) {\r\n        const res = await axios.put(\"/api/items/update/status/\" + itemId, {\r\n          status: \"waiting\",\r\n        });\r\n        if (res.status === 200 && res.data) {\r\n          setItem(res.data);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    console.log(\"handleDelete called\");\r\n    try {\r\n      const res = await axios.delete(\"/api/items?itemId=\" + item?._id);\r\n      if (res.status === 200) {\r\n        history.push(\"/profile/\" + user.username + \"/listings\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleCopyLink = (type) => {\r\n    console.log(\"copy link\");\r\n    var dummy = document.createElement(\"input\");\r\n    const text =\r\n      type === \"link\" ? window.location.href : item?._id ? item._id : \"\";\r\n\r\n    document.body.appendChild(dummy);\r\n    dummy.value = text;\r\n    dummy.select();\r\n    document.execCommand(\"copy\");\r\n    document.body.removeChild(dummy);\r\n    setCopyLinkText(\r\n      type === \"link\"\r\n        ? \"Link to this page has been copied\"\r\n        : \"Item ID has been copied\"\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"itemPage\">\r\n      <TopBar currentUser={user} />\r\n      {/* <div className=\"itemBackArrow\">\r\n        <ArrowBackIos />\r\n        <span>Back</span>\r\n      </div> */}\r\n      <label className=\"itemHeader\">\r\n        {item ? item.title : \"Error: No Item Displayed\"}\r\n        {item ? (\r\n          <Chip\r\n            className=\"itemTag\"\r\n            label={item.status === \"waiting\" ? \"available\" : item.status}\r\n            size=\"small\"\r\n            color={\r\n              item.status === \"waiting\"\r\n                ? \"\"\r\n                : item.status === \"reserved\"\r\n                ? \"primary\"\r\n                : \"secondary\"\r\n            }\r\n            style={{\r\n              marginLeft: \"15px\",\r\n              marginRight: \"10px\",\r\n              marginTop: \"0px\",\r\n            }}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </label>\r\n\r\n      <Container className=\"itemImg\">\r\n        <Row>\r\n          <Col>\r\n            <SingleItem imgLinkArray={item ? item.img : []} />\r\n          </Col>\r\n          <Col>\r\n            {user?._id === item?.userId ? (\r\n              <UserItemCommand\r\n                itemUserId={item?.userId}\r\n                itemStatus={item?.status}\r\n                handleReserve={handleReserve}\r\n                handleUnreserve={handleUnreserve}\r\n                handleDelete={handleDelete}\r\n                handleSwap={handleSwap}\r\n                handleUnswap={handleUnswap}\r\n              />\r\n            ) : (\r\n              <SwapAway itemUserId={item?.userId} />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* <div className=\"itemImg\">\r\n                <SingleItem />\r\n                <SwapAway />\r\n            </div> */}\r\n      <div className=\"itemHeaderSecond\">\r\n        <div className=\"itemGetLink\" onClick={() => handleCopyLink(\"link\")}>\r\n          Copy Link\r\n        </div>\r\n        <div className=\"itemGetLink\" onClick={() => handleCopyLink(\"id\")}>\r\n          Copy Item ID\r\n        </div>\r\n        <div className=\"itemCopyLinkText\">{copyLinkText}</div>\r\n      </div>\r\n      <div className=\"itemDescription\">\r\n        <h5>Description</h5>\r\n        <span>\r\n          {item\r\n            ? item.desc\r\n            : \"The item does not exist, and hence no description\"}\r\n        </span>\r\n      </div>\r\n      <div className=\"itemIdealSwaps\">\r\n        <h5>Ideal swaps</h5>\r\n        {item?.idealSwaps.map((tags) => (\r\n          <Chip\r\n            className=\"tag\"\r\n            key={tags}\r\n            label={tags}\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            style={{ marginRight: \"5px\" }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./login.css\";\r\nimport RestoreFromTrashRoundedIcon from \"@material-ui/icons/RestoreFromTrashRounded\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonOutlineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { io } from \"socket.io-client\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nexport default function Login() {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const { user, dispatch, isFetching } = useContext(AuthContext);\r\n  // const usernameRef = useRef();\r\n  // const passwordRef = useRef();\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  // const checkCredentials = async () => {\r\n  //   try {\r\n  //     const res = await axios\r\n  //       .post(\"/api/auth/login\", {\r\n  //         username: usernameRef.current.value,\r\n  //         password: passwordRef.current.value,\r\n  //       })\r\n  //       .then(() => {\r\n  //         usernameRef.current.setCustomValidity(\"\");\r\n  //         passwordRef.current.setCustomValidity(\"\");\r\n  //       });\r\n  //   } catch (err) {\r\n  //     if (err.response.status === 400) {\r\n  //       usernameRef.current.setCustomValidity(\"Incorrect username or password\");\r\n  //     }\r\n  //   }\r\n  // };\r\n  const handleUsername = async (e) => {\r\n    setUsername(e.target.value);\r\n    console.log(e.target.value);\r\n    // checkCredentials();\r\n  };\r\n  const handlePassword = async (e) => {\r\n    setPassword(e.target.value);\r\n    console.log(e.target.value);\r\n    // checkCredentials();\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const loginCall = async (userCredential, dispatch) => {\r\n      dispatch({ type: \"LOGIN_START\" });\r\n      try {\r\n        const res = await axios.post(\"/api/auth/login\", userCredential);\r\n        const sock = await io(); //const sock = await io(\"ws://localhost:8080\");\r\n        sock.on(\"connect\", () => {\r\n          sock.emit(\"addUser\", res.data._id);\r\n          console.log(\"sock inside try block: \", sock);\r\n          dispatch({\r\n            type: \"LOGIN_SUCCESS\",\r\n            payload: { user: res.data, sock: sock },\r\n          });\r\n        });\r\n      } catch (err) {\r\n        setErrorMessage(\"Incorrect username or password\");\r\n        dispatch({ type: \"LOGIN_FAILURE\", payload: err });\r\n      }\r\n    };\r\n    loginCall({ username: username, password: password }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"loginWrapper\">\r\n        <div className=\"loginTop\">\r\n          <RestoreFromTrashRoundedIcon\r\n            className=\"loginShoppingCartIcon\"\r\n            style={{\r\n              fontSize: 220,\r\n              color: \"white\",\r\n            }}\r\n          />\r\n        </div>\r\n        <form className=\"loginBottom\" onSubmit={handleSubmit}>\r\n          <div className=\"loginInputWrapper\">\r\n            <PersonOutlineOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                color: \"white\",\r\n                fontSize: 32,\r\n                top: 32,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"USERNAME\"\r\n              onChange={handleUsername}\r\n              value={username}\r\n              // ref={usernameRef}\r\n              required\r\n              className=\"loginInput\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"loginInputWrapper\">\r\n            <LockOutlinedIcon\r\n              style={{\r\n                position: \"absolute\",\r\n                color: \"white\",\r\n                fontSize: 32,\r\n                top: 32,\r\n                left: 10,\r\n              }}\r\n            />\r\n            <input\r\n              placeholder=\"PASSWORD\"\r\n              required\r\n              onChange={handlePassword}\r\n              value={password}\r\n              // ref={passwordRef}\r\n              className=\"loginInput\"\r\n              type=\"password\"\r\n            />\r\n          </div>\r\n          <div className=\"loginErrorMessageWrapper\">{errorMessage}</div>\r\n\r\n          <button className=\"loginButton\" type=\"submit\" disabled={isFetching}>\r\n            {isFetching ? (\r\n              <CircularProgress color=\"white\" size=\"20px\" />\r\n            ) : (\r\n              \"LOGIN\"\r\n            )}\r\n          </button>\r\n          {/* <Link to=\"/register\" className=\"loginBottomLink\">\r\n            Forgot password?\r\n          </Link> */}\r\n          <Link to=\"/register\" className=\"loginBottomLink\">\r\n            New to ReHash? Sign up now!\r\n          </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./conversation.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\n\r\nexport default function Conversation({\r\n  active,\r\n  userId,\r\n  lastMessageText,\r\n  lastMessageTime,\r\n  online,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [displayTimeAgo, setDisplayTimeAgo] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    console.log(\r\n      \"lastMessageText updated. the new message is: \",\r\n      lastMessageText\r\n    );\r\n  }, [lastMessageText]);\r\n\r\n  useEffect(() => {\r\n    if (lastMessageTime) {\r\n      setDisplayTimeAgo(format(lastMessageTime));\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (lastMessageTime) {\r\n        if (displayTimeAgo !== format(lastMessageTime)) {\r\n          setDisplayTimeAgo(format(lastMessageTime));\r\n        }\r\n      }\r\n\r\n      // console.log(\"This will run every second!\");\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [lastMessageTime]);\r\n\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      try {\r\n        const res = await axios(\"/api/users?userId=\" + userId);\r\n        await setUser(res.data);\r\n        console.log(\"successfully got user\");\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getUser();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div\r\n      className={active ? \"conversation conversationActive\" : \"conversation\"}\r\n    >\r\n      <div className=\"conversationLeft\">\r\n        <img\r\n          src={\r\n            user?.profilePicture\r\n              ? PF + user.profilePicture\r\n              : PF + \"person/noAvatar.png\"\r\n          }\r\n          alt=\"\"\r\n          className=\"conversationImg\"\r\n        />\r\n        {online ? <div className=\"conversationBadge\"></div> : <></>}\r\n      </div>\r\n\r\n      <div className=\"conversationRight\">\r\n        <div className=\"conversationRightTop\">\r\n          <div className=\"conversationName\">{user?.username}</div>\r\n          <div className=\"conversationStatus\">{displayTimeAgo}</div>\r\n        </div>\r\n\r\n        <span className=\"conversationLastMsg\">{lastMessageText}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./message.css\";\r\nimport { format } from \"timeago.js\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Message({ message, own, pictureLink }) {\r\n  const [displayTimeAgo, setDisplayTimeAgo] = useState(\"\");\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [show, setShow] = useState(false);\r\n  useEffect(() => {\r\n    if (message) {\r\n      setDisplayTimeAgo(format(message.createdAt));\r\n    }\r\n    const interval = setInterval(() => {\r\n      if (displayTimeAgo !== format(message.createdAt)) {\r\n        setDisplayTimeAgo(format(message.createdAt));\r\n      }\r\n      // console.log(\"This will run every second!\");\r\n    }, 60000);\r\n    return () => clearInterval(interval);\r\n  }, [message]);\r\n\r\n  return own ? (\r\n    <div className=\"messageOwn\">\r\n      <div className=\"messageTopOwn\">\r\n        <img className=\"messageImgOwn\" src={pictureLink} alt=\"\" />\r\n        <p\r\n          className=\"messageTextOwn\"\r\n          onClick={() => {\r\n            setShow(!show);\r\n          }}\r\n        >\r\n          {message.text}\r\n        </p>\r\n      </div>\r\n      {show ? <div className=\"messageBottom\">{displayTimeAgo}</div> : <></>}\r\n    </div>\r\n  ) : (\r\n    <div className=\"message\">\r\n      <div className=\"messageTop\">\r\n        <img className=\"messageImg\" src={pictureLink} alt=\"\" />\r\n        <p\r\n          className=\"messageText\"\r\n          onClick={() => {\r\n            setShow(!show);\r\n          }}\r\n        >\r\n          {message.text}\r\n        </p>\r\n      </div>\r\n      {show ? <div className=\"messageBottom\">{displayTimeAgo}</div> : <></>}\r\n    </div>\r\n  );\r\n}\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport Conversation from \"../../components/conversation/Conversation\";\r\nimport Message from \"../../components/message/Message\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport \"./chat.css\";\r\nimport axios from \"axios\";\r\nimport { format } from \"timeago.js\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Chat() {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [arrivalMessage, setArrivalMessage] = useState(null);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [currentChatWith, setCurrentChatWith] = useState(null);\r\n  const [currentChatWithLastActive, setCurrentChatWithLastActive] =\r\n    useState(\"\");\r\n\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const scrollRef = useRef();\r\n  const initialActiveConvoId = useParams().initialActiveConvoId;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getInitialActiveConvo = async () => {\r\n      if (initialActiveConvoId !== \"0\") {\r\n        console.log(\"initialActiveConvoId is: \" + initialActiveConvoId);\r\n        const res = await axios.get(\r\n          \"/api/conversations/id/\" + initialActiveConvoId\r\n        );\r\n        setCurrentChat(res.data);\r\n      }\r\n    };\r\n    getInitialActiveConvo();\r\n  }, [initialActiveConvoId]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"socket is: \", sockio.id);\r\n    //can change slightly to map for all convo, even if not opened\r\n    sockio.on(\"getMessage\", (data) => {\r\n      setArrivalMessage({\r\n        sender: data.senderId,\r\n        text: data.text,\r\n        createdAt: Date.now(),\r\n      });\r\n    });\r\n  }, [sockio]);\r\n\r\n  useEffect(() => {\r\n    arrivalMessage &&\r\n      currentChat?.members.includes(arrivalMessage.sender) &&\r\n      setMessages((prev) => [...prev, arrivalMessage]);\r\n  }, [arrivalMessage, currentChat]);\r\n\r\n  useEffect(() => {\r\n    sockio.on(\"getUsers\", (users) => {\r\n      console.log(\"getUser received on client side\");\r\n      setOnlineUsers(\r\n        user.chatFollow.filter((f) => users.some((u) => u.userId === f))\r\n      );\r\n    });\r\n  }, [user, sockio]);\r\n\r\n  useEffect(() => {\r\n    const getConversations = async () => {\r\n      try {\r\n        const res = await axios.get(\r\n          \"/api/conversations/search/\" +\r\n            user._id +\r\n            \"/searchText?searchText=\" +\r\n            searchText\r\n        );\r\n        if (res.status === 200) {\r\n          setConversations(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getConversations();\r\n  }, [user, messages, onlineUsers, searchText]);\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/messages/\" + currentChat?._id);\r\n        setMessages(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getMessages();\r\n  }, [currentChat]);\r\n\r\n  useEffect(() => {\r\n    const friendId = currentChat?.members.find((m) => m !== user._id);\r\n\r\n    const getCurrentChatWith = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?userId=\" + friendId);\r\n        await setCurrentChatWith(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getCurrentChatWith();\r\n  }, [user, currentChat]);\r\n\r\n  useEffect(() => {\r\n    const updateLastActive = async () => {\r\n      var timeago = \"\";\r\n      try {\r\n        if (currentChatWith) {\r\n          const res = await axios.get(\r\n            \"/api/users?userId=\" + currentChatWith?._id\r\n          );\r\n          const newLastActive = res.data.lastActive;\r\n          console.log(\"newLastActive: \", newLastActive);\r\n          timeago = format(newLastActive);\r\n          console.log(\"LOOK AT ME: TIMEAGO \", timeago);\r\n        }\r\n      } catch (err) {\r\n        timeago = format(currentChatWith?.lastActive);\r\n        console.log(err);\r\n      }\r\n      setCurrentChatWithLastActive(\"Active \" + timeago);\r\n    };\r\n\r\n    updateLastActive();\r\n    const interval = setInterval(() => {\r\n      updateLastActive();\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [currentChatWith]);\r\n\r\n  //handles the event that the \"send\" button is clicked\r\n  const handleSendMessage = async (e) => {\r\n    if (newMessage !== \"\") {\r\n      e.preventDefault();\r\n      await setNewMessage(\"\");\r\n      const message = {\r\n        sender: user._id,\r\n        text: newMessage,\r\n        conversationId: currentChat._id,\r\n      };\r\n\r\n      try {\r\n        const res = await axios.post(\"/api/messages\", message);\r\n\r\n        const lastMessageText = res.data.text;\r\n        const lastMessageTime = res.data.createdAt;\r\n        const updateRes = await axios.put(\r\n          \"/api/conversations/\" + currentChat._id + \"/lastmessage\",\r\n          { lastMessageText: lastMessageText, lastMessageTime: lastMessageTime }\r\n        );\r\n        console.log(updateRes);\r\n        console.log(\"currentChat is: \", currentChat);\r\n        await setMessages([...messages, res.data]);\r\n        console.log(\r\n          \"updated messages. the new messaged sent is: \",\r\n          res.data.text\r\n        );\r\n\r\n        const receiverId = currentChat.members.find(\r\n          (member) => member !== user._id\r\n        );\r\n\r\n        sockio.emit(\"sendMessage\", {\r\n          senderId: user._id,\r\n          receiverId,\r\n          text: newMessage,\r\n        });\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      console.log(\"new message when eneter is pressed: \", newMessage);\r\n      setNewMessage(newMessage);\r\n      if (newMessage !== \"\") {\r\n        handleSendMessage(e);\r\n        console.log(\"passing to handleSendMessage\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    history.push(\"/profile/\" + currentChatWith.username + \"/listings\");\r\n  };\r\n\r\n  const handleGenerateAgreement = async () => {\r\n    console.log(\"generate agreement is clicked\");\r\n    const res = await axios.post(\"/api/agreements\");\r\n    if (res.data && res.data._id) {\r\n      setNewMessage(\"Your agreement code has been generated: \" + res.data._id);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({ behavior: \"auto\" });\r\n  }, [messages]);\r\n\r\n  const handleSearch = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      if ((searchText.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"searchText is empty\");\r\n      } else if (user) {\r\n        try {\r\n          const res = await axios.get(\r\n            \"/api/conversations/search/\" +\r\n              user._id +\r\n              \"/searchText?searchText=\" +\r\n              searchText\r\n          );\r\n          if (res.status === 200) {\r\n            setConversations(res.data);\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"messenger\">\r\n        <div className=\"chatMenu\">\r\n          <div className=\"chatMenuWrapper\">\r\n            <input\r\n              placeholder=\"Search for users...\"\r\n              className=\"chatMenuInput\"\r\n              onChange={(e) => setSearchText(e.target.value)}\r\n              onKeyDown={handleSearch}\r\n              value={searchText}\r\n            />\r\n            {conversations.map((c) => {\r\n              const userId = c.members.find((m) => m !== user._id);\r\n              return (\r\n                <div onClick={() => setCurrentChat(c)}>\r\n                  <Conversation\r\n                    online={onlineUsers.includes(userId)}\r\n                    lastMessageText={c.lastMessageText}\r\n                    lastMessageTime={c.lastMessageTime}\r\n                    userId={userId}\r\n                    active={currentChat ? c._id === currentChat._id : false}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n          <div className=\"chatBoxWrapper\">\r\n            {currentChat ? (\r\n              <>\r\n                <div className=\"chatBoxHeader\">\r\n                  <div className=\"chatBoxHeaderLeft\">\r\n                    <img\r\n                      src={\r\n                        currentChatWith?.profilePicture\r\n                          ? PF + currentChatWith.profilePicture\r\n                          : PF + \"person/noAvatar.png\"\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"chatBoxHeaderImg\"\r\n                    />\r\n                    <div className=\"chatBoxHeaderContent\">\r\n                      <div className=\"chatBoxHeaderName\">\r\n                        {currentChatWith?.username}\r\n                      </div>\r\n                      <div className=\"chatBoxHeaderStatus\">\r\n                        {onlineUsers.includes(currentChatWith?._id)\r\n                          ? \"Online now\"\r\n                          : currentChatWithLastActive}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <button\r\n                    className=\"chatBoxViewProfileButton\"\r\n                    onClick={handleViewProfile}\r\n                  >\r\n                    View Profile\r\n                  </button>\r\n                </div>\r\n                <div className=\"chatBoxTop\">\r\n                  {messages.map((m) => (\r\n                    <div ref={scrollRef}>\r\n                      <Message\r\n                        message={m}\r\n                        own={m.sender === user._id}\r\n                        pictureLink={\r\n                          m.sender === user._id\r\n                            ? user?.profilePicture\r\n                              ? PF + user.profilePicture\r\n                              : PF + \"person/noAvatar.png\"\r\n                            : currentChatWith?.profilePicture\r\n                            ? PF + currentChatWith.profilePicture\r\n                            : PF + \"person/noAvatar.png\"\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <div className=\"chatBoxBottom\">\r\n                  <textarea\r\n                    className=\"chatMessageInput\"\r\n                    placeholder=\"Write a message ...\"\r\n                    onChange={(e) => setNewMessage(e.target.value)}\r\n                    value={newMessage}\r\n                    onKeyDown={handleKeyDown}\r\n                  ></textarea>\r\n                  <button\r\n                    className=\"chatAgreementButton\"\r\n                    onClick={handleGenerateAgreement}\r\n                  >\r\n                    Generate Agreement\r\n                  </button>\r\n                  <button\r\n                    className=\"chatSubmitButton\"\r\n                    onClick={handleSendMessage}\r\n                  >\r\n                    Send\r\n                  </button>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <span className=\"noConversationText\">\r\n                Open a conversation to start a chat {sockio.id}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./myGroups.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport GroupIcon from \"../../components/groupIcon/GroupIcon\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nexport default function MyGroups() {\r\n  const { user, sockio } = useContext(AuthContext); //this user is currentUser\r\n  const username = useParams().username;\r\n  const [profileUser, setProfileUser] = useState(null);\r\n  const [myGroups, setMyGroups] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getProfileUser = async () => {\r\n      if (username) {\r\n        const res = await axios.get(\"/api/users?username=\" + username);\r\n        setProfileUser(res.data);\r\n        console.log(\"profileUser is: \" + res.data);\r\n      }\r\n    };\r\n    getProfileUser();\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    const getMyGroups = async () => {\r\n      if (profileUser) {\r\n        const res = await axios.get(\r\n          \"/api/groups/filter?userId=\" + profileUser._id\r\n        );\r\n        setMyGroups(res.data);\r\n      }\r\n    };\r\n    getMyGroups();\r\n  }, [profileUser]);\r\n\r\n  const handleUpdateGroup = (group) => {\r\n    if (group && group.length > 0 && group[0]) {\r\n      setMyGroups([...group, ...myGroups]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"myGroupsPageTopSection\">\r\n        <TopBar currentUser={user} handleUpdateGroup={handleUpdateGroup} />\r\n      </div>\r\n      <div className=\"myGroupsPageMiddleSection\">\r\n        <SideBar className=\"sidebar\" sidebarUser={profileUser} />\r\n        <div className=\"myGroupsPageMiddleSectionRight\">\r\n          <div className=\"myGroupsPageMiddleSectionRightHeader\">\r\n            <span className=\"myGroupsPageMiddleSectionRightHeaderText\">\r\n              Groups You Have Joined\r\n            </span>\r\n            <div className=\"myGroupsPageGroupIconWrapper\">\r\n              <Row\r\n                className=\"myGroupsPageGroupIconContainer\"\r\n                xl={5}\r\n                lg={4}\r\n                md={3}\r\n                xs={2}\r\n              >\r\n                <Col>\r\n                  <GroupIcon groupImg=\"group/add.jpg\" create={true} />\r\n                </Col>\r\n                {myGroups.map((group) => (\r\n                  <Col key={group._id}>\r\n                    <GroupIcon\r\n                      groupImg={group.groupImg}\r\n                      groupName={group.groupName}\r\n                      groupId={group._id}\r\n                    />\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./settings.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport SideBar from \"../../components/sidebar/SideBar\";\r\nimport { Container, Card, Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nexport default function Settings() {\r\n  const { user, sockio, dispatch } = useContext(AuthContext);\r\n  const username = useParams().username;\r\n  const [imgFile, setImgFile] = useState(null);\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n\r\n  const [form, setForm] = useState({ showPassword: false });\r\n  const [errors, setErrors] = useState({});\r\n  const [imgError, setImgError] = useState({});\r\n  const [passwordUpdateValid, setPasswordUpdateValid] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"user is changed\");\r\n    console.log(user);\r\n  }, [user]);\r\n\r\n  const imageHandler = (e) => {\r\n    const newFile = Object.assign(e.target.files[0], {\r\n      preview: URL.createObjectURL(e.target.files[0]),\r\n    });\r\n    setImgFile(newFile);\r\n    if (newFile && imgError.imgFile) {\r\n      setImgError({ imgFile: null });\r\n    }\r\n    console.log(newFile.preview);\r\n  };\r\n\r\n  useEffect(\r\n    () => () => {\r\n      // Make sure to revoke the data uris to avoid memory leaks\r\n      if (imgFile) {\r\n        URL.revokeObjectURL(imgFile.preview);\r\n      }\r\n    },\r\n    [imgFile]\r\n  );\r\n\r\n  const handleChangePicture = async (e) => {\r\n    e.preventDefault();\r\n    if (!imgFile) {\r\n      setImgError({ imgFile: \"No image uploaded!\" });\r\n    } else {\r\n      const data = new FormData();\r\n      data.append(\"file\", imgFile);\r\n      console.log(data);\r\n      const updatePicture = async () => {\r\n        try {\r\n          const uploadFileRes = await axios.post(\"/api/upload/person\", data);\r\n          if (uploadFileRes.status === 200) {\r\n            const newProfilePicture = {\r\n              profilePicture: uploadFileRes.data.imagePath,\r\n            };\r\n            const newUser = { ...user, ...newProfilePicture };\r\n            console.log(newUser);\r\n\r\n            const res = await axios.put(\"/api/users/\" + user._id, {\r\n              profilePicture: uploadFileRes.data.imagePath,\r\n            });\r\n            if (res.status === 200) {\r\n              dispatch({\r\n                type: \"UPDATE\",\r\n                payload: { user: newUser, sock: sockio },\r\n              });\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n\r\n      await updatePicture();\r\n      setImgFile(null);\r\n    }\r\n  };\r\n\r\n  //Below is for Form Control for password\r\n  const setField = (field, value) => {\r\n    setForm({\r\n      ...form,\r\n      [field]: value,\r\n    });\r\n\r\n    //if error exists, remove them from the error object\r\n    if (!!errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: null,\r\n      });\r\n    }\r\n\r\n    if (passwordUpdateValid) {\r\n      setPasswordUpdateValid(false);\r\n    }\r\n  };\r\n\r\n  //handles Password submit\r\n  const handleSubmitPassword = async (e) => {\r\n    e.preventDefault();\r\n    setPasswordUpdateValid(false);\r\n    const newErrors = findFormErrors();\r\n    if (Object.keys(newErrors).length > 0) {\r\n      setErrors(newErrors);\r\n      console.log(newErrors);\r\n    } else {\r\n      const updatePassword = async () => {\r\n        try {\r\n          const res = await axios.put(\"/api/auth/updatePassword/\" + user._id, {\r\n            currentPassword: form.currentPassword,\r\n            newPassword: form.newPassword,\r\n          });\r\n          if (\r\n            res &&\r\n            res.status === 200 &&\r\n            res.data.message === \"User password has been updated\"\r\n          ) {\r\n            setPasswordUpdateValid(true);\r\n            setForm({\r\n              showPassword: false,\r\n              confirmPassword: \"\",\r\n              newPassword: \"\",\r\n              currentPassword: \"\",\r\n            });\r\n          } else if (\r\n            res &&\r\n            res.status === 200 &&\r\n            res.data.message === \"wrong password\"\r\n          ) {\r\n            const wrongPasswordError = { currentPassword: \"Wrong Password!\" };\r\n            setErrors({\r\n              ...errors,\r\n              ...wrongPasswordError,\r\n            });\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      };\r\n      await updatePassword();\r\n    }\r\n  };\r\n\r\n  //function for finding errors in password form\r\n  const findFormErrors = () => {\r\n    const { currentPassword, newPassword, confirmPassword } = form;\r\n    const newErrors = {};\r\n\r\n    if (!currentPassword || currentPassword === \"\") {\r\n      newErrors.currentPassword = \"Current password cannot be empty!\";\r\n    }\r\n\r\n    if (!newPassword || newPassword.length < 6) {\r\n      newErrors.newPassword = \"New password must have at least 6 characters!\";\r\n    }\r\n\r\n    if (!confirmPassword || confirmPassword !== newPassword) {\r\n      newErrors.confirmPassword = \"New and confirm passwords do not match!\";\r\n    }\r\n\r\n    return newErrors;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"settingsContainer\">\r\n        <SideBar sidebarUser={user} />\r\n        <div className=\"settingsRight\">\r\n          <span className=\"settingsHeader\">Settings</span>\r\n          <Container className=\"settingsWrapper\">\r\n            <Card\r\n              style={{ width: \"60em\", height: \"19em\" }}\r\n              className=\"settingsUserProfileContainer shadow p-3 mb-5 bg-white rounded\"\r\n            >\r\n              <span className=\"settingsUserProfileHeader\">User Profile</span>\r\n              <Container>\r\n                <Row>\r\n                  <Col>\r\n                    <img\r\n                      src={\r\n                        imgFile && imgFile.preview\r\n                          ? imgFile.preview\r\n                          : user && user.profilePicture\r\n                          ? PF + user.profilePicture\r\n                          : \"/assests/userProfile.png\"\r\n                      }\r\n                      alt=\"\"\r\n                      className=\"userProfileImg\"\r\n                    />\r\n                  </Col>\r\n                  <Col>\r\n                    <div className=\"settingsImgInstructions\">\r\n                      <div className=\"settingsImgInstructionsText\">\r\n                        Upload a profile picture of yourself to help others know\r\n                        more about you!\r\n                      </div>\r\n                      <Form.Group>\r\n                        <Form.Control\r\n                          className=\"imgUploadButton\"\r\n                          as=\"input\"\r\n                          name=\"image-upload\"\r\n                          type=\"file\"\r\n                          accept=\"image/*\"\r\n                          onChange={imageHandler}\r\n                          isInvalid={!!imgError.imgFile}\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {imgError.imgFile}\r\n                        </Form.Control.Feedback>\r\n                      </Form.Group>\r\n                      <Button\r\n                        className=\"changeProfilePictureButton\"\r\n                        variant=\"warning\"\r\n                        onClick={handleChangePicture}\r\n                      >\r\n                        Change profile picture\r\n                      </Button>\r\n                    </div>\r\n                    {/* <div>{user.profilePicture}</div> */}\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Card>\r\n            <Card\r\n              style={{ width: \"60em\" }}\r\n              className=\"settingsPasswordContainer shadow p-3 mb-5 bg-white rounded\"\r\n            >\r\n              <span className=\"settingsPasswordHeader\">Password</span>\r\n              <Form>\r\n                <div className=\"passwordInputWrapper\">\r\n                  <Form.Group controlId=\"oldPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"currentPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"Current Password\"\r\n                      value={form.currentPassword}\r\n                      onChange={(e) =>\r\n                        setField(\"currentPassword\", e.target.value)\r\n                      }\r\n                      isInvalid={!!errors.currentPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.currentPassword}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"newPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"newPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"New Password\"\r\n                      value={form.newPassword}\r\n                      onChange={(e) => setField(\"newPassword\", e.target.value)}\r\n                      isInvalid={!!errors.newPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.newPassword}\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                  <Form.Group controlId=\"confirmPassword\">\r\n                    <Form.Control\r\n                      className=\"passwordInput\"\r\n                      name=\"confirmPassword\"\r\n                      type={form.showPassword ? \"text\" : \"password\"}\r\n                      placeHolder=\"Confirm Password\"\r\n                      value={form.confirmPassword}\r\n                      onChange={(e) =>\r\n                        setField(\"confirmPassword\", e.target.value)\r\n                      }\r\n                      isInvalid={!!errors.confirmPassword}\r\n                      isValid={passwordUpdateValid}\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                      {errors.confirmPassword}\r\n                    </Form.Control.Feedback>\r\n                    <Form.Control.Feedback type=\"valid\">\r\n                      \"Password updated successfully\"\r\n                    </Form.Control.Feedback>\r\n                  </Form.Group>\r\n                </div>\r\n                <div>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={form.showPassword}\r\n                    onClick={() => setField(\"showPassword\", !form.showPassword)}\r\n                  />\r\n                  <label className=\"checkboxLabel\">Show input</label>\r\n                </div>\r\n                <div>\r\n                  <Button\r\n                    className=\"passwordButton\"\r\n                    variant=\"warning\"\r\n                    onClick={handleSubmitPassword}\r\n                  >\r\n                    Update password\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Card>\r\n          </Container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./groupSidebar.css\";\r\nimport {\r\n  CDBSidebar,\r\n  CDBSidebarContent,\r\n  CDBSidebarFooter,\r\n  CDBSidebarHeader,\r\n  CDBSidebarMenu,\r\n  CDBSidebarMenuItem,\r\n} from \"cdbreact\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function GroupSidebar({\r\n  group,\r\n  isGroupMember,\r\n  handleLeave,\r\n  handleJoin,\r\n  handleUpdateGroup,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [showInviteInput, setShowInviteInput] = useState(false);\r\n  const [newImgLink, setNewImgLink] = useState(null);\r\n  const [inviteError, setInviteError] = useState(\"\");\r\n  const [inviteNameInput, setInviteNameInput] = useState(\"\");\r\n  const [inviteSuccess, setInviteSuccess] = useState(\"\");\r\n  const [editedDescription, setEditedDescription] = useState(\"\"); //the text to be shown in the textarea during edit of description\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (group) {\r\n      setEditedDescription(\r\n        group.description + \"(Delete this and press 'Enter' when done editing)\"\r\n      );\r\n    }\r\n  }, [group]);\r\n\r\n  const handleInviteButton = () => {\r\n    showInviteInput ? setShowInviteInput(false) : setShowInviteInput(true);\r\n  };\r\n\r\n  const handleKeyDownInvite = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setInviteNameInput(inviteNameInput);\r\n      if ((inviteNameInput.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"invitation name is empty!\");\r\n        setInviteNameInput(\"\");\r\n      } else {\r\n        console.log(\"trying to find user to invite...\");\r\n        try {\r\n          const res = await axios.get(\"/api/users?username=\" + inviteNameInput);\r\n          if (res.status === 200 && group && res.data) {\r\n            if (group.members.includes(res.data._id)) {\r\n              setInviteError(\"User already in this group!\");\r\n            } else {\r\n              //get the notification with this group and user first\r\n              const getNotiRes = await axios.get(\r\n                \"/api/notifications/filter?userId=\" +\r\n                  res.data._id +\r\n                  \"&invitationId=\" +\r\n                  group._id\r\n              );\r\n              //If notification exist, check if the notification senderNames contain current user, setError if yes, update notification otherwise\r\n              if (getNotiRes.status === 200 && getNotiRes.data.length > 0) {\r\n                if (getNotiRes.data[0].senderName.includes(user.username)) {\r\n                  setInviteError(\r\n                    \"User previously invited and has not responded!\"\r\n                  );\r\n                } else {\r\n                  const updateNotiRes = await axios.put(\r\n                    \"/api/notifications/\" +\r\n                      getNotiRes.data[0]._id +\r\n                      \"/addSender/\" +\r\n                      user.username\r\n                  );\r\n                  if (updateNotiRes.status === 200) {\r\n                    setInviteNameInput(\"\");\r\n                    setInviteSuccess(\"Invitation sent!\");\r\n                  } else {\r\n                    setInviteError(\"Server error. Unable to send notification\");\r\n                  }\r\n                }\r\n              } else {\r\n                //Else if notification does not exist, do the below\r\n                const newNotification = {\r\n                  senderName: [user.username],\r\n                  receiverId: res.data._id,\r\n                  invitationId: group._id,\r\n                  invitationName: group.groupName,\r\n                };\r\n                const notificationRes = await axios.post(\r\n                  \"/api/notifications\",\r\n                  newNotification\r\n                );\r\n                if (notificationRes.status === 200) {\r\n                  setInviteNameInput(\"\");\r\n                  setInviteSuccess(\"Invitation sent!\");\r\n                } else {\r\n                  setInviteError(\"Server error. Unable to send notification\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        } catch (err) {\r\n          console.log(err);\r\n          setInviteError(\"User not found!\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDownDescription = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setEditedDescription(editedDescription);\r\n      if ((editedDescription.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"editedDescription is empty!\");\r\n        setDescriptionError(\"Description cannot be empty!\");\r\n        return;\r\n      }\r\n      if (editedDescription.length > 200) {\r\n        setDescriptionError(\"Description cannot exceed 200 characters!\");\r\n        return;\r\n      }\r\n      try {\r\n        const newGroupDescription = {\r\n          description: editedDescription,\r\n        };\r\n        //update group in database\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id,\r\n          newGroupDescription\r\n        );\r\n        if (res.status === 200) {\r\n          setEditMode(false);\r\n          handleUpdateGroup(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n        setDescriptionError(\"Server error: unable to update!\");\r\n        setEditMode(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const inviteComponent = (\r\n    <div className=\"inviteComponentWrapper\">\r\n      <div className=\"inviteComponentContainer\">\r\n        <span className=\"inviteComponentText\">Who do you want to invite?</span>\r\n        <input\r\n          className=\"inviteComponentInput\"\r\n          placeholder=\"Input name and Enter...\"\r\n          value={inviteNameInput}\r\n          onChange={(e) => {\r\n            setInviteNameInput(e.target.value);\r\n            if (inviteError !== \"\") {\r\n              setInviteError(\"\");\r\n            }\r\n            if (inviteSuccess !== \"\") {\r\n              setInviteSuccess(\"\");\r\n            }\r\n          }}\r\n          onKeyDown={handleKeyDownInvite}\r\n        />\r\n        <div className=\"inviteComponentErrorMessage\">{inviteError}</div>\r\n        <div className=\"inviteComponentSuccessMessage\">{inviteSuccess}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const handleClickGroupPicture = () => {\r\n    if (user && group && user._id === group.creatorId) {\r\n      alert(\"Close this dialogue and select image to upload\");\r\n      document.getElementById(\"groupImageUploadInput\").click();\r\n    } else {\r\n      alert(\r\n        \"You must be logged in and be the creator of this group to change the group photo\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleUploadGroupImage = async (e) => {\r\n    if (e.target.files[0]) {\r\n      const imageFile = e.target.files[0];\r\n      console.log(imageFile);\r\n      try {\r\n        const data = new FormData();\r\n        data.append(\"file\", imageFile);\r\n        //upload picture to storage and get new filename\r\n        const uploadFileRes = await axios.post(\"/api/upload/group\", data);\r\n        if (uploadFileRes.status === 200 && group) {\r\n          const newGroupPicture = {\r\n            groupImg: uploadFileRes.data.imagePath,\r\n          };\r\n          console.log(newGroupPicture);\r\n          //update group in database\r\n          const res = await axios.put(\r\n            \"/api/groups/\" + group._id,\r\n            newGroupPicture\r\n          );\r\n          if (res.status === 200) {\r\n            setNewImgLink(uploadFileRes.data.imagePath);\r\n          }\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleGroupHome = () => {\r\n    if (group) {\r\n      history.push(\"/groups/\" + group._id + \"/main\");\r\n    }\r\n  };\r\n\r\n  const handleMyPosts = () => {\r\n    if (group) {\r\n      history.push(\"/groups/\" + group._id + \"/myPosts\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"GroupSidebarWrapper\">\r\n      <CDBSidebar textColor=\"black\" backgroundColor=\"#FFD68D\">\r\n        <CDBSidebarHeader prefix={<i className=\"fa fa-bars fa-large\"></i>}>\r\n          <div className=\"groupProfileDiv\">\r\n            <img\r\n              className=\"groupProfile\"\r\n              src={\r\n                newImgLink\r\n                  ? PF + newImgLink\r\n                  : group?.groupImg\r\n                  ? PF + group.groupImg\r\n                  : PF + \"group/noImageUploaded.png\"\r\n              }\r\n              alt=\"\"\r\n              onClick={handleClickGroupPicture}\r\n            />\r\n            <input\r\n              style={{ display: \"none\" }}\r\n              type=\"file\"\r\n              id=\"groupImageUploadInput\"\r\n              accept=\"image/*\"\r\n              onChange={handleUploadGroupImage}\r\n            />\r\n          </div>\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarHeader style={{ textAlign: \"center\" }}>\r\n          <div className=\"groupNameWrapper\">\r\n            <div className=\"groupName\">\r\n              <span className=\"groupNameText\">\r\n                {group?.groupName ? group.groupName : \"No Group Name\"}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          {isGroupMember ? (\r\n            <div>\r\n              <div className=\"groupInviteButtonWrapper\">\r\n                <div className=\"groupInviteButton\" onClick={handleInviteButton}>\r\n                  <span className=\"groupInviteButtonText\">+ Invite</span>\r\n                </div>\r\n\r\n                {/* {showInviteInput ? inviteComponent : <></>} */}\r\n              </div>\r\n              <div>{showInviteInput ? inviteComponent : <></>}</div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"groupJoinButtonWrapper\">\r\n              <div className=\"groupJoinButton\" onClick={handleJoin}>\r\n                <span className=\"groupJoinButtonText\">+ Join Group</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CDBSidebarHeader>\r\n        <CDBSidebarContent>\r\n          <CDBSidebarMenu>\r\n            <div className=\"groupDescriptionContainer\">\r\n              <div className=\"groupDescriptionHeader\">\r\n                <div className=\"groupDescriptionHeaderText\">\r\n                  Group Description:\r\n                </div>\r\n                {user && group && user._id === group.creatorId && !editMode ? (\r\n                  <div\r\n                    className=\"groupDescriptionHeaderEdit\"\r\n                    onClick={() => setEditMode(true)}\r\n                  >\r\n                    edit\r\n                  </div>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n              {editMode ? (\r\n                <>\r\n                  <textarea\r\n                    className=\"groupDescriptionTextArea\"\r\n                    rows={6}\r\n                    value={editedDescription}\r\n                    onChange={(e) => {\r\n                      if (descriptionError !== \"\") {\r\n                        setDescriptionError(\"\");\r\n                      }\r\n                      setEditedDescription(e.target.value);\r\n                    }}\r\n                    onKeyDown={handleKeyDownDescription}\r\n                  />\r\n                  <div className=\"groupDescriptionError\">\r\n                    {descriptionError}\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <div className=\"groupDescriptionContent\">\r\n                  {group?.description\r\n                    ? group.description\r\n                    : \"This group creator has left no description of this group\"}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <CDBSidebarMenuItem\r\n              className=\"groupMenuItem\"\r\n              onClick={handleGroupHome}\r\n            >\r\n              <HomeIcon className=\"groupMyPostsIcon\" />\r\n              <span className=\"groupMyPosts\">Group Home</span>\r\n            </CDBSidebarMenuItem>\r\n            {isGroupMember ? (\r\n              <CDBSidebarMenuItem\r\n                className=\"groupMenuItem\"\r\n                onClick={handleMyPosts}\r\n              >\r\n                <CreateIcon className=\"groupMyPostsIcon\" />\r\n                <span className=\"groupMyPosts\">My Posts</span>\r\n              </CDBSidebarMenuItem>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </CDBSidebarMenu>\r\n        </CDBSidebarContent>\r\n        <CDBSidebarFooter>\r\n          {isGroupMember ? (\r\n            <div className=\"groupLeaveButtonWrapper\">\r\n              <div className=\"groupLeaveButton\" onClick={handleLeave}>\r\n                <span className=\"groupLeaveButtonText\">Leave Group</span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </CDBSidebarFooter>\r\n      </CDBSidebar>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./groupSharePost.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\n\r\nexport default function GroupSharePost({ handleAdd }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [description, setDescription] = useState(\"\");\r\n  const [itemId, setItemId] = useState(\"\");\r\n  const [itemError, setItemError] = useState(\"\");\r\n  const [descriptionError, setDescriptionError] = useState(\"\");\r\n\r\n  const handlePost = async () => {\r\n    if ((itemId.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      setItemError(\"Item ID cannot be empty!\");\r\n      return;\r\n    }\r\n    if ((description.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n      setDescriptionError(\"Description cannot be empty!\");\r\n      return;\r\n    }\r\n    console.log(\"itemId: \" + itemId);\r\n    console.log(\"description: \" + description);\r\n    try {\r\n      const findItemRes = await axios.get(\"/api/items?itemId=\" + itemId);\r\n      if (!findItemRes.data) {\r\n        setItemError(\"Item with given Item ID does not exist!\");\r\n        return;\r\n      }\r\n      if (!user || findItemRes.data.userId !== user._id) {\r\n        setItemError(\"Item with given ID does not belong to you!\");\r\n        return;\r\n      }\r\n      const itemIdTemp = itemId;\r\n      const descriptionTemp = description;\r\n      setItemId(\"\");\r\n      setDescription(\"\");\r\n      handleAdd(itemIdTemp, descriptionTemp);\r\n    } catch (err) {\r\n      console.log(err);\r\n      setItemError(\"Item with given Item ID does not exist!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"groupSharePostWrapper\">\r\n      <div className=\"groupSharePostContainer\">\r\n        <div className=\"sharePostTop\">\r\n          <div className=\"sharePostTopContainer\">\r\n            <img\r\n              className=\"sharePostProfileImg\"\r\n              src={\r\n                user?.profilePicture\r\n                  ? PF + user.profilePicture\r\n                  : PF + \"person/noAvatar.png\"\r\n              }\r\n              alt=\"\"\r\n            />\r\n            <span className=\"sharePostProfileText\">\r\n              {user?.username ? user.username : \"No Name\"}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"sharePostContainer\">\r\n          <div className=\"sharePostContainerWrapper\">\r\n            <div className=\"sharePostContainerTop\">\r\n              <div className=\"sharePostContainerItemId\">\r\n                <input\r\n                  value={itemId}\r\n                  onChange={(e) => {\r\n                    setItemId(e.target.value);\r\n                    if (itemError !== \"\") {\r\n                      setItemError(\"\");\r\n                    }\r\n                  }}\r\n                  className=\"sharePostContainerItemIdInput\"\r\n                  placeholder=\"Input your post ID...\"\r\n                />\r\n                <span className=\"sharePostContainerErrorMessage\">\r\n                  {itemError}\r\n                </span>\r\n              </div>\r\n              <div className=\"sharePostButton\" onClick={handlePost}>\r\n                Post\r\n              </div>\r\n            </div>\r\n            <div className=\"sharePostContainerTextArea\">\r\n              <textarea\r\n                value={description}\r\n                onChange={(e) => {\r\n                  setDescription(e.target.value);\r\n                  if (descriptionError !== \"\") {\r\n                    setDescriptionError(\"\");\r\n                  }\r\n                }}\r\n                className=\"sharePostContainerTextAreaInput\"\r\n                placeholder=\"Describe your post...\"\r\n              />\r\n              <span className=\"sharePostContainerErrorMessage\">\r\n                {descriptionError}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./comment.css\";\r\n\r\nexport default function Comment({\r\n  commentText,\r\n  commentUserId,\r\n  own,\r\n  handleDelete,\r\n}) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const [commentUser, setCommentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getCommentUser = async () => {\r\n      try {\r\n        const res = await axios(\"/api/users?userId=\" + commentUserId);\r\n        await setCommentUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getCommentUser();\r\n  }, [commentUserId]);\r\n\r\n  return (\r\n    <div className=\"commentWrapper\">\r\n      <div className=\"commentContainer\">\r\n        <div className=\"commentUserDetails\">\r\n          <img\r\n            className=\"commentProfileImg\"\r\n            src={\r\n              commentUser && commentUser.profilePicture\r\n                ? PF + commentUser.profilePicture\r\n                : PF + \"person/noAvatar.png\"\r\n            }\r\n            alt=\"\"\r\n          />\r\n          <span className=\"commentProfileText\">\r\n            {commentUser?.username ? commentUser.username : \"No Name\"}\r\n          </span>\r\n        </div>\r\n        <div className=\"commentUserContent\">{commentText}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./post.css\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport TextsmsOutlinedIcon from \"@material-ui/icons/TextsmsOutlined\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport ItemListing from \"../itemListing/ItemListing\";\r\nimport Comment from \"../comment/Comment\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Post({ post, handleDelete, canCommentAndLike }) {\r\n  const PF = process.env.REACT_APP_PUBLIC_FOLDER;\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const [postUser, setPostUser] = useState(null);\r\n  const [postComments, setPostComments] = useState([]);\r\n  const [postItem, setPostItem] = useState(null);\r\n  const [incomingComment, setIncomingComment] = useState(\"\");\r\n  const [liked, setLiked] = useState(false);\r\n  const [displayLikeCount, setDisplayLikeCount] = useState(0);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getPostUser = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/users?userId=\" + post?.postUserId);\r\n        await setPostUser(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostUser();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const getPostComments = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/comments/filter?postId=\" + post?._id);\r\n        await setPostComments(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostComments();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    const getPostItem = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/items?itemId=\" + post?.itemId);\r\n        await setPostItem(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getPostItem();\r\n  }, [post]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setDisplayLikeCount(post.likedBy.length);\r\n      if (user) {\r\n        setLiked(post.likedBy.includes(user._id));\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n    }\r\n  }, [post, user]);\r\n\r\n  //handles new comment when user press enter\r\n  const handleKeyDownComment = async (e) => {\r\n    if (e.key === \"Enter\") {\r\n      e.preventDefault();\r\n      setIncomingComment(incomingComment);\r\n      if ((incomingComment.match(/^\\s*\\n*\\t*$/) || []).length > 0) {\r\n        console.log(\"comment is empty!\");\r\n        setIncomingComment(\"\");\r\n      } else {\r\n        console.log(\"adding new comment...\");\r\n        const newComment = {\r\n          postId: post._id,\r\n          commentUserId: user._id,\r\n          commentText: incomingComment,\r\n        };\r\n        try {\r\n          setIncomingComment(\"\");\r\n          const res = await axios.post(\"/api/comments\", newComment);\r\n          await setPostComments([...postComments, res.data]);\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  //handles the event when user clicks swapAway\r\n  const handleSwapAway = async () => {\r\n    if (!user) {\r\n      history.push(\"/\");\r\n      console.log(\"pushed to login\");\r\n    } else {\r\n      const res = await axios.get(\r\n        \"/api/conversations/find/\" + user._id + \"/\" + post.postUserId\r\n      );\r\n      if (res.data.length > 0) {\r\n        history.push(\"/chat/\" + res.data[0]._id);\r\n        console.log(\"pushed to chat id:\" + res.data[0]._id);\r\n      } else {\r\n        const newConvo = await axios.post(\"/api/conversations\", {\r\n          members: [post.postUserId, user._id],\r\n        });\r\n        //chatFollow is not used for now\r\n        history.push(\"/chat/\" + newConvo._id); //likely works but needs to be tested\r\n        console.log(newConvo.data);\r\n      }\r\n    }\r\n  };\r\n\r\n  //handles like and dislike\r\n  const handleDislike = async () => {\r\n    if (canCommentAndLike) {\r\n      setLiked(false);\r\n      setDisplayLikeCount(displayLikeCount - 1);\r\n      try {\r\n        const res = await axios.put(\r\n          \"/api/posts/\" + post._id + \"/removeLike/\" + user?._id\r\n        );\r\n        // if (res.status === 200) {\r\n        // }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You cannot dislike this post as you are either not logged in or not a member of this group!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleLike = async () => {\r\n    if (canCommentAndLike) {\r\n      setLiked(true);\r\n      setDisplayLikeCount(displayLikeCount + 1);\r\n      try {\r\n        const res = await axios.put(\r\n          \"/api/posts/\" + post._id + \"/addLike/\" + user?._id\r\n        );\r\n        // if (res.status === 200) {\r\n        // }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    } else {\r\n      alert(\r\n        \"You cannot like this post as you are either not logged in or not a member of this group!\"\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleViewProfile = () => {\r\n    if (postUser) {\r\n      history.push(\"/profile/\" + postUser.username + \"/listings\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"postWrapper\">\r\n      <div className=\"postContainer\">\r\n        <div className=\"postTop\">\r\n          {/* <div className=\"postTopContainer\"> */}\r\n          <Row className=\"postTopContainerWrapper\">\r\n            <Col className=\"postTopContainerLeft\">\r\n              <img\r\n                className=\"postProfileImg\"\r\n                src={\r\n                  postUser && postUser.profilePicture\r\n                    ? PF + postUser.profilePicture\r\n                    : PF + \"person/noAvatar.png\"\r\n                }\r\n                alt=\"\"\r\n                onClick={handleViewProfile}\r\n              />\r\n              <span className=\"postProfileText\">\r\n                {postUser?.username ? postUser.username : \"No Name\"}\r\n              </span>\r\n            </Col>\r\n            <Col className=\"postTopContainerRight\">\r\n              {user && user._id === post.postUserId ? (\r\n                <div className=\"deleteButtonWrapper\">\r\n                  <div\r\n                    className=\"deleteButton\"\r\n                    onClick={() => handleDelete(post._id)}\r\n                  >\r\n                    <span className=\"deleteButtonText\">Delete</span>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"postSwapButtonWrapper\">\r\n                  <div className=\"postSwapButton\" onClick={handleSwapAway}>\r\n                    <TextsmsOutlinedIcon className=\"chatIcon\" />\r\n                    <span className=\"postSwapButtonText\">Swap Away!</span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n          {/* </div> */}\r\n        </div>\r\n        <div className=\"postMiddle\">\r\n          <div className=\"postMiddleDescription\">\r\n            <div className=\"postMiddleDescriptionContainer\">\r\n              {post?.description\r\n                ? post.description\r\n                : \"No description available\"}\r\n            </div>\r\n          </div>\r\n          <div className=\"postMiddleItemListing\">\r\n            <ItemListing item={postItem} inPost={true} />\r\n          </div>\r\n          <div className=\"postMiddleItemLikesComments\">\r\n            <div className=\"postMiddleItemLikesCommentsContainer\">\r\n              <div className=\"postMiddleItemLikes\">\r\n                {liked ? (\r\n                  <FavoriteIcon onClick={handleDislike} />\r\n                ) : (\r\n                  <FavoriteBorderIcon onClick={handleLike} />\r\n                )}\r\n                <span className=\"numberLikes\">{displayLikeCount}</span>\r\n              </div>\r\n              <div className=\"postMiddleItemComments\">\r\n                <ChatBubbleOutlineIcon />\r\n                <span className=\"numberComments\">{postComments.length}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"postBottom\">\r\n          {canCommentAndLike && (\r\n            <div className=\"postCommentInputWrapper\">\r\n              <textarea\r\n                value={incomingComment}\r\n                onChange={(e) => setIncomingComment(e.target.value)}\r\n                onKeyDown={handleKeyDownComment}\r\n                className=\"postCommentInput\"\r\n                placeholder=\"Write a comment and press enter to send...\"\r\n              />\r\n            </div>\r\n          )}\r\n          <div className=\"postCommentContentSection\">\r\n            {postComments.map((comment) => (\r\n              <Comment\r\n                commentText={comment.commentText}\r\n                commentUserId={comment.commentUserId}\r\n                key={comment._id}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport \"./group.css\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport GroupSidebar from \"../../components/groupSidebar/GroupSidebar\";\r\nimport GroupSharePost from \"../../components/groupSharePost/GroupSharePost\";\r\nimport Post from \"../../components/post/Post\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nexport default function Group() {\r\n  const { user, sockio } = useContext(AuthContext);\r\n  const groupId = useParams().groupId;\r\n  const pageType = useParams().pageType;\r\n  const [displayPosts, setDisplayPosts] = useState([]);\r\n  const [group, setGroup] = useState(null);\r\n  const [isGroupMember, setIsGroupMember] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const getGroup = async () => {\r\n      try {\r\n        const res = await axios.get(\"/api/groups?groupId=\" + groupId);\r\n        await setGroup(res.data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getGroup();\r\n  }, [groupId]);\r\n\r\n  useEffect(() => {\r\n    if (group && user) {\r\n      setIsGroupMember(group.members.includes(user._id));\r\n    }\r\n  }, [group, user]);\r\n\r\n  useEffect(() => {\r\n    const getDisplayPosts = async () => {\r\n      try {\r\n        if (pageType === \"main\") {\r\n          console.log(\"page type is main\");\r\n          const res = await axios.get(\"/api/posts/filter?groupId=\" + groupId);\r\n          await setDisplayPosts(res.data);\r\n        } else if (pageType === \"myPosts\") {\r\n          console.log(\"page type is myPosts\");\r\n          const res = await axios.get(\r\n            \"/api/posts/filter?groupId=\" + groupId + \"&userId=\" + user?._id\r\n          );\r\n          await setDisplayPosts(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getDisplayPosts();\r\n  }, [pageType, groupId, user]);\r\n\r\n  const handleUpdateGroupNotification = (group) => {\r\n    if (group && group.length > 0 && group[0] && user) {\r\n      setIsGroupMember(group[0].members.includes(user._id));\r\n    }\r\n  };\r\n\r\n  //passed into Post component to delete post\r\n  const handleDelete = async (postId) => {\r\n    try {\r\n      console.log(\"deleting post with id: \" + postId); //60f7f6e319807816605c790c\r\n      const res = await axios.delete(\"/api/posts?postId=\" + postId);\r\n      if (res.status === 200) {\r\n        console.log(res.data.message);\r\n        setDisplayPosts(displayPosts.filter((post) => post._id !== postId));\r\n        await axios.delete(\"/api/comments/filter?postId=\" + postId); //delete all comments of this post from database at last to avoid waiting\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //passed into GroupSharePost component to add post\r\n  const handleAdd = async (itemId, description) => {\r\n    try {\r\n      if (group && user) {\r\n        const newPost = {\r\n          groupId: group._id,\r\n          postUserId: user._id,\r\n          description: description,\r\n          itemId: itemId,\r\n        };\r\n        console.log(newPost);\r\n        const res = await axios.post(\"/api/posts\", newPost);\r\n        if (res.status === 200) {\r\n          setDisplayPosts([res.data, ...displayPosts]);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  //passed into GroupSideBar to change isGroupMember and update database\r\n  const handleLeave = async () => {\r\n    //try without updating the group\r\n    try {\r\n      if (group && user) {\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id + \"/removeMember/\" + user._id\r\n        );\r\n        if (res.status === 200) {\r\n          setIsGroupMember(false);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    try {\r\n      if (!user) {\r\n        history.push(\"/\");\r\n      }\r\n      if (group && user) {\r\n        const res = await axios.put(\r\n          \"/api/groups/\" + group._id + \"/addMember/\" + user._id\r\n        );\r\n        if (res.status === 200) {\r\n          setIsGroupMember(true);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleUpdateGroup = (group) => {\r\n    if (group) {\r\n      setGroup(group);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"groupPageTop\">\r\n        <TopBar\r\n          currentUser={user}\r\n          handleUpdateGroup={handleUpdateGroupNotification}\r\n        />\r\n      </div>\r\n      <div className=\"groupPageContainer\">\r\n        <div className=\"groupSidebarWrapper\">\r\n          <GroupSidebar\r\n            className=\"groupSidebarComponent\"\r\n            group={group}\r\n            isGroupMember={isGroupMember}\r\n            handleLeave={handleLeave}\r\n            handleJoin={handleJoin}\r\n            handleUpdateGroup={handleUpdateGroup}\r\n          />\r\n        </div>\r\n        <div className=\"groupPageContainerRight\">\r\n          <div className=\"groupPagecontainerRightShareWrapper\">\r\n            {group && user && isGroupMember && pageType === \"main\" ? (\r\n              <GroupSharePost handleAdd={handleAdd} />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          {displayPosts.map((post) => (\r\n            <Post\r\n              post={post}\r\n              key={post._id}\r\n              handleDelete={handleDelete}\r\n              canCommentAndLike={group && user && isGroupMember}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport TopBar from \"../../components/topbar/TopBar\";\r\nimport GroupIcon from \"../../components/groupIcon/GroupIcon\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport \"./groupList.css\";\r\n\r\nexport default function GroupList() {\r\n  const searchText = useParams().searchText;\r\n  const [groups, setGroups] = useState([]);\r\n  const { user, sockio } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    const getGroups = async () => {\r\n      try {\r\n        if (searchText) {\r\n          const res = await axios.get(\"/api/groups?search=\" + searchText);\r\n          await setGroups(res.data);\r\n        }\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n    getGroups();\r\n  }, [searchText]);\r\n  return (\r\n    <div>\r\n      <TopBar currentUser={user} />\r\n      <div className=\"productWrapper\">\r\n        <div className=\"productHeader\">\r\n          {searchText ? \"Search results for: \" + searchText : \"\"}\r\n        </div>\r\n        <Row className=\"listingRow\" xl={5} lg={4} md={3} sm={2}>\r\n          {groups.map((group) => (\r\n            <div>\r\n              <GroupIcon\r\n                key={group._id}\r\n                groupImg={group.groupImg}\r\n                groupName={group.groupName}\r\n                groupId={group._id}\r\n              />\r\n            </div>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\r\nimport Home from \"./pages/home/Home\";\r\nimport Register from \"./pages/register/Register\";\r\nimport UserListing from \"./pages/userlisting/UserListing\";\r\nimport Review from \"./pages/review/Review\";\r\nimport Product from \"./pages/product/Product\";\r\nimport CreateListing from \"./pages/createListing/CreateListing\";\r\nimport Item from \"./pages/item/Item\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./pages/login/Login\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"./context/AuthContext\";\r\nimport Chat from \"./pages/chat/Chat\";\r\nimport MyGroups from \"./pages/myGroups/MyGroups\";\r\nimport Settings from \"./pages/settings/Settings\";\r\nimport Group from \"./pages/group/Group\";\r\nimport GroupList from \"./pages/groupList/GroupList\";\r\n\r\nfunction App() {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  /*TODO:\r\n  7. show notification count\r\n  9. Change storage system to online storage\r\n  */\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          {user ? <Redirect to=\"/home\" /> : <Login />}\r\n          {/* {user ? <Group /> : <Group />} */}\r\n        </Route>\r\n        <Route path=\"/register\">\r\n          {user ? <Redirect to=\"/home\" /> : <Register />}\r\n        </Route>\r\n        <Route exact path=\"/product/:pageType/:categoryName\">\r\n          <Product />\r\n        </Route>\r\n        <Route exact path=\"/home\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/create\">\r\n          {user ? <CreateListing /> : <Login />}\r\n        </Route>\r\n        <Route exact path=\"/chat/:initialActiveConvoId\">\r\n          {user ? <Chat /> : <Login />}\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/listings\">\r\n          <UserListing />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/reviews\">\r\n          <Review />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/settings\">\r\n          <Settings />\r\n        </Route>\r\n        <Route exact path=\"/profile/:username/mygroups\">\r\n          <MyGroups />\r\n        </Route>\r\n        <Route exact path=\"/items/:itemId\">\r\n          <Item />\r\n        </Route>\r\n        {/* GroupList path must be written before Group */}\r\n        <Route exact path=\"/groups/search/:searchText\">\r\n          <GroupList />\r\n        </Route>\r\n        <Route exact path=\"/groups/:groupId/:pageType\">\r\n          <Group />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { AuthContextProvider } from \"./context/AuthContext\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AuthContextProvider>\r\n      <App />\r\n    </AuthContextProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}